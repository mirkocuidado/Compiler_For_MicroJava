INFO  15:40:05,235 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  15:40:05,303 - #2 program
INFO  15:40:05,304 - #48 MJProgram
INFO  15:40:05,304 - #48 int
INFO  15:40:05,305 - #48 a
INFO  15:40:05,306 - #38 ;
INFO  15:40:05,306 - #40 {
INFO  15:40:05,307 - #5 void
INFO  15:40:05,309 - #48 main
INFO  15:40:05,309 - #42 (
INFO  15:40:05,310 - #43 )
INFO  15:40:05,310 - #48 int
INFO  15:40:05,311 - #48 x
INFO  15:40:05,312 - #36 ,
INFO  15:40:05,312 - #48 xx
INFO  15:40:05,312 - #36 ,
INFO  15:40:05,312 - #48 xxx
INFO  15:40:05,312 - #36 ,
INFO  15:40:05,312 - #48 xxxx
INFO  15:40:05,312 - #36 ,
INFO  15:40:05,312 - #48 xxxxx
INFO  15:40:05,313 - #38 ;
INFO  15:40:05,313 - #48 int
INFO  15:40:05,314 - #48 y
INFO  15:40:05,314 - #36 ,
INFO  15:40:05,314 - #48 yy
INFO  15:40:05,314 - #36 ,
INFO  15:40:05,314 - #48 yyy
INFO  15:40:05,314 - #36 ,
INFO  15:40:05,314 - #48 yyyy
INFO  15:40:05,314 - #36 ,
INFO  15:40:05,314 - #48 yyyyy
INFO  15:40:05,314 - #38 ;
INFO  15:40:05,314 - #40 {
INFO  15:40:05,314 - #18 print
INFO  15:40:05,316 - #42 (
INFO  15:40:05,316 - #47 2
INFO  15:40:05,316 - #43 )
INFO  15:40:05,319 - #38 ;
INFO  15:40:05,319 - #48 y
INFO  15:40:05,319 - #24 =
INFO  15:40:05,320 - #47 3
INFO  15:40:05,321 - #38 ;
INFO  15:40:05,322 - #48 yyyyy
INFO  15:40:05,322 - #24 =
INFO  15:40:05,322 - #47 100
INFO  15:40:05,322 - #38 ;
INFO  15:40:05,322 - #18 print
INFO  15:40:05,322 - #42 (
INFO  15:40:05,322 - #48 yyyyy
INFO  15:40:05,322 - #43 )
INFO  15:40:05,323 - #38 ;
INFO  15:40:05,323 - #18 print
INFO  15:40:05,323 - #42 (
INFO  15:40:05,323 - #48 y
INFO  15:40:05,323 - #43 )
INFO  15:40:05,323 - #38 ;
INFO  15:40:05,323 - #48 a
INFO  15:40:05,323 - #24 =
INFO  15:40:05,324 - #47 4
INFO  15:40:05,324 - #38 ;
INFO  15:40:05,324 - #48 y
INFO  15:40:05,324 - #24 =
INFO  15:40:05,324 - #47 5
INFO  15:40:05,324 - #38 ;
INFO  15:40:05,324 - #18 print
INFO  15:40:05,324 - #42 (
INFO  15:40:05,324 - #48 a
INFO  15:40:05,324 - #43 )
INFO  15:40:05,324 - #38 ;
INFO  15:40:05,324 - #46 return
INFO  15:40:05,325 - #38 ;
INFO  15:40:05,325 - #41 }
INFO  15:40:05,325 - #41 }
INFO  15:40:05,335 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    NoGroupDecl(
    ) [NoGroupDecl]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListSingle(
          VarClassNoArray(
           a
          ) [VarClassNoArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  ProgramLBraceClass(
  ) [ProgramLBraceClass]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListClass(
                    VarListSingle(
                      VarClassNoArray(
                       x
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                    VarClassNoArray(
                     xx
                    ) [VarClassNoArray]
                  ) [VarListClass]
                  VarClassNoArray(
                   xxx
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 xxxx
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               xxxxx
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListSingle(
                    VarClassNoArray(
                     y
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                  VarClassNoArray(
                   yy
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 yyy
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               yyyy
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             yyyyy
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   2
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          NoCommaNumberClass(
                          ) [NoCommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                      Assignment(
                        DesignatorStatementClass(
                          Designator(
                           y
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          DesignatorStatementOptionsClassAssignExpression(
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     3
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [DesignatorStatementClass]
                      ) [Assignment]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementClass(
                        Designator(
                         yyyyy
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        DesignatorStatementOptionsClassAssignExpression(
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   100
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [DesignatorStatementClass]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                               yyyyy
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              NoFactorOptional(
                              ) [NoFactorOptional]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                             y
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            NoFactorOptional(
                            ) [NoFactorOptional]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
              Assignment(
                DesignatorStatementClass(
                  Designator(
                   a
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  DesignatorStatementOptionsClassAssignExpression(
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             4
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [DesignatorStatementClass]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementClass(
                Designator(
                 y
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                DesignatorStatementOptionsClassAssignExpression(
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           5
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [DesignatorStatementClass]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                       a
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      NoFactorOptional(
                      ) [NoFactorOptional]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        ReturnNoExpr(
        ) [ReturnNoExpr]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:40:05,336 - ===================================
INFO  15:40:05,340 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  15:40:05,341 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  15:40:05,341 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  15:40:05,341 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 4
INFO  15:40:05,341 - VARIABLE x IS BEING DEFINED! ON LINE 5
INFO  15:40:05,341 - VARIABLE xx IS BEING DEFINED! ON LINE 5
INFO  15:40:05,341 - VARIABLE xxx IS BEING DEFINED! ON LINE 5
INFO  15:40:05,341 - VARIABLE xxxx IS BEING DEFINED! ON LINE 5
INFO  15:40:05,341 - VARIABLE xxxxx IS BEING DEFINED! ON LINE 5
INFO  15:40:05,341 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 5
INFO  15:40:05,341 - VARIABLE y IS BEING DEFINED! ON LINE 6
INFO  15:40:05,341 - VARIABLE yy IS BEING DEFINED! ON LINE 6
INFO  15:40:05,341 - VARIABLE yyy IS BEING DEFINED! ON LINE 6
INFO  15:40:05,341 - VARIABLE yyyy IS BEING DEFINED! ON LINE 6
INFO  15:40:05,341 - VARIABLE yyyyy IS BEING DEFINED! ON LINE 6
INFO  15:40:05,342 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 6
INFO  15:40:05,342 - METHOD BODY STARTING!
INFO  15:40:05,342 - CONST NUMBER 2 ON LINE 9
INFO  15:40:05,342 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  15:40:05,342 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  15:40:05,342 - PRINT FUNCTION CALL IN USE! ON LINE 9
INFO  15:40:05,342 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  15:40:05,342 - BEGINNING OF AN ASSIGNEMENT! ON LINE 11
INFO  15:40:05,342 - CONST NUMBER 3 ON LINE 11
INFO  15:40:05,342 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  15:40:05,342 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  15:40:05,343 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 11
INFO  15:40:05,343 - CURRENT VARIABLE IN USE IS yyyyy AND IT IS OF TYPE int
INFO  15:40:05,343 - BEGINNING OF AN ASSIGNEMENT! ON LINE 12
INFO  15:40:05,343 - CONST NUMBER 100 ON LINE 12
INFO  15:40:05,343 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  15:40:05,343 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  15:40:05,343 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 12
INFO  15:40:05,343 - CURRENT VARIABLE IN USE IS yyyyy AND IT IS OF TYPE int
INFO  15:40:05,343 - WE ARE USING A VARIABLE OF TYPE int ON LINE 13
INFO  15:40:05,343 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  15:40:05,343 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  15:40:05,343 - PRINT FUNCTION CALL IN USE! ON LINE 13
INFO  15:40:05,343 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  15:40:05,343 - WE ARE USING A VARIABLE OF TYPE int ON LINE 14
INFO  15:40:05,343 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  15:40:05,343 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  15:40:05,343 - PRINT FUNCTION CALL IN USE! ON LINE 14
INFO  15:40:05,344 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  15:40:05,344 - BEGINNING OF AN ASSIGNEMENT! ON LINE 16
INFO  15:40:05,344 - CONST NUMBER 4 ON LINE 16
INFO  15:40:05,344 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  15:40:05,344 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  15:40:05,344 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 16
INFO  15:40:05,344 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  15:40:05,344 - BEGINNING OF AN ASSIGNEMENT! ON LINE 17
INFO  15:40:05,344 - CONST NUMBER 5 ON LINE 17
INFO  15:40:05,344 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  15:40:05,344 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  15:40:05,344 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 17
INFO  15:40:05,344 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  15:40:05,344 - WE ARE USING A VARIABLE OF TYPE int ON LINE 18
INFO  15:40:05,344 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  15:40:05,344 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  15:40:05,344 - PRINT FUNCTION CALL IN USE! ON LINE 18
INFO  15:40:05,345 - return; AND THE FUNCTION IS VOID!
INFO  15:40:05,345 - METHOD BODY ENDING!
INFO  15:40:05,345 - END OF DEFINING FUNCTION main
INFO  15:40:05,345 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  15:40:05,345 -  Deklarisanih promenljivih ima = 11
INFO  15:40:05,345 - ===================================
