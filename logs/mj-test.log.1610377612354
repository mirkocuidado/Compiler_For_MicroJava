INFO  16:06:11,538 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  16:06:11,593 - #2 program
INFO  16:06:11,593 - #48 MJProgram
INFO  16:06:11,593 - #48 int
INFO  16:06:11,595 - #48 a
INFO  16:06:11,595 - #36 ,
INFO  16:06:11,596 - #48 b
INFO  16:06:11,596 - #36 ,
INFO  16:06:11,596 - #48 c
INFO  16:06:11,596 - #36 ,
INFO  16:06:11,596 - #48 d
INFO  16:06:11,596 - #38 ;
INFO  16:06:11,596 - #9 const
INFO  16:06:11,597 - #48 int
INFO  16:06:11,597 - #48 y
INFO  16:06:11,597 - #24 =
INFO  16:06:11,597 - #47 3
INFO  16:06:11,597 - #38 ;
INFO  16:06:11,597 - #40 {
INFO  16:06:11,597 - #48 int
INFO  16:06:11,598 - #48 k
INFO  16:06:11,598 - #42 (
INFO  16:06:11,607 - #43 )
INFO  16:06:11,608 - #40 {
INFO  16:06:11,609 - #46 return
INFO  16:06:11,610 - #47 22
INFO  16:06:11,611 - #38 ;
INFO  16:06:11,613 - #41 }
INFO  16:06:11,613 - #48 char
INFO  16:06:11,614 - #48 s
INFO  16:06:11,614 - #42 (
INFO  16:06:11,614 - #43 )
INFO  16:06:11,615 - #40 {
INFO  16:06:11,615 - #46 return
INFO  16:06:11,615 - #49 c
INFO  16:06:11,615 - #38 ;
INFO  16:06:11,615 - #41 }
INFO  16:06:11,615 - #5 void
INFO  16:06:11,615 - #48 main
INFO  16:06:11,615 - #42 (
INFO  16:06:11,615 - #43 )
INFO  16:06:11,615 - #48 int
INFO  16:06:11,615 - #48 x
INFO  16:06:11,615 - #38 ;
INFO  16:06:11,615 - #48 char
INFO  16:06:11,616 - #48 z
INFO  16:06:11,616 - #38 ;
INFO  16:06:11,616 - #48 bool
INFO  16:06:11,616 - #48 p
INFO  16:06:11,616 - #38 ;
INFO  16:06:11,616 - #40 {
INFO  16:06:11,616 - #18 print
INFO  16:06:11,616 - #42 (
INFO  16:06:11,616 - #47 2
INFO  16:06:11,616 - #43 )
INFO  16:06:11,617 - #38 ;
INFO  16:06:11,617 - #48 y
INFO  16:06:11,617 - #24 =
INFO  16:06:11,619 - #47 4
INFO  16:06:11,620 - #38 ;
INFO  16:06:11,620 - #18 print
INFO  16:06:11,620 - #42 (
INFO  16:06:11,620 - #48 y
INFO  16:06:11,620 - #43 )
INFO  16:06:11,621 - #38 ;
INFO  16:06:11,621 - #41 }
INFO  16:06:11,621 - #41 }
INFO  16:06:11,627 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      NoGroupDecl(
      ) [NoGroupDecl]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 b
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               c
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             d
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
           k
          ) [ReturnValueClassNoVoid]
          NoFormParam(
          ) [NoFormParam]
          NoVarDeclList(
          ) [NoVarDeclList]
          LBraceClass(
          ) [LBraceClass]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              ReturnNonTerminalClass(
              ) [ReturnNonTerminalClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       22
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [ReturnExpr]
          ) [Statements]
          RBraceClass(
          ) [RBraceClass]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           char
          ) [Type]
         s
        ) [ReturnValueClassNoVoid]
        NoFormParam(
        ) [NoFormParam]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    CharConst(
                     c
                    ) [CharConst]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            NoVarDeclList(
            ) [NoVarDeclList]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 x
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               z
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             p
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            PrintStmt(
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       2
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
              NoCommaNumberClass(
              ) [NoCommaNumberClass]
            ) [PrintStmt]
          ) [Statements]
          Assignment(
            DesignatorStatementClass(
              Designator(
               y
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              HelperClass(
              ) [HelperClass]
              DesignatorStatementOptionsClassAssignExpression(
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        NumberConst(
                         4
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [DesignatorStatementClass]
          ) [Assignment]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    HelperClass(
                    ) [HelperClass]
                    Designator(
                     y
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    NoFactorOptional(
                    ) [NoFactorOptional]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:06:11,628 - ===================================
INFO  16:06:11,631 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  16:06:11,631 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  16:06:11,631 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  16:06:11,631 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  16:06:11,631 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  16:06:11,631 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  16:06:11,631 - CONST VALUE 3 IS BEING USED! ON LINE 4
INFO  16:06:11,631 - CONST VARIABLE y IS BEING DEFINED! ON LINE 4
INFO  16:06:11,631 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 7
INFO  16:06:11,631 - METHOD BODY STARTING!
INFO  16:06:11,632 - CONST NUMBER 22 ON LINE 7
INFO  16:06:11,632 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  16:06:11,632 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  16:06:11,632 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 7
INFO  16:06:11,632 - METHOD BODY ENDING!
INFO  16:06:11,632 - END OF DEFINING FUNCTION k
INFO  16:06:11,632 - FUNCTION s WITH RETURN VALUE OF TYPE char ON LINE 9
INFO  16:06:11,632 - METHOD BODY STARTING!
INFO  16:06:11,632 - CONST CHAR c ON LINE 9
INFO  16:06:11,632 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  16:06:11,632 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  16:06:11,632 - SUCCESSFUL RETURN! TYPES: char AND char ! ON LINE 9
INFO  16:06:11,632 - METHOD BODY ENDING!
INFO  16:06:11,632 - END OF DEFINING FUNCTION s
INFO  16:06:11,632 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 11
INFO  16:06:11,632 - VARIABLE x IS BEING DEFINED! ON LINE 12
INFO  16:06:11,632 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 12
INFO  16:06:11,632 - VARIABLE z IS BEING DEFINED! ON LINE 13
INFO  16:06:11,633 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 13
INFO  16:06:11,633 - VARIABLE p IS BEING DEFINED! ON LINE 14
INFO  16:06:11,633 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 14
INFO  16:06:11,633 - METHOD BODY STARTING!
INFO  16:06:11,633 - CONST NUMBER 2 ON LINE 17
INFO  16:06:11,633 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  16:06:11,633 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  16:06:11,633 - PRINT FUNCTION CALL IN USE! ON LINE 17
INFO  16:06:11,633 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  16:06:11,633 - BEGINNING OF AN ASSIGNEMENT! ON LINE 26
INFO  16:06:11,633 - CONST NUMBER 4 ON LINE 26
INFO  16:06:11,633 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:06:11,633 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:06:11,633 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 26
INFO  16:06:11,633 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  16:06:11,633 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  16:06:11,633 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  16:06:11,633 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  16:06:11,634 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  16:06:11,634 - METHOD BODY ENDING!
INFO  16:06:11,634 - END OF DEFINING FUNCTION main
INFO  16:06:11,634 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  16:06:11,634 -  Deklarisanih promenljivih ima = 7
INFO  16:06:11,634 - ===================================
INFO  16:06:11,637 - Parsiranje uspesno zavrseno!
