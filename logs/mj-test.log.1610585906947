INFO  01:58:12,119 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  01:58:12,216 - #2 program
INFO  01:58:12,216 - #43 MJProgram
INFO  01:58:12,216 - #43 int
INFO  01:58:12,218 - #43 a
INFO  01:58:12,219 - #31 ,
INFO  01:58:12,219 - #43 b
INFO  01:58:12,219 - #31 ,
INFO  01:58:12,219 - #43 c
INFO  01:58:12,219 - #31 ,
INFO  01:58:12,219 - #43 d
INFO  01:58:12,219 - #33 ;
INFO  01:58:12,219 - #9 const
INFO  01:58:12,220 - #43 int
INFO  01:58:12,220 - #43 term
INFO  01:58:12,220 - #19 =
INFO  01:58:12,220 - #42 0
INFO  01:58:12,220 - #33 ;
INFO  01:58:12,221 - #9 const
INFO  01:58:12,221 - #43 int
INFO  01:58:12,221 - #43 y
INFO  01:58:12,221 - #19 =
INFO  01:58:12,227 - #42 3
INFO  01:58:12,227 - #33 ;
INFO  01:58:12,227 - #35 {
INFO  01:58:12,227 - #43 int
INFO  01:58:12,228 - #43 k
INFO  01:58:12,228 - #37 (
INFO  01:58:12,228 - #43 int
INFO  01:58:12,228 - #43 a
INFO  01:58:12,228 - #31 ,
INFO  01:58:12,228 - #43 int
INFO  01:58:12,228 - #43 b
INFO  01:58:12,228 - #38 )
INFO  01:58:12,229 - #35 {
INFO  01:58:12,229 - #41 return
INFO  01:58:12,231 - #43 b
INFO  01:58:12,232 - #33 ;
INFO  01:58:12,236 - #36 }
INFO  01:58:12,236 - #5 void
INFO  01:58:12,238 - #43 main
INFO  01:58:12,238 - #37 (
INFO  01:58:12,238 - #38 )
INFO  01:58:12,239 - #43 int
INFO  01:58:12,239 - #43 x
INFO  01:58:12,239 - #33 ;
INFO  01:58:12,239 - #43 bool
INFO  01:58:12,239 - #43 p
INFO  01:58:12,239 - #33 ;
INFO  01:58:12,239 - #43 bool
INFO  01:58:12,239 - #43 r
INFO  01:58:12,239 - #33 ;
INFO  01:58:12,239 - #43 bool
INFO  01:58:12,239 - #43 q
INFO  01:58:12,239 - #33 ;
INFO  01:58:12,240 - #35 {
INFO  01:58:12,240 - #43 p
INFO  01:58:12,240 - #19 =
INFO  01:58:12,240 - #45 false
INFO  01:58:12,241 - #33 ;
INFO  01:58:12,241 - #43 q
INFO  01:58:12,242 - #19 =
INFO  01:58:12,242 - #45 false
INFO  01:58:12,242 - #33 ;
INFO  01:58:12,242 - #43 r
INFO  01:58:12,242 - #19 =
INFO  01:58:12,242 - #45 false
INFO  01:58:12,242 - #33 ;
INFO  01:58:12,242 - #14 if
INFO  01:58:12,242 - #37 (
INFO  01:58:12,242 - #43 p
INFO  01:58:12,242 - #38 )
INFO  01:58:12,245 - #35 {
INFO  01:58:12,245 - #18 print
INFO  01:58:12,245 - #37 (
INFO  01:58:12,245 - #42 100
INFO  01:58:12,245 - #38 )
INFO  01:58:12,246 - #33 ;
INFO  01:58:12,246 - #14 if
INFO  01:58:12,246 - #37 (
INFO  01:58:12,246 - #43 q
INFO  01:58:12,246 - #38 )
INFO  01:58:12,246 - #35 {
INFO  01:58:12,246 - #18 print
INFO  01:58:12,246 - #37 (
INFO  01:58:12,246 - #42 101
INFO  01:58:12,247 - #38 )
INFO  01:58:12,247 - #33 ;
INFO  01:58:12,247 - #36 }
INFO  01:58:12,247 - #15 else
INFO  01:58:12,248 - #14 if
INFO  01:58:12,248 - #37 (
INFO  01:58:12,248 - #43 q
INFO  01:58:12,248 - #38 )
INFO  01:58:12,248 - #35 {
INFO  01:58:12,248 - #18 print
INFO  01:58:12,248 - #37 (
INFO  01:58:12,249 - #42 102
INFO  01:58:12,249 - #38 )
INFO  01:58:12,249 - #33 ;
INFO  01:58:12,249 - #36 }
INFO  01:58:12,249 - #15 else
INFO  01:58:12,249 - #35 {
INFO  01:58:12,249 - #18 print
INFO  01:58:12,249 - #37 (
INFO  01:58:12,249 - #42 103
INFO  01:58:12,249 - #38 )
INFO  01:58:12,249 - #33 ;
INFO  01:58:12,249 - #36 }
INFO  01:58:12,249 - #36 }
INFO  01:58:12,250 - #15 else
INFO  01:58:12,250 - #14 if
INFO  01:58:12,250 - #37 (
INFO  01:58:12,250 - #43 r
INFO  01:58:12,250 - #38 )
INFO  01:58:12,250 - #35 {
INFO  01:58:12,250 - #18 print
INFO  01:58:12,250 - #37 (
INFO  01:58:12,250 - #42 200
INFO  01:58:12,250 - #38 )
INFO  01:58:12,250 - #33 ;
INFO  01:58:12,250 - #14 if
INFO  01:58:12,250 - #37 (
INFO  01:58:12,250 - #43 q
INFO  01:58:12,250 - #38 )
INFO  01:58:12,251 - #35 {
INFO  01:58:12,251 - #18 print
INFO  01:58:12,251 - #37 (
INFO  01:58:12,251 - #42 201
INFO  01:58:12,251 - #38 )
INFO  01:58:12,251 - #33 ;
INFO  01:58:12,251 - #36 }
INFO  01:58:12,251 - #15 else
INFO  01:58:12,251 - #35 {
INFO  01:58:12,251 - #18 print
INFO  01:58:12,251 - #37 (
INFO  01:58:12,251 - #42 202
INFO  01:58:12,251 - #38 )
INFO  01:58:12,251 - #33 ;
INFO  01:58:12,252 - #36 }
INFO  01:58:12,252 - #36 }
INFO  01:58:12,252 - #15 else
INFO  01:58:12,252 - #35 {
INFO  01:58:12,252 - #18 print
INFO  01:58:12,252 - #37 (
INFO  01:58:12,252 - #42 300
INFO  01:58:12,252 - #38 )
INFO  01:58:12,252 - #33 ;
INFO  01:58:12,252 - #36 }
INFO  01:58:12,252 - #18 print
INFO  01:58:12,252 - #37 (
INFO  01:58:12,252 - #42 500
INFO  01:58:12,253 - #38 )
INFO  01:58:12,253 - #33 ;
INFO  01:58:12,253 - #36 }
INFO  01:58:12,253 - #36 }
INFO  01:58:12,261 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListSingle(
                    VarClassNoArray(
                     a
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                  VarClassNoArray(
                   b
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               d
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           int
          ) [Type]
          ConstListSingle(
            ConstListNoArray(
             term
              ValuesNumber(
               0
              ) [ValuesNumber]
            ) [ConstListNoArray]
          ) [ConstListSingle]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassNoArray(
              Type(
               int
              ) [Type]
             b
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         b
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              NoVarDeclList(
              ) [NoVarDeclList]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   x
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               bool
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 p
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             bool
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               r
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             q
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       p
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            BooleanClassConstFactor(
                             false
                            ) [BooleanClassConstFactor]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     q
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          BooleanClassConstFactor(
                           false
                          ) [BooleanClassConstFactor]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                  DesigIdent(
                   r
                  ) [DesigIdent]
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        BooleanClassConstFactor(
                         false
                        ) [BooleanClassConstFactor]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          IfStatement(
            IfConditionNoError(
              ConditionClass(
                CondTermClass(
                  CondFactClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               p
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                    NoCondFactOptionalClass(
                    ) [NoCondFactOptionalClass]
                  ) [CondFactClass]
                  NoCondTermOptionalClass(
                  ) [NoCondTermOptionalClass]
                ) [CondTermClass]
                NoConditionOptionalClass(
                ) [NoConditionOptionalClass]
              ) [ConditionClass]
            ) [IfConditionNoError]
            StatementStatement(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             100
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                IfStatement(
                  IfConditionNoError(
                    ConditionClass(
                      CondTermClass(
                        CondFactClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     q
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                          NoCondFactOptionalClass(
                          ) [NoCondFactOptionalClass]
                        ) [CondFactClass]
                        NoCondTermOptionalClass(
                        ) [NoCondTermOptionalClass]
                      ) [CondTermClass]
                      NoConditionOptionalClass(
                      ) [NoConditionOptionalClass]
                    ) [ConditionClass]
                  ) [IfConditionNoError]
                  StatementStatement(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 101
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                  ) [StatementStatement]
                  Empty(
                  ) [Empty]
                  YesOptionalStatement(
                    IfStatement(
                      IfConditionNoError(
                        ConditionClass(
                          CondTermClass(
                            CondFactClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    DesignatorClass(
                                      Designator(
                                        DesigIdent(
                                         q
                                        ) [DesigIdent]
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                    ) [DesignatorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                              NoCondFactOptionalClass(
                              ) [NoCondFactOptionalClass]
                            ) [CondFactClass]
                            NoCondTermOptionalClass(
                            ) [NoCondTermOptionalClass]
                          ) [CondTermClass]
                          NoConditionOptionalClass(
                          ) [NoConditionOptionalClass]
                        ) [ConditionClass]
                      ) [IfConditionNoError]
                      StatementStatement(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     102
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                      ) [StatementStatement]
                      Empty(
                      ) [Empty]
                      YesOptionalStatement(
                        StatementStatement(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            PrintStmt(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       103
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                              NoCommaNumberClass(
                              ) [NoCommaNumberClass]
                            ) [PrintStmt]
                          ) [Statements]
                        ) [StatementStatement]
                      ) [YesOptionalStatement]
                    ) [IfStatement]
                  ) [YesOptionalStatement]
                ) [IfStatement]
              ) [Statements]
            ) [StatementStatement]
            Empty(
            ) [Empty]
            YesOptionalStatement(
              IfStatement(
                IfConditionNoError(
                  ConditionClass(
                    CondTermClass(
                      CondFactClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   r
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                        NoCondFactOptionalClass(
                        ) [NoCondFactOptionalClass]
                      ) [CondFactClass]
                      NoCondTermOptionalClass(
                      ) [NoCondTermOptionalClass]
                    ) [CondTermClass]
                    NoConditionOptionalClass(
                    ) [NoConditionOptionalClass]
                  ) [ConditionClass]
                ) [IfConditionNoError]
                StatementStatement(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 200
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    IfStatement(
                      IfConditionNoError(
                        ConditionClass(
                          CondTermClass(
                            CondFactClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    DesignatorClass(
                                      Designator(
                                        DesigIdent(
                                         q
                                        ) [DesigIdent]
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                    ) [DesignatorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                              NoCondFactOptionalClass(
                              ) [NoCondFactOptionalClass]
                            ) [CondFactClass]
                            NoCondTermOptionalClass(
                            ) [NoCondTermOptionalClass]
                          ) [CondTermClass]
                          NoConditionOptionalClass(
                          ) [NoConditionOptionalClass]
                        ) [ConditionClass]
                      ) [IfConditionNoError]
                      StatementStatement(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     201
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                      ) [StatementStatement]
                      Empty(
                      ) [Empty]
                      YesOptionalStatement(
                        StatementStatement(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            PrintStmt(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       202
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                              NoCommaNumberClass(
                              ) [NoCommaNumberClass]
                            ) [PrintStmt]
                          ) [Statements]
                        ) [StatementStatement]
                      ) [YesOptionalStatement]
                    ) [IfStatement]
                  ) [Statements]
                ) [StatementStatement]
                Empty(
                ) [Empty]
                YesOptionalStatement(
                  StatementStatement(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 300
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                  ) [StatementStatement]
                ) [YesOptionalStatement]
              ) [IfStatement]
            ) [YesOptionalStatement]
          ) [IfStatement]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  NumberConst(
                   500
                  ) [NumberConst]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:58:12,263 - ===================================
INFO  01:58:12,268 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  01:58:12,268 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  01:58:12,268 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  01:58:12,268 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  01:58:12,268 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  01:58:12,268 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  01:58:12,268 - CONST VALUE 0 IS BEING USED! ON LINE 4
INFO  01:58:12,268 - CONST VARIABLE term IS BEING DEFINED! ON LINE 4
INFO  01:58:12,268 - CONST VALUE 3 IS BEING USED! ON LINE 5
INFO  01:58:12,268 - CONST VARIABLE y IS BEING DEFINED! ON LINE 5
INFO  01:58:12,268 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 9
INFO  01:58:12,269 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  01:58:12,269 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  01:58:12,269 - METHOD BODY STARTING!
INFO  01:58:12,269 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  01:58:12,269 - WE ARE USING A VARIABLE OF TYPE int ON LINE 9
INFO  01:58:12,269 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  01:58:12,269 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  01:58:12,269 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 9
INFO  01:58:12,269 - METHOD BODY ENDING!
INFO  01:58:12,269 - END OF DEFINING FUNCTION k
INFO  01:58:12,269 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 23
INFO  01:58:12,269 - VARIABLE x IS BEING DEFINED! ON LINE 24
INFO  01:58:12,269 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 24
INFO  01:58:12,269 - VARIABLE p IS BEING DEFINED! ON LINE 26
INFO  01:58:12,269 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 26
INFO  01:58:12,270 - VARIABLE r IS BEING DEFINED! ON LINE 27
INFO  01:58:12,270 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 27
INFO  01:58:12,270 - VARIABLE q IS BEING DEFINED! ON LINE 28
INFO  01:58:12,270 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 28
INFO  01:58:12,270 - METHOD BODY STARTING!
INFO  01:58:12,270 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  01:58:12,270 - BEGINNING OF AN ASSIGNEMENT! ON LINE 64
INFO  01:58:12,270 - CONST CHAR false ON LINE 64
INFO  01:58:12,270 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 64
INFO  01:58:12,270 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 64
INFO  01:58:12,270 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 64
INFO  01:58:12,270 - CURRENT VARIABLE IN USE IS q AND IT IS OF TYPE boolean
INFO  01:58:12,271 - BEGINNING OF AN ASSIGNEMENT! ON LINE 65
INFO  01:58:12,271 - CONST CHAR false ON LINE 65
INFO  01:58:12,271 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 65
INFO  01:58:12,271 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 65
INFO  01:58:12,271 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 65
INFO  01:58:12,271 - CURRENT VARIABLE IN USE IS r AND IT IS OF TYPE boolean
INFO  01:58:12,271 - BEGINNING OF AN ASSIGNEMENT! ON LINE 66
INFO  01:58:12,271 - CONST CHAR false ON LINE 66
INFO  01:58:12,271 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 66
INFO  01:58:12,271 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 66
INFO  01:58:12,271 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 66
INFO  01:58:12,271 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  01:58:12,271 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 68
INFO  01:58:12,271 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 68
INFO  01:58:12,271 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 68
INFO  01:58:12,271 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 68
INFO  01:58:12,272 - CONST NUMBER 100 ON LINE 69
INFO  01:58:12,272 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  01:58:12,272 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  01:58:12,272 - PRINT FUNCTION CALL IN USE! ON LINE 69
INFO  01:58:12,272 - CURRENT VARIABLE IN USE IS q AND IT IS OF TYPE boolean
INFO  01:58:12,272 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 70
INFO  01:58:12,272 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  01:58:12,272 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  01:58:12,272 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 70
INFO  01:58:12,272 - CONST NUMBER 101 ON LINE 71
INFO  01:58:12,272 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 71
INFO  01:58:12,272 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 71
INFO  01:58:12,272 - PRINT FUNCTION CALL IN USE! ON LINE 71
INFO  01:58:12,273 - CURRENT VARIABLE IN USE IS q AND IT IS OF TYPE boolean
INFO  01:58:12,273 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 73
INFO  01:58:12,273 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 73
INFO  01:58:12,273 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 73
INFO  01:58:12,273 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 73
INFO  01:58:12,273 - CONST NUMBER 102 ON LINE 74
INFO  01:58:12,273 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 74
INFO  01:58:12,273 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 74
INFO  01:58:12,273 - PRINT FUNCTION CALL IN USE! ON LINE 74
INFO  01:58:12,273 - CONST NUMBER 103 ON LINE 77
INFO  01:58:12,273 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 77
INFO  01:58:12,273 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 77
INFO  01:58:12,273 - PRINT FUNCTION CALL IN USE! ON LINE 77
INFO  01:58:12,273 - CURRENT VARIABLE IN USE IS r AND IT IS OF TYPE boolean
INFO  01:58:12,274 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 80
INFO  01:58:12,274 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  01:58:12,274 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  01:58:12,274 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 80
INFO  01:58:12,274 - CONST NUMBER 200 ON LINE 81
INFO  01:58:12,274 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 81
INFO  01:58:12,274 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 81
INFO  01:58:12,274 - PRINT FUNCTION CALL IN USE! ON LINE 81
INFO  01:58:12,274 - CURRENT VARIABLE IN USE IS q AND IT IS OF TYPE boolean
INFO  01:58:12,274 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 82
INFO  01:58:12,274 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 82
INFO  01:58:12,274 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 82
INFO  01:58:12,274 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 82
INFO  01:58:12,274 - CONST NUMBER 201 ON LINE 83
INFO  01:58:12,274 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 83
INFO  01:58:12,274 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 83
INFO  01:58:12,275 - PRINT FUNCTION CALL IN USE! ON LINE 83
INFO  01:58:12,275 - CONST NUMBER 202 ON LINE 86
INFO  01:58:12,275 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 86
INFO  01:58:12,275 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 86
INFO  01:58:12,275 - PRINT FUNCTION CALL IN USE! ON LINE 86
INFO  01:58:12,275 - CONST NUMBER 300 ON LINE 89
INFO  01:58:12,275 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 89
INFO  01:58:12,275 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 89
INFO  01:58:12,275 - PRINT FUNCTION CALL IN USE! ON LINE 89
INFO  01:58:12,275 - CONST NUMBER 500 ON LINE 92
INFO  01:58:12,275 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 92
INFO  01:58:12,275 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 92
INFO  01:58:12,275 - PRINT FUNCTION CALL IN USE! ON LINE 92
INFO  01:58:12,275 - METHOD BODY ENDING!
INFO  01:58:12,275 - END OF DEFINING FUNCTION main
INFO  01:58:12,276 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  01:58:12,276 -  Deklarisanih promenljivih ima = 8
INFO  01:58:12,276 - ===================================
