INFO  18:55:58,420 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  18:55:58,487 - #2 program
INFO  18:55:58,487 - #44 MJProgram
INFO  18:55:58,487 - #44 int
INFO  18:55:58,488 - #33 ;
ERROR 18:55:58,489 - 
 SYNTAX ERROR!  ON LINE 2
INFO  18:55:58,489 - #44 in
INFO  18:55:58,489 - #44 t
INFO  18:55:58,489 - #33 ;
ERROR 18:55:58,490 - VARIABLE DECLARATION SUCCESSFULL RECOVERY *** COMMA *** ON LINE 2
INFO  18:55:58,491 - #44 in
INFO  18:55:58,491 - #44 t
INFO  18:55:58,491 - #44 a
ERROR 18:55:58,491 - 
 SYNTAX ERROR!  ON LINE 4
INFO  18:55:58,492 - #31 ,
INFO  18:55:58,492 - #44 b
INFO  18:55:58,492 - #31 ,
INFO  18:55:58,492 - #44 c
ERROR 18:55:58,492 - VARIABLE DECLARATION SUCCESSFULL RECOVERY *** COMMA *** ON LINE 4
INFO  18:55:58,501 - #33 ;
INFO  18:55:58,501 - #44 int
INFO  18:55:58,501 - #44 a
INFO  18:55:58,501 - #31 ,
INFO  18:55:58,501 - #44 x
INFO  18:55:58,501 - #31 ,
INFO  18:55:58,501 - #44 d
INFO  18:55:58,501 - #44 d
ERROR 18:55:58,502 - 
 SYNTAX ERROR!  ON LINE 5
INFO  18:55:58,502 - #31 ,
INFO  18:55:58,502 - #44 b
INFO  18:55:58,502 - #31 ,
INFO  18:55:58,502 - #44 c
ERROR 18:55:58,502 - VARIABLE DECLARATION SUCCESSFULL RECOVERY *** COMMA *** ON LINE 5
INFO  18:55:58,502 - #33 ;
INFO  18:55:58,502 - #9 const
INFO  18:55:58,502 - #33 ;
ERROR 18:55:58,502 - 
 SYNTAX ERROR!  ON LINE 7
INFO  18:55:58,502 - #9 const
INFO  18:55:58,502 - #44 int
INFO  18:55:58,502 - #44 a
ERROR 18:55:58,503 - CONST DECLARATION SUCCESSFULL RECOVERY *** SEMI *** ON LINE 7
INFO  18:55:58,504 - #19 =
INFO  18:55:58,504 - #43 3
INFO  18:55:58,504 - #31 ,
INFO  18:55:58,504 - #44 b
INFO  18:55:58,504 - #19 =
INFO  18:55:58,504 - #43 4
INFO  18:55:58,504 - #31 ,
INFO  18:55:58,504 - #44 c
INFO  18:55:58,505 - #19 =
INFO  18:55:58,505 - #33 ;
ERROR 18:55:58,505 - 
 SYNTAX ERROR!  ON LINE 8
INFO  18:55:58,505 - #44 int
INFO  18:55:58,505 - #44 a
INFO  18:55:58,505 - #44 b
ERROR 18:55:58,505 - CONST DECLARATION SUCCESSFULL RECOVERY *** COMMA *** ON LINE 8
ERROR 18:55:58,506 - 
 SYNTAX ERROR!  ON LINE 9
INFO  18:55:58,506 - #31 ,
INFO  18:55:58,506 - #44 c
INFO  18:55:58,506 - #31 ,
INFO  18:55:58,506 - #44 d
ERROR 18:55:58,506 - VARIABLE DECLARATION SUCCESSFULL RECOVERY *** COMMA *** ON LINE 9
INFO  18:55:58,506 - #39 [
INFO  18:55:58,507 - #40 ]
INFO  18:55:58,507 - #31 ,
INFO  18:55:58,507 - #44 e
INFO  18:55:58,507 - #44 f
ERROR 18:55:58,507 - 
 SYNTAX ERROR!  ON LINE 9
INFO  18:55:58,507 - #31 ,
INFO  18:55:58,507 - #44 g
INFO  18:55:58,507 - #31 ,
INFO  18:55:58,507 - #44 po
ERROR 18:55:58,507 - VARIABLE DECLARATION SUCCESSFULL RECOVERY *** COMMA *** ON LINE 9
INFO  18:55:58,507 - #44 k
ERROR 18:55:58,507 - 
 SYNTAX ERROR!  ON LINE 9
INFO  18:55:58,507 - #33 ;
INFO  18:55:58,507 - #9 const
INFO  18:55:58,507 - #44 int
INFO  18:55:58,507 - #44 a
ERROR 18:55:58,507 - VARIABLE DECLARATION SUCCESSFULL RECOVERY *** COMMA *** ON LINE 9
INFO  18:55:58,508 - #33 ;
ERROR 18:55:58,508 - 
 SYNTAX ERROR!  ON LINE 10
INFO  18:55:58,508 - #35 {
INFO  18:55:58,508 - #5 void
INFO  18:55:58,508 - #44 func
ERROR 18:55:58,508 - CONST DECLARATION SUCCESSFULL RECOVERY *** COMMA *** ON LINE 10
INFO  18:55:58,509 - #37 (
INFO  18:55:58,509 - #38 )
INFO  18:55:58,509 - #35 {
INFO  18:55:58,510 - #36 }
INFO  18:55:58,511 - #5 void
INFO  18:55:58,512 - #44 main
INFO  18:55:58,512 - #37 (
INFO  18:55:58,512 - #38 )
INFO  18:55:58,512 - #35 {
INFO  18:55:58,512 - #44 z
INFO  18:55:58,513 - #19 =
INFO  18:55:58,514 - #33 ;
ERROR 18:55:58,514 - 
 SYNTAX ERROR!  ON LINE 19
INFO  18:55:58,514 - #18 print
INFO  18:55:58,514 - #37 (
INFO  18:55:58,514 - #43 2
ERROR 18:55:58,514 - STATEMENT SUCCESSFULL RECOVERY ON LINE 19
INFO  18:55:58,515 - #44 func
ERROR 18:55:58,515 - 
 SYNTAX ERROR!  ON LINE 23
INFO  18:55:58,515 - #37 (
INFO  18:55:58,515 - #38 )
INFO  18:55:58,515 - #33 ;
INFO  18:55:58,515 - #14 if
INFO  18:55:58,515 - #37 (
INFO  18:55:58,515 - #44 a
ERROR 18:55:58,515 - STATEMENT SUCCESSFULL RECOVERY ON LINE 21
INFO  18:55:58,516 - #20 ==
INFO  18:55:58,517 - #43 3
INFO  18:55:58,518 - #26 &&
INFO  18:55:58,519 - #44 b
INFO  18:55:58,520 - #20 ==
INFO  18:55:58,520 - #27 ||
ERROR 18:55:58,520 - 
 SYNTAX ERROR!  ON LINE 25
INFO  18:55:58,520 - #44 c
INFO  18:55:58,520 - #20 ==
INFO  18:55:58,520 - #43 4
INFO  18:55:58,520 - #27 ||
INFO  18:55:58,520 - #44 d
INFO  18:55:58,520 - #20 ==
INFO  18:55:58,520 - #43 5
INFO  18:55:58,520 - #38 )
INFO  18:55:58,520 - #35 {
INFO  18:55:58,520 - #44 zzz
INFO  18:55:58,520 - #44 z
ERROR 18:55:58,520 - CONDITION SUCCESSFULL RECOVERY ON LINE 25
ERROR 18:55:58,521 - 
 SYNTAX ERROR!  ON LINE 26
INFO  18:55:58,521 - #19 =
INFO  18:55:58,521 - #43 4343
INFO  18:55:58,521 - #33 ;
INFO  18:55:58,521 - #44 zz
INFO  18:55:58,521 - #19 =
INFO  18:55:58,521 - #43 43
ERROR 18:55:58,521 - STATEMENT SUCCESSFULL RECOVERY ON LINE 26
INFO  18:55:58,523 - #43 43
ERROR 18:55:58,523 - 
 SYNTAX ERROR!  ON LINE 27
INFO  18:55:58,523 - #33 ;
INFO  18:55:58,523 - #44 zz
INFO  18:55:58,523 - #19 =
INFO  18:55:58,523 - #43 31
ERROR 18:55:58,523 - STATEMENT SUCCESSFULL RECOVERY ON LINE 27
INFO  18:55:58,523 - #44 a
ERROR 18:55:58,523 - 
 SYNTAX ERROR!  ON LINE 28
INFO  18:55:58,523 - #43 324
INFO  18:55:58,523 - #33 ;
INFO  18:55:58,523 - #36 }
INFO  18:55:58,523 - #36 }
INFO  18:55:58,523 - #36 }
ERROR 18:55:58,523 - STATEMENT SUCCESSFULL RECOVERY ON LINE 28
INFO  18:55:58,532 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            GroupDeclarations(
              GroupDeclarations(
                GroupDeclarations(
                  NoGroupDecl(
                  ) [NoGroupDecl]
                  GroupDeclarationVars(
                    VarDeclClass(
                      Type(
                       int
                      ) [Type]
                      VarListSingle(
                        ErrorVariable(
                        ) [ErrorVariable]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [GroupDeclarationVars]
                ) [GroupDeclarations]
                GroupDeclarationVars(
                  VarDeclClass(
                    Type(
                     in
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       t
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [GroupDeclarationVars]
              ) [GroupDeclarations]
              GroupDeclarationVars(
                VarDeclClass(
                  Type(
                   in
                  ) [Type]
                  VarListClass(
                    VarListClass(
                      VarListSingle(
                        ErrorVariable(
                        ) [ErrorVariable]
                      ) [VarListSingle]
                      VarClassNoArray(
                       b
                      ) [VarClassNoArray]
                    ) [VarListClass]
                    VarClassNoArray(
                     c
                    ) [VarClassNoArray]
                  ) [VarListClass]
                ) [VarDeclClass]
              ) [GroupDeclarationVars]
            ) [GroupDeclarations]
            GroupDeclarationVars(
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListClass(
                  VarListClass(
                    VarListClass(
                      VarListClass(
                        VarListSingle(
                          VarClassNoArray(
                           a
                          ) [VarClassNoArray]
                        ) [VarListSingle]
                        VarClassNoArray(
                         x
                        ) [VarClassNoArray]
                      ) [VarListClass]
                      ErrorVariable(
                      ) [ErrorVariable]
                    ) [VarListClass]
                    VarClassNoArray(
                     b
                    ) [VarClassNoArray]
                  ) [VarListClass]
                  VarClassNoArray(
                   c
                  ) [VarClassNoArray]
                ) [VarListClass]
              ) [VarDeclClass]
            ) [GroupDeclarationVars]
          ) [GroupDeclarations]
          GroupDeclarationsConsts(
            ConstDeclYesError(
            ) [ConstDeclYesError]
          ) [GroupDeclarationsConsts]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListClass(
              ConstListClass(
                ConstListSingle(
                  ConstListNoArray(
                   a
                    ValuesNumber(
                     3
                    ) [ValuesNumber]
                  ) [ConstListNoArray]
                ) [ConstListSingle]
                ConstListNoArray(
                 b
                  ValuesNumber(
                   4
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListClass]
              ErrorConstVariableList(
              ) [ErrorConstVariableList]
            ) [ConstListClass]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListClass(
                    VarListSingle(
                      ErrorVariable(
                      ) [ErrorVariable]
                    ) [VarListSingle]
                    VarClassNoArray(
                     c
                    ) [VarClassNoArray]
                  ) [VarListClass]
                  VarClassArray(
                   d
                  ) [VarClassArray]
                ) [VarListClass]
                ErrorVariable(
                ) [ErrorVariable]
              ) [VarListClass]
              VarClassNoArray(
               g
              ) [VarClassNoArray]
            ) [VarListClass]
            ErrorVariable(
            ) [ErrorVariable]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ErrorConstVariableList(
          ) [ErrorConstVariableList]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassVoid(
         func
        ) [ReturnValueClassVoid]
        NoFormParam(
        ) [NoFormParam]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        NoStmt(
        ) [NoStmt]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      NoVarDeclList(
      ) [NoVarDeclList]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            ErrorStmt(
            ) [ErrorStmt]
          ) [Statements]
          ErrorStmt(
          ) [ErrorStmt]
        ) [Statements]
        IfStatement(
          IfConditionNoError(
            ConditionError(
            ) [ConditionError]
          ) [IfConditionNoError]
          StatementStatement(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  ErrorStmt(
                  ) [ErrorStmt]
                ) [Statements]
                ErrorStmt(
                ) [ErrorStmt]
              ) [Statements]
              ErrorStmt(
              ) [ErrorStmt]
            ) [Statements]
          ) [StatementStatement]
          Empty(
          ) [Empty]
          NoOptionalStatement(
          ) [NoOptionalStatement]
        ) [IfStatement]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:55:58,532 - ===================================
INFO  18:55:58,536 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  18:55:58,536 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
ERROR 18:55:58,536 - TYPE in NOT FOUND IN SYMBOL TABLE! 
INFO  18:55:58,536 - VARIABLE t IS BEING DEFINED! ON LINE 3
INFO  18:55:58,536 - VARIABLES OF TYPE in HAVE BEEN DEFINED! ON LINE 3
ERROR 18:55:58,536 - TYPE in NOT FOUND IN SYMBOL TABLE! 
INFO  18:55:58,536 - VARIABLE b IS BEING DEFINED! ON LINE 4
INFO  18:55:58,536 - VARIABLE c IS BEING DEFINED! ON LINE 4
INFO  18:55:58,536 - VARIABLES OF TYPE in HAVE BEEN DEFINED! ON LINE 4
INFO  18:55:58,537 - VARIABLE a IS BEING DEFINED! ON LINE 5
INFO  18:55:58,537 - VARIABLE x IS BEING DEFINED! ON LINE 5
INFO  18:55:58,537 - VARIABLE b IS BEING DEFINED! ON LINE 5
INFO  18:55:58,537 - VARIABLE c IS BEING DEFINED! ON LINE 5
INFO  18:55:58,537 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 5
INFO  18:55:58,537 - CONST VALUE 3 IS BEING USED! ON LINE 8
ERROR 18:55:58,537 - ERROR! CONST VARIABLE a ALREADY DEFINED IN SYMBOL TABLE! 
INFO  18:55:58,537 - CONST VARIABLE a IS BEING DEFINED! ON LINE 8
INFO  18:55:58,537 - CONST VALUE 4 IS BEING USED! ON LINE 8
ERROR 18:55:58,537 - ERROR! CONST VARIABLE b ALREADY DEFINED IN SYMBOL TABLE! 
INFO  18:55:58,537 - CONST VARIABLE b IS BEING DEFINED! ON LINE 8
INFO  18:55:58,537 - VARIABLE c IS BEING DEFINED! ON LINE 9
INFO  18:55:58,537 - ARRAY VARIABLE d IS BEING DEFINED! ON LINE 9
INFO  18:55:58,538 - VARIABLE g IS BEING DEFINED! ON LINE 9
INFO  18:55:58,538 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  18:55:58,538 - FUNCTION func WITH VOID AS RETURN VALUE!  ON LINE 14
INFO  18:55:58,538 - METHOD BODY STARTING!
INFO  18:55:58,538 - METHOD BODY ENDING!
INFO  18:55:58,538 - END OF DEFINING FUNCTION func
INFO  18:55:58,538 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 16
INFO  18:55:58,538 - METHOD BODY STARTING!
INFO  18:55:58,538 - METHOD BODY ENDING!
INFO  18:55:58,538 - END OF DEFINING FUNCTION main
INFO  18:55:58,538 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  18:55:58,538 -  Deklarisanih promenljivih ima = 10
INFO  18:55:58,538 - ===================================
ERROR 18:55:58,539 - Parsiranje NIJE uspesno zavrseno!
