INFO  20:16:27,620 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  20:16:27,680 - #2 program
INFO  20:16:27,681 - #48 test301
INFO  20:16:27,681 - #9 const
INFO  20:16:27,682 - #48 int
INFO  20:16:27,682 - #48 nula
INFO  20:16:27,683 - #24 =
INFO  20:16:27,683 - #47 0
INFO  20:16:27,684 - #38 ;
INFO  20:16:27,684 - #9 const
INFO  20:16:27,684 - #48 int
INFO  20:16:27,684 - #48 jedan
INFO  20:16:27,684 - #24 =
INFO  20:16:27,684 - #47 1
INFO  20:16:27,685 - #38 ;
INFO  20:16:27,685 - #9 const
INFO  20:16:27,685 - #48 int
INFO  20:16:27,685 - #48 pet
INFO  20:16:27,685 - #24 =
INFO  20:16:27,685 - #47 5
INFO  20:16:27,685 - #38 ;
INFO  20:16:27,685 - #48 int
INFO  20:16:27,695 - #48 niz
INFO  20:16:27,695 - #44 [
INFO  20:16:27,695 - #45 ]
INFO  20:16:27,695 - #38 ;
INFO  20:16:27,696 - #48 char
INFO  20:16:27,696 - #48 nizch
INFO  20:16:27,696 - #44 [
INFO  20:16:27,696 - #45 ]
INFO  20:16:27,696 - #38 ;
INFO  20:16:27,696 - #40 {
INFO  20:16:27,696 - #5 void
INFO  20:16:27,697 - #48 main
INFO  20:16:27,698 - #42 (
INFO  20:16:27,698 - #43 )
INFO  20:16:27,698 - #48 int
INFO  20:16:27,699 - #48 bodovi
INFO  20:16:27,699 - #38 ;
INFO  20:16:27,700 - #48 bool
INFO  20:16:27,700 - #48 bt
INFO  20:16:27,700 - #38 ;
INFO  20:16:27,700 - #40 {
INFO  20:16:27,700 - #48 bodovi
INFO  20:16:27,702 - #24 =
INFO  20:16:27,703 - #47 0
INFO  20:16:27,705 - #38 ;
INFO  20:16:27,706 - #48 bodovi
INFO  20:16:27,706 - #33 ++
INFO  20:16:27,706 - #38 ;
INFO  20:16:27,707 - #48 bodovi
INFO  20:16:27,707 - #24 =
INFO  20:16:27,707 - #48 bodovi
INFO  20:16:27,707 - #19 +
INFO  20:16:27,708 - #48 jedan
INFO  20:16:27,709 - #38 ;
INFO  20:16:27,709 - #48 bodovi
INFO  20:16:27,709 - #24 =
INFO  20:16:27,709 - #48 bodovi
INFO  20:16:27,710 - #21 *
INFO  20:16:27,710 - #48 pet
INFO  20:16:27,711 - #38 ;
INFO  20:16:27,711 - #48 bodovi
INFO  20:16:27,711 - #34 --
INFO  20:16:27,711 - #38 ;
INFO  20:16:27,712 - #18 print
INFO  20:16:27,712 - #42 (
INFO  20:16:27,712 - #48 bodovi
INFO  20:16:27,712 - #43 )
INFO  20:16:27,713 - #38 ;
INFO  20:16:27,713 - #48 niz
INFO  20:16:27,713 - #24 =
INFO  20:16:27,713 - #16 new
INFO  20:16:27,713 - #48 int
INFO  20:16:27,713 - #44 [
INFO  20:16:27,713 - #47 3
INFO  20:16:27,713 - #45 ]
INFO  20:16:27,713 - #38 ;
INFO  20:16:27,713 - #48 niz
INFO  20:16:27,713 - #44 [
INFO  20:16:27,714 - #48 nula
INFO  20:16:27,715 - #45 ]
INFO  20:16:27,715 - #24 =
INFO  20:16:27,715 - #48 jedan
INFO  20:16:27,715 - #38 ;
INFO  20:16:27,715 - #48 niz
INFO  20:16:27,715 - #44 [
INFO  20:16:27,715 - #47 1
INFO  20:16:27,715 - #45 ]
INFO  20:16:27,715 - #24 =
INFO  20:16:27,715 - #47 2
INFO  20:16:27,716 - #38 ;
INFO  20:16:27,716 - #41 }
INFO  20:16:27,716 - #41 }
INFO  20:16:27,725 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            NoGroupDecl(
            ) [NoGroupDecl]
            GroupDeclarationsConsts(
              ConstDeclClass(
                Type(
                 int
                ) [Type]
                ConstListSingle(
                  ConstListNoArray(
                   nula
                    ValuesNumber(
                     0
                    ) [ValuesNumber]
                  ) [ConstListNoArray]
                ) [ConstListSingle]
              ) [ConstDeclClass]
            ) [GroupDeclarationsConsts]
          ) [GroupDeclarations]
          GroupDeclarationsConsts(
            ConstDeclClass(
              Type(
               int
              ) [Type]
              ConstListSingle(
                ConstListNoArray(
                 jedan
                  ValuesNumber(
                   1
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListSingle]
            ) [ConstDeclClass]
          ) [GroupDeclarationsConsts]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListSingle(
              ConstListNoArray(
               pet
                ValuesNumber(
                 5
                ) [ValuesNumber]
              ) [ConstListNoArray]
            ) [ConstListSingle]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             niz
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         char
        ) [Type]
        VarListSingle(
          VarClassArray(
           nizch
          ) [VarClassArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               bodovi
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             bt
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        Assignment(
                          DesignatorStatementClass(
                            Designator(
                             bodovi
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            DesignatorStatementOptionsClassAssignExpression(
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [DesignatorStatementClass]
                        ) [Assignment]
                      ) [Statements]
                      Assignment(
                        DesignatorStatementClass(
                          Designator(
                           bodovi
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          DesignatorStatementPlusPlus(
                          ) [DesignatorStatementPlusPlus]
                        ) [DesignatorStatementClass]
                      ) [Assignment]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementClass(
                        Designator(
                         bodovi
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        DesignatorStatementOptionsClassAssignExpression(
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                     bodovi
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    NoFactorOptional(
                                    ) [NoFactorOptional]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                ExprOptionalListClass(
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                  PlusOperation(
                                  ) [PlusOperation]
                                  TermClass(
                                    DesignatorClass(
                                      Designator(
                                       jedan
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                      NoFactorOptional(
                                      ) [NoFactorOptional]
                                    ) [DesignatorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                ) [ExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [DesignatorStatementClass]
                    ) [Assignment]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementClass(
                      Designator(
                       bodovi
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      DesignatorStatementOptionsClassAssignExpression(
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                   bodovi
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                  NoFactorOptional(
                                  ) [NoFactorOptional]
                                ) [DesignatorClass]
                                TermOptionalListClass(
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                  MultiplyOperationClass(
                                  ) [MultiplyOperationClass]
                                  DesignatorClass(
                                    Designator(
                                     pet
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    NoFactorOptional(
                                    ) [NoFactorOptional]
                                  ) [DesignatorClass]
                                ) [TermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [DesignatorStatementClass]
                  ) [Assignment]
                ) [Statements]
                Assignment(
                  DesignatorStatementClass(
                    Designator(
                     bodovi
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    DesignatorStatementMinusMinus(
                    ) [DesignatorStatementMinusMinus]
                  ) [DesignatorStatementClass]
                ) [Assignment]
              ) [Statements]
              PrintStmt(
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                           bodovi
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          NoFactorOptional(
                          ) [NoFactorOptional]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
                NoCommaNumberClass(
                ) [NoCommaNumberClass]
              ) [PrintStmt]
            ) [Statements]
            Assignment(
              DesignatorStatementClass(
                Designator(
                 niz
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                DesignatorStatementOptionsClassAssignExpression(
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NewFactorClass(
                           int
                            FactorOptionalSecondClass(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [FactorOptionalSecondClass]
                          ) [NewFactorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [DesignatorStatementClass]
            ) [Assignment]
          ) [Statements]
          Assignment(
            DesignatorStatementClass(
              Designator(
               niz
                OptionalDesignatorArray(
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                  LSquareClass(
                  ) [LSquareClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                             nula
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            NoFactorOptional(
                            ) [NoFactorOptional]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [OptionalDesignatorArray]
              ) [Designator]
              DesignatorStatementOptionsClassAssignExpression(
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                           jedan
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          NoFactorOptional(
                          ) [NoFactorOptional]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [DesignatorStatementClass]
          ) [Assignment]
        ) [Statements]
        Assignment(
          DesignatorStatementClass(
            Designator(
             niz
              OptionalDesignatorArray(
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
                LSquareClass(
                ) [LSquareClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        NumberConst(
                         1
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [OptionalDesignatorArray]
            ) [Designator]
            DesignatorStatementOptionsClassAssignExpression(
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       2
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [DesignatorStatementClass]
        ) [Assignment]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:16:27,726 - ===================================
INFO  20:16:27,729 - PROGRAM NAME DETECTED => test301 ON LINE 3
INFO  20:16:27,730 - CONST VARIABLE nula IS BEING DEFINED! ON LINE 5
INFO  20:16:27,730 - CONST VARIABLE jedan IS BEING DEFINED! ON LINE 6
INFO  20:16:27,730 - CONST VARIABLE pet IS BEING DEFINED! ON LINE 7
INFO  20:16:27,730 - ARRAY VARIABLE niz IS BEING DEFINED! ON LINE 9
INFO  20:16:27,731 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  20:16:27,731 - ARRAY VARIABLE nizch IS BEING DEFINED! ON LINE 10
INFO  20:16:27,731 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 10
INFO  20:16:27,731 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 13
INFO  20:16:27,731 - VARIABLE bodovi IS BEING DEFINED! ON LINE 14
INFO  20:16:27,731 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 14
INFO  20:16:27,731 - VARIABLE bt IS BEING DEFINED! ON LINE 15
INFO  20:16:27,731 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 15
INFO  20:16:27,731 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:16:27,731 - SUCCESSFUL ASSIGNEMENT! ON LINE 17
INFO  20:16:27,731 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:16:27,731 - USING ++ ON bodovi
INFO  20:16:27,731 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:16:27,731 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:16:27,732 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE 1
INFO  20:16:27,732 - SUCCESSFUL ASSIGNEMENT! ON LINE 19
INFO  20:16:27,732 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:16:27,732 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:16:27,732 - CURRENT VARIABLE IN USE IS pet AND IT IS OF TYPE 1
INFO  20:16:27,732 - SUCCESSFUL ASSIGNEMENT! ON LINE 20
INFO  20:16:27,732 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:16:27,732 - USING -- ON bodovi
INFO  20:16:27,732 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:16:27,732 - PRINT FUNCTION CALL IN USE! ON LINE 22
INFO  20:16:27,732 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE 3
