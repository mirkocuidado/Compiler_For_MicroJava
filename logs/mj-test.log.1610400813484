INFO  22:30:23,813 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  22:30:23,921 - #2 program
INFO  22:30:23,921 - #48 MJProgram
INFO  22:30:23,922 - #48 int
INFO  22:30:23,924 - #48 a
INFO  22:30:23,926 - #36 ,
INFO  22:30:23,927 - #48 b
INFO  22:30:23,927 - #36 ,
INFO  22:30:23,927 - #48 c
INFO  22:30:23,927 - #36 ,
INFO  22:30:23,927 - #48 d
INFO  22:30:23,927 - #38 ;
INFO  22:30:23,928 - #9 const
INFO  22:30:23,928 - #48 int
INFO  22:30:23,928 - #48 y
INFO  22:30:23,929 - #24 =
INFO  22:30:23,929 - #47 3
INFO  22:30:23,929 - #38 ;
INFO  22:30:23,930 - #40 {
INFO  22:30:23,930 - #48 int
INFO  22:30:23,932 - #48 k
INFO  22:30:23,932 - #42 (
INFO  22:30:23,941 - #48 int
INFO  22:30:23,941 - #48 a
INFO  22:30:23,942 - #36 ,
INFO  22:30:23,942 - #48 int
INFO  22:30:23,942 - #48 b
INFO  22:30:23,942 - #43 )
INFO  22:30:23,942 - #40 {
INFO  22:30:23,943 - #46 return
INFO  22:30:23,946 - #48 b
INFO  22:30:23,950 - #38 ;
INFO  22:30:23,953 - #41 }
INFO  22:30:23,953 - #48 char
INFO  22:30:23,957 - #48 s
INFO  22:30:23,957 - #42 (
INFO  22:30:23,957 - #43 )
INFO  22:30:23,959 - #40 {
INFO  22:30:23,959 - #46 return
INFO  22:30:23,959 - #49 c
INFO  22:30:23,959 - #38 ;
INFO  22:30:23,959 - #41 }
INFO  22:30:23,959 - #5 void
INFO  22:30:23,959 - #48 main
INFO  22:30:23,960 - #42 (
INFO  22:30:23,960 - #43 )
INFO  22:30:23,960 - #48 int
INFO  22:30:23,960 - #48 x
INFO  22:30:23,960 - #38 ;
INFO  22:30:23,960 - #48 char
INFO  22:30:23,960 - #48 z
INFO  22:30:23,960 - #38 ;
INFO  22:30:23,961 - #48 bool
INFO  22:30:23,961 - #48 p
INFO  22:30:23,961 - #38 ;
INFO  22:30:23,961 - #48 int
INFO  22:30:23,961 - #48 xx
INFO  22:30:23,961 - #44 [
INFO  22:30:23,961 - #45 ]
INFO  22:30:23,961 - #38 ;
INFO  22:30:23,961 - #48 int
INFO  22:30:23,961 - #48 dd
INFO  22:30:23,962 - #38 ;
INFO  22:30:23,962 - #40 {
INFO  22:30:23,962 - #48 x
INFO  22:30:23,962 - #24 =
INFO  22:30:23,962 - #48 xx
INFO  22:30:23,964 - #44 [
INFO  22:30:23,964 - #47 0
INFO  22:30:23,966 - #45 ]
INFO  22:30:23,966 - #19 +
INFO  22:30:23,966 - #48 xx
INFO  22:30:23,968 - #44 [
INFO  22:30:23,968 - #47 2
INFO  22:30:23,968 - #45 ]
INFO  22:30:23,969 - #38 ;
INFO  22:30:23,969 - #18 print
INFO  22:30:23,969 - #42 (
INFO  22:30:23,969 - #47 2
INFO  22:30:23,969 - #43 )
INFO  22:30:23,971 - #38 ;
INFO  22:30:23,971 - #48 x
INFO  22:30:23,971 - #24 =
INFO  22:30:23,971 - #48 k
INFO  22:30:23,971 - #42 (
INFO  22:30:23,971 - #47 33
INFO  22:30:23,971 - #36 ,
INFO  22:30:23,972 - #48 k
INFO  22:30:23,972 - #42 (
INFO  22:30:23,972 - #47 12
INFO  22:30:23,972 - #36 ,
INFO  22:30:23,972 - #47 13
INFO  22:30:23,972 - #43 )
INFO  22:30:23,972 - #43 )
INFO  22:30:23,973 - #38 ;
INFO  22:30:23,973 - #18 print
INFO  22:30:23,973 - #42 (
INFO  22:30:23,973 - #48 x
INFO  22:30:23,973 - #43 )
INFO  22:30:23,973 - #38 ;
INFO  22:30:23,973 - #48 x
INFO  22:30:23,973 - #24 =
INFO  22:30:23,973 - #48 y
INFO  22:30:23,973 - #38 ;
INFO  22:30:23,973 - #18 print
INFO  22:30:23,974 - #42 (
INFO  22:30:23,974 - #48 x
INFO  22:30:23,974 - #43 )
INFO  22:30:23,974 - #38 ;
INFO  22:30:23,974 - #18 print
INFO  22:30:23,974 - #42 (
INFO  22:30:23,974 - #48 y
INFO  22:30:23,974 - #43 )
INFO  22:30:23,974 - #38 ;
INFO  22:30:23,974 - #48 d
INFO  22:30:23,974 - #24 =
INFO  22:30:23,974 - #47 4
INFO  22:30:23,974 - #38 ;
INFO  22:30:23,975 - #18 print
INFO  22:30:23,975 - #42 (
INFO  22:30:23,975 - #48 d
INFO  22:30:23,975 - #43 )
INFO  22:30:23,975 - #38 ;
INFO  22:30:23,975 - #48 d
INFO  22:30:23,975 - #33 ++
INFO  22:30:23,975 - #38 ;
INFO  22:30:23,975 - #18 print
INFO  22:30:23,976 - #42 (
INFO  22:30:23,976 - #48 d
INFO  22:30:23,976 - #43 )
INFO  22:30:23,976 - #38 ;
INFO  22:30:23,976 - #48 dd
INFO  22:30:23,976 - #24 =
INFO  22:30:23,976 - #47 10
INFO  22:30:23,976 - #38 ;
INFO  22:30:23,976 - #18 print
INFO  22:30:23,976 - #42 (
INFO  22:30:23,977 - #48 dd
INFO  22:30:23,977 - #43 )
INFO  22:30:23,977 - #38 ;
INFO  22:30:23,977 - #48 dd
INFO  22:30:23,977 - #33 ++
INFO  22:30:23,977 - #38 ;
INFO  22:30:23,977 - #18 print
INFO  22:30:23,977 - #42 (
INFO  22:30:23,977 - #48 dd
INFO  22:30:23,977 - #43 )
INFO  22:30:23,978 - #38 ;
INFO  22:30:23,978 - #48 p
INFO  22:30:23,978 - #24 =
INFO  22:30:23,978 - #50 true
INFO  22:30:23,978 - #38 ;
INFO  22:30:23,978 - #18 print
INFO  22:30:23,978 - #42 (
INFO  22:30:23,978 - #48 p
INFO  22:30:23,978 - #43 )
INFO  22:30:23,978 - #38 ;
INFO  22:30:23,979 - #48 p
INFO  22:30:23,979 - #24 =
INFO  22:30:23,979 - #50 false
INFO  22:30:23,979 - #38 ;
INFO  22:30:23,979 - #18 print
INFO  22:30:23,979 - #42 (
INFO  22:30:23,979 - #48 p
INFO  22:30:23,979 - #43 )
INFO  22:30:23,979 - #38 ;
INFO  22:30:23,979 - #48 z
INFO  22:30:23,979 - #24 =
INFO  22:30:23,979 - #49 m
INFO  22:30:23,980 - #38 ;
INFO  22:30:23,980 - #18 print
INFO  22:30:23,980 - #42 (
INFO  22:30:23,980 - #48 z
INFO  22:30:23,980 - #43 )
INFO  22:30:23,980 - #38 ;
INFO  22:30:23,980 - #48 z
INFO  22:30:23,980 - #24 =
INFO  22:30:23,980 - #48 s
INFO  22:30:23,980 - #42 (
INFO  22:30:23,980 - #43 )
INFO  22:30:23,981 - #38 ;
INFO  22:30:23,982 - #18 print
INFO  22:30:23,982 - #42 (
INFO  22:30:23,982 - #48 z
INFO  22:30:23,982 - #43 )
INFO  22:30:23,982 - #38 ;
INFO  22:30:23,982 - #46 return
INFO  22:30:23,982 - #38 ;
INFO  22:30:23,982 - #41 }
INFO  22:30:23,983 - #41 }
INFO  22:30:24,001 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      NoGroupDecl(
      ) [NoGroupDecl]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 b
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               c
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             d
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
           k
          ) [ReturnValueClassNoVoid]
          FormParams(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclClassNoArray(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormalParamDeclClassNoArray]
              ) [SingleFormalParamDecl]
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               b
              ) [FormalParamDeclClassNoArray]
            ) [FormalParamDecls]
          ) [FormParams]
          NoVarDeclList(
          ) [NoVarDeclList]
          LBraceClass(
          ) [LBraceClass]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              ReturnNonTerminalClass(
              ) [ReturnNonTerminalClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        HelperClass(
                        ) [HelperClass]
                        Designator(
                         b
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [ReturnExpr]
          ) [Statements]
          RBraceClass(
          ) [RBraceClass]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           char
          ) [Type]
         s
        ) [ReturnValueClassNoVoid]
        NoFormParam(
        ) [NoFormParam]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    CharConst(
                     c
                    ) [CharConst]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                NoVarDeclList(
                ) [NoVarDeclList]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     x
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 char
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   z
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               bool
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 p
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassArray(
               xx
              ) [VarClassArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             dd
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      NoStmt(
                                                      ) [NoStmt]
                                                      Assignment(
                                                        DesignatorStatementOptionsClassAssignExpression(
                                                          Designator(
                                                           x
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                          HelperClass(
                                                          ) [HelperClass]
                                                          AssignOpClass(
                                                            AssignOperationClass(
                                                            ) [AssignOperationClass]
                                                          ) [AssignOpClass]
                                                          ClassOneClass(
                                                            NormalExpressionClass(
                                                              ExprFirstOptionClassWithMinus(
                                                                TermClass(
                                                                  DesignatorClass(
                                                                    HelperClass(
                                                                    ) [HelperClass]
                                                                    Designator(
                                                                     xx
                                                                      OptionalDesignatorArray(
                                                                        NoOptionalDesignatorClass(
                                                                        ) [NoOptionalDesignatorClass]
                                                                        LSquareClass(
                                                                        ) [LSquareClass]
                                                                        ClassOneClass(
                                                                          NormalExpressionClass(
                                                                            ExprFirstOptionClassWithMinus(
                                                                              TermClass(
                                                                                NumberConst(
                                                                                 0
                                                                                ) [NumberConst]
                                                                                NoTermOptionalListClass(
                                                                                ) [NoTermOptionalListClass]
                                                                              ) [TermClass]
                                                                              NoExprOptionalListClass(
                                                                              ) [NoExprOptionalListClass]
                                                                            ) [ExprFirstOptionClassWithMinus]
                                                                          ) [NormalExpressionClass]
                                                                        ) [ClassOneClass]
                                                                      ) [OptionalDesignatorArray]
                                                                    ) [Designator]
                                                                  ) [DesignatorClass]
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                ) [TermClass]
                                                                ExprOptionalListClass(
                                                                  NoExprOptionalListClass(
                                                                  ) [NoExprOptionalListClass]
                                                                  PlusOperation(
                                                                  ) [PlusOperation]
                                                                  TermClass(
                                                                    DesignatorClass(
                                                                      HelperClass(
                                                                      ) [HelperClass]
                                                                      Designator(
                                                                       xx
                                                                        OptionalDesignatorArray(
                                                                          NoOptionalDesignatorClass(
                                                                          ) [NoOptionalDesignatorClass]
                                                                          LSquareClass(
                                                                          ) [LSquareClass]
                                                                          ClassOneClass(
                                                                            NormalExpressionClass(
                                                                              ExprFirstOptionClassWithMinus(
                                                                                TermClass(
                                                                                  NumberConst(
                                                                                   2
                                                                                  ) [NumberConst]
                                                                                  NoTermOptionalListClass(
                                                                                  ) [NoTermOptionalListClass]
                                                                                ) [TermClass]
                                                                                NoExprOptionalListClass(
                                                                                ) [NoExprOptionalListClass]
                                                                              ) [ExprFirstOptionClassWithMinus]
                                                                            ) [NormalExpressionClass]
                                                                          ) [ClassOneClass]
                                                                        ) [OptionalDesignatorArray]
                                                                      ) [Designator]
                                                                    ) [DesignatorClass]
                                                                    NoTermOptionalListClass(
                                                                    ) [NoTermOptionalListClass]
                                                                  ) [TermClass]
                                                                ) [ExprOptionalListClass]
                                                              ) [ExprFirstOptionClassWithMinus]
                                                            ) [NormalExpressionClass]
                                                          ) [ClassOneClass]
                                                        ) [DesignatorStatementOptionsClassAssignExpression]
                                                      ) [Assignment]
                                                    ) [Statements]
                                                    PrintStmt(
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              NumberConst(
                                                               2
                                                              ) [NumberConst]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                      NoCommaNumberClass(
                                                      ) [NoCommaNumberClass]
                                                    ) [PrintStmt]
                                                  ) [Statements]
                                                  Assignment(
                                                    DesignatorStatementOptionsClassAssignExpression(
                                                      Designator(
                                                       x
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      AssignOpClass(
                                                        AssignOperationClass(
                                                        ) [AssignOperationClass]
                                                      ) [AssignOpClass]
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              FactorOptionalParams(
                                                                HelperClass(
                                                                ) [HelperClass]
                                                                Designator(
                                                                 k
                                                                  NoOptionalDesignatorClass(
                                                                  ) [NoOptionalDesignatorClass]
                                                                ) [Designator]
                                                                Actuals(
                                                                  ActualParams(
                                                                    ActualParam(
                                                                      ClassOneClass(
                                                                        NormalExpressionClass(
                                                                          ExprFirstOptionClassWithMinus(
                                                                            TermClass(
                                                                              NumberConst(
                                                                               33
                                                                              ) [NumberConst]
                                                                              NoTermOptionalListClass(
                                                                              ) [NoTermOptionalListClass]
                                                                            ) [TermClass]
                                                                            NoExprOptionalListClass(
                                                                            ) [NoExprOptionalListClass]
                                                                          ) [ExprFirstOptionClassWithMinus]
                                                                        ) [NormalExpressionClass]
                                                                      ) [ClassOneClass]
                                                                    ) [ActualParam]
                                                                    ClassOneClass(
                                                                      NormalExpressionClass(
                                                                        ExprFirstOptionClassWithMinus(
                                                                          TermClass(
                                                                            FactorOptionalParams(
                                                                              HelperClass(
                                                                              ) [HelperClass]
                                                                              Designator(
                                                                               k
                                                                                NoOptionalDesignatorClass(
                                                                                ) [NoOptionalDesignatorClass]
                                                                              ) [Designator]
                                                                              Actuals(
                                                                                ActualParams(
                                                                                  ActualParam(
                                                                                    ClassOneClass(
                                                                                      NormalExpressionClass(
                                                                                        ExprFirstOptionClassWithMinus(
                                                                                          TermClass(
                                                                                            NumberConst(
                                                                                             12
                                                                                            ) [NumberConst]
                                                                                            NoTermOptionalListClass(
                                                                                            ) [NoTermOptionalListClass]
                                                                                          ) [TermClass]
                                                                                          NoExprOptionalListClass(
                                                                                          ) [NoExprOptionalListClass]
                                                                                        ) [ExprFirstOptionClassWithMinus]
                                                                                      ) [NormalExpressionClass]
                                                                                    ) [ClassOneClass]
                                                                                  ) [ActualParam]
                                                                                  ClassOneClass(
                                                                                    NormalExpressionClass(
                                                                                      ExprFirstOptionClassWithMinus(
                                                                                        TermClass(
                                                                                          NumberConst(
                                                                                           13
                                                                                          ) [NumberConst]
                                                                                          NoTermOptionalListClass(
                                                                                          ) [NoTermOptionalListClass]
                                                                                        ) [TermClass]
                                                                                        NoExprOptionalListClass(
                                                                                        ) [NoExprOptionalListClass]
                                                                                      ) [ExprFirstOptionClassWithMinus]
                                                                                    ) [NormalExpressionClass]
                                                                                  ) [ClassOneClass]
                                                                                ) [ActualParams]
                                                                              ) [Actuals]
                                                                            ) [FactorOptionalParams]
                                                                            NoTermOptionalListClass(
                                                                            ) [NoTermOptionalListClass]
                                                                          ) [TermClass]
                                                                          NoExprOptionalListClass(
                                                                          ) [NoExprOptionalListClass]
                                                                        ) [ExprFirstOptionClassWithMinus]
                                                                      ) [NormalExpressionClass]
                                                                    ) [ClassOneClass]
                                                                  ) [ActualParams]
                                                                ) [Actuals]
                                                              ) [FactorOptionalParams]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                    ) [DesignatorStatementOptionsClassAssignExpression]
                                                  ) [Assignment]
                                                ) [Statements]
                                                PrintStmt(
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          DesignatorClass(
                                                            HelperClass(
                                                            ) [HelperClass]
                                                            Designator(
                                                             x
                                                              NoOptionalDesignatorClass(
                                                              ) [NoOptionalDesignatorClass]
                                                            ) [Designator]
                                                          ) [DesignatorClass]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                  NoCommaNumberClass(
                                                  ) [NoCommaNumberClass]
                                                ) [PrintStmt]
                                              ) [Statements]
                                              Assignment(
                                                DesignatorStatementOptionsClassAssignExpression(
                                                  Designator(
                                                   x
                                                    NoOptionalDesignatorClass(
                                                    ) [NoOptionalDesignatorClass]
                                                  ) [Designator]
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  AssignOpClass(
                                                    AssignOperationClass(
                                                    ) [AssignOperationClass]
                                                  ) [AssignOpClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          DesignatorClass(
                                                            HelperClass(
                                                            ) [HelperClass]
                                                            Designator(
                                                             y
                                                              NoOptionalDesignatorClass(
                                                              ) [NoOptionalDesignatorClass]
                                                            ) [Designator]
                                                          ) [DesignatorClass]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [DesignatorStatementOptionsClassAssignExpression]
                                              ) [Assignment]
                                            ) [Statements]
                                            PrintStmt(
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      DesignatorClass(
                                                        HelperClass(
                                                        ) [HelperClass]
                                                        Designator(
                                                         x
                                                          NoOptionalDesignatorClass(
                                                          ) [NoOptionalDesignatorClass]
                                                        ) [Designator]
                                                      ) [DesignatorClass]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                              NoCommaNumberClass(
                                              ) [NoCommaNumberClass]
                                            ) [PrintStmt]
                                          ) [Statements]
                                          PrintStmt(
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      Designator(
                                                       y
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                            NoCommaNumberClass(
                                            ) [NoCommaNumberClass]
                                          ) [PrintStmt]
                                        ) [Statements]
                                        Assignment(
                                          DesignatorStatementOptionsClassAssignExpression(
                                            Designator(
                                             d
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                            HelperClass(
                                            ) [HelperClass]
                                            AssignOpClass(
                                              AssignOperationClass(
                                              ) [AssignOperationClass]
                                            ) [AssignOpClass]
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    NumberConst(
                                                     4
                                                    ) [NumberConst]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                          ) [DesignatorStatementOptionsClassAssignExpression]
                                        ) [Assignment]
                                      ) [Statements]
                                      PrintStmt(
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                DesignatorClass(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  Designator(
                                                   d
                                                    NoOptionalDesignatorClass(
                                                    ) [NoOptionalDesignatorClass]
                                                  ) [Designator]
                                                ) [DesignatorClass]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                        NoCommaNumberClass(
                                        ) [NoCommaNumberClass]
                                      ) [PrintStmt]
                                    ) [Statements]
                                    Assignment(
                                      DesignatorStatementPlusPlus(
                                        Designator(
                                         d
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorStatementPlusPlus]
                                    ) [Assignment]
                                  ) [Statements]
                                  PrintStmt(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              HelperClass(
                                              ) [HelperClass]
                                              Designator(
                                               d
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                    NoCommaNumberClass(
                                    ) [NoCommaNumberClass]
                                  ) [PrintStmt]
                                ) [Statements]
                                Assignment(
                                  DesignatorStatementOptionsClassAssignExpression(
                                    Designator(
                                     dd
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    HelperClass(
                                    ) [HelperClass]
                                    AssignOpClass(
                                      AssignOperationClass(
                                      ) [AssignOperationClass]
                                    ) [AssignOpClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             10
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                ) [Assignment]
                              ) [Statements]
                              PrintStmt(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        DesignatorClass(
                                          HelperClass(
                                          ) [HelperClass]
                                          Designator(
                                           dd
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                                NoCommaNumberClass(
                                ) [NoCommaNumberClass]
                              ) [PrintStmt]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementPlusPlus(
                                Designator(
                                 dd
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorStatementPlusPlus]
                            ) [Assignment]
                          ) [Statements]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    DesignatorClass(
                                      HelperClass(
                                      ) [HelperClass]
                                      Designator(
                                       dd
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                    ) [DesignatorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                             p
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            HelperClass(
                            ) [HelperClass]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    BooleanClassConstFactor(
                                     true
                                    ) [BooleanClassConstFactor]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  HelperClass(
                                  ) [HelperClass]
                                  Designator(
                                   p
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                         p
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        HelperClass(
                        ) [HelperClass]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                BooleanClassConstFactor(
                                 false
                                ) [BooleanClassConstFactor]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              HelperClass(
                              ) [HelperClass]
                              Designator(
                               p
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                     z
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    HelperClass(
                    ) [HelperClass]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            CharConst(
                             m
                            ) [CharConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              PrintStmt(
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          HelperClass(
                          ) [HelperClass]
                          Designator(
                           z
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
                NoCommaNumberClass(
                ) [NoCommaNumberClass]
              ) [PrintStmt]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                 z
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                HelperClass(
                ) [HelperClass]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        FactorOptionalParams(
                          HelperClass(
                          ) [HelperClass]
                          Designator(
                           s
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          NoActuals(
                          ) [NoActuals]
                        ) [FactorOptionalParams]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      HelperClass(
                      ) [HelperClass]
                      Designator(
                       z
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        ReturnNoExpr(
        ) [ReturnNoExpr]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:30:24,006 - ===================================
INFO  22:30:24,012 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  22:30:24,013 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  22:30:24,013 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  22:30:24,013 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  22:30:24,013 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  22:30:24,013 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  22:30:24,013 - CONST VALUE 3 IS BEING USED! ON LINE 4
INFO  22:30:24,013 - CONST VARIABLE y IS BEING DEFINED! ON LINE 4
INFO  22:30:24,013 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 7
INFO  22:30:24,013 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 7
INFO  22:30:24,014 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 7
INFO  22:30:24,014 - METHOD BODY STARTING!
INFO  22:30:24,014 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  22:30:24,014 - WE ARE USING A VARIABLE OF TYPE int ON LINE 23
INFO  22:30:24,014 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:30:24,014 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:30:24,014 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 7
INFO  22:30:24,014 - METHOD BODY ENDING!
INFO  22:30:24,014 - END OF DEFINING FUNCTION k
INFO  22:30:24,015 - FUNCTION s WITH RETURN VALUE OF TYPE char ON LINE 9
INFO  22:30:24,015 - METHOD BODY STARTING!
INFO  22:30:24,015 - CONST CHAR c ON LINE 9
INFO  22:30:24,015 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  22:30:24,015 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  22:30:24,015 - SUCCESSFUL RETURN! TYPES: char AND char ! ON LINE 9
INFO  22:30:24,015 - METHOD BODY ENDING!
INFO  22:30:24,015 - END OF DEFINING FUNCTION s
INFO  22:30:24,015 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 11
INFO  22:30:24,015 - VARIABLE x IS BEING DEFINED! ON LINE 12
INFO  22:30:24,015 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 12
INFO  22:30:24,016 - VARIABLE z IS BEING DEFINED! ON LINE 13
INFO  22:30:24,016 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 13
INFO  22:30:24,016 - VARIABLE p IS BEING DEFINED! ON LINE 14
INFO  22:30:24,016 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 14
INFO  22:30:24,016 - ARRAY VARIABLE xx IS BEING DEFINED! ON LINE 15
INFO  22:30:24,016 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 15
INFO  22:30:24,016 - VARIABLE dd IS BEING DEFINED! ON LINE 16
INFO  22:30:24,017 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 16
INFO  22:30:24,017 - METHOD BODY STARTING!
INFO  22:30:24,017 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:30:24,018 - BEGINNING OF AN ASSIGNEMENT! ON LINE 19
INFO  22:30:24,018 - CONST NUMBER 0 ON LINE 19
INFO  22:30:24,018 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:30:24,018 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:30:24,018 - CURRENT VARIABLE IN USE IS xx AND IT IS OF TYPE array
INFO  22:30:24,018 - WE ARE USING AN ARRAY OF TYPE int ON LINE 4
INFO  22:30:24,018 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:30:24,018 - CONST NUMBER 2 ON LINE 19
INFO  22:30:24,018 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:30:24,018 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:30:24,018 - CURRENT VARIABLE IN USE IS xx AND IT IS OF TYPE array
INFO  22:30:24,018 - WE ARE USING AN ARRAY OF TYPE int ON LINE 12
INFO  22:30:24,018 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  22:30:24,018 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:30:24,019 - USING INTEGERS IN TERM! ON LINE 4
INFO  22:30:24,019 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 19
INFO  22:30:24,019 - CONST NUMBER 2 ON LINE 20
INFO  22:30:24,019 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:30:24,019 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:30:24,019 - PRINT FUNCTION CALL IN USE! ON LINE 20
INFO  22:30:24,019 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:30:24,019 - BEGINNING OF AN ASSIGNEMENT! ON LINE 22
INFO  22:30:24,019 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  22:30:24,019 - CONST NUMBER 33 ON LINE 22
INFO  22:30:24,020 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:30:24,020 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:30:24,020 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  22:30:24,020 - CONST NUMBER 12 ON LINE 22
INFO  22:30:24,020 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:30:24,020 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:30:24,020 - CONST NUMBER 13 ON LINE 22
INFO  22:30:24,020 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:30:24,020 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:30:24,020 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:30:24,020 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:30:24,020 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:30:24,020 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:30:24,021 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:30:24,021 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:30:24,021 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:30:24,021 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:30:24,021 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 22
INFO  22:30:24,021 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:30:24,021 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:30:24,021 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,021 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,021 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,021 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:30:24,021 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  22:30:24,021 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  22:30:24,021 - WE ARE USING A VARIABLE OF TYPE int ON LINE 4
INFO  22:30:24,021 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:30:24,021 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:30:24,021 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  22:30:24,021 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:30:24,021 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:30:24,021 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,021 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,021 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,022 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  22:30:24,022 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:30:24,022 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,022 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,022 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,022 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:30:24,022 - BEGINNING OF AN ASSIGNEMENT! ON LINE 29
INFO  22:30:24,022 - CONST NUMBER 4 ON LINE 29
INFO  22:30:24,022 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:30:24,022 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:30:24,022 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 29
INFO  22:30:24,022 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:30:24,022 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:30:24,022 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,022 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,022 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,022 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:30:24,022 - USING ++ ON d ON LINE 31
INFO  22:30:24,022 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:30:24,022 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:30:24,022 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,023 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,023 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,023 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:30:24,023 - BEGINNING OF AN ASSIGNEMENT! ON LINE 34
INFO  22:30:24,023 - CONST NUMBER 10 ON LINE 34
INFO  22:30:24,023 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  22:30:24,023 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  22:30:24,023 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 34
INFO  22:30:24,023 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:30:24,023 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:30:24,023 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,023 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,023 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,023 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:30:24,023 - USING ++ ON dd ON LINE 36
INFO  22:30:24,024 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:30:24,024 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:30:24,024 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,024 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,024 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,024 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  22:30:24,024 - BEGINNING OF AN ASSIGNEMENT! ON LINE 39
INFO  22:30:24,024 - CONST CHAR true ON LINE 39
INFO  22:30:24,024 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  22:30:24,024 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  22:30:24,024 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 39
INFO  22:30:24,024 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  22:30:24,024 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 7
INFO  22:30:24,024 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,024 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,024 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,024 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  22:30:24,024 - BEGINNING OF AN ASSIGNEMENT! ON LINE 41
INFO  22:30:24,024 - CONST CHAR false ON LINE 41
INFO  22:30:24,025 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  22:30:24,025 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  22:30:24,025 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 41
INFO  22:30:24,025 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  22:30:24,025 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 7
INFO  22:30:24,025 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,025 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,025 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,025 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:30:24,025 - BEGINNING OF AN ASSIGNEMENT! ON LINE 44
INFO  22:30:24,025 - CONST CHAR m ON LINE 44
INFO  22:30:24,025 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 44
INFO  22:30:24,025 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 44
INFO  22:30:24,025 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 44
INFO  22:30:24,026 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:30:24,026 - WE ARE USING A VARIABLE OF TYPE char ON LINE 7
INFO  22:30:24,026 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,026 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,026 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,027 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:30:24,027 - BEGINNING OF AN ASSIGNEMENT! ON LINE 47
INFO  22:30:24,027 - CURRENT VARIABLE IN USE IS s AND IT IS OF TYPE char
INFO  22:30:24,027 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 3
INFO  22:30:24,027 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 3
INFO  22:30:24,027 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 47
INFO  22:30:24,027 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:30:24,027 - WE ARE USING A VARIABLE OF TYPE char ON LINE 7
INFO  22:30:24,028 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,028 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:30:24,028 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:30:24,028 - return; AND THE FUNCTION IS VOID!
INFO  22:30:24,028 - METHOD BODY ENDING!
INFO  22:30:24,029 - END OF DEFINING FUNCTION main
INFO  22:30:24,029 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  22:30:24,029 -  Deklarisanih promenljivih ima = 9
INFO  22:30:24,029 - ===================================
INFO  22:30:24,044 - Parsiranje uspesno zavrseno!
