INFO  18:06:31,552 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  18:06:31,616 - #2 program
INFO  18:06:31,617 - #43 MJProgram
INFO  18:06:31,617 - #43 int
INFO  18:06:31,618 - #43 a
INFO  18:06:31,618 - #31 ,
INFO  18:06:31,619 - #43 b
INFO  18:06:31,619 - #31 ,
INFO  18:06:31,619 - #43 c
INFO  18:06:31,619 - #31 ,
INFO  18:06:31,619 - #43 d
INFO  18:06:31,619 - #33 ;
INFO  18:06:31,619 - #9 const
INFO  18:06:31,619 - #43 int
INFO  18:06:31,620 - #43 y
INFO  18:06:31,620 - #19 =
INFO  18:06:31,620 - #42 3
INFO  18:06:31,620 - #33 ;
INFO  18:06:31,620 - #35 {
INFO  18:06:31,620 - #5 void
INFO  18:06:31,621 - #43 kk
INFO  18:06:31,621 - #37 (
INFO  18:06:31,624 - #38 )
INFO  18:06:31,625 - #35 {
INFO  18:06:31,625 - #36 }
INFO  18:06:31,627 - #43 int
INFO  18:06:31,628 - #43 k
INFO  18:06:31,628 - #37 (
INFO  18:06:31,628 - #43 int
INFO  18:06:31,628 - #43 a
INFO  18:06:31,628 - #31 ,
INFO  18:06:31,629 - #43 int
INFO  18:06:31,629 - #43 b
INFO  18:06:31,629 - #38 )
INFO  18:06:31,629 - #35 {
INFO  18:06:31,629 - #41 return
INFO  18:06:31,629 - #43 b
INFO  18:06:31,630 - #33 ;
INFO  18:06:31,636 - #36 }
INFO  18:06:31,637 - #43 int
INFO  18:06:31,637 - #43 func_check
INFO  18:06:31,637 - #37 (
INFO  18:06:31,637 - #43 int
INFO  18:06:31,637 - #43 a
INFO  18:06:31,637 - #39 [
INFO  18:06:31,637 - #40 ]
INFO  18:06:31,637 - #31 ,
INFO  18:06:31,638 - #43 char
INFO  18:06:31,638 - #43 b
INFO  18:06:31,638 - #39 [
INFO  18:06:31,638 - #40 ]
INFO  18:06:31,638 - #31 ,
INFO  18:06:31,638 - #43 bool
INFO  18:06:31,638 - #43 c
INFO  18:06:31,638 - #38 )
INFO  18:06:31,638 - #43 int
INFO  18:06:31,639 - #43 local
INFO  18:06:31,639 - #33 ;
INFO  18:06:31,639 - #35 {
INFO  18:06:31,640 - #43 local
INFO  18:06:31,640 - #19 =
INFO  18:06:31,640 - #43 a
INFO  18:06:31,641 - #39 [
INFO  18:06:31,642 - #42 0
INFO  18:06:31,643 - #40 ]
INFO  18:06:31,643 - #33 ;
INFO  18:06:31,644 - #18 print
INFO  18:06:31,644 - #37 (
INFO  18:06:31,644 - #43 local
INFO  18:06:31,644 - #38 )
INFO  18:06:31,645 - #33 ;
INFO  18:06:31,645 - #43 local
INFO  18:06:31,645 - #19 =
INFO  18:06:31,645 - #43 local
INFO  18:06:31,645 - #46 *
INFO  18:06:31,645 - #42 2
INFO  18:06:31,646 - #49 +
INFO  18:06:31,646 - #43 local
INFO  18:06:31,646 - #50 -
INFO  18:06:31,646 - #43 a
INFO  18:06:31,646 - #39 [
INFO  18:06:31,646 - #42 1
INFO  18:06:31,646 - #40 ]
INFO  18:06:31,646 - #33 ;
INFO  18:06:31,646 - #18 print
INFO  18:06:31,646 - #37 (
INFO  18:06:31,647 - #43 local
INFO  18:06:31,647 - #38 )
INFO  18:06:31,647 - #33 ;
INFO  18:06:31,647 - #41 return
INFO  18:06:31,647 - #43 local
INFO  18:06:31,647 - #33 ;
INFO  18:06:31,647 - #36 }
INFO  18:06:31,647 - #5 void
INFO  18:06:31,647 - #43 main
INFO  18:06:31,647 - #37 (
INFO  18:06:31,647 - #38 )
INFO  18:06:31,647 - #43 int
INFO  18:06:31,647 - #43 x
INFO  18:06:31,647 - #33 ;
INFO  18:06:31,647 - #43 char
INFO  18:06:31,647 - #43 z
INFO  18:06:31,647 - #33 ;
INFO  18:06:31,648 - #43 bool
INFO  18:06:31,648 - #43 p
INFO  18:06:31,648 - #33 ;
INFO  18:06:31,648 - #43 char
INFO  18:06:31,648 - #43 xx
INFO  18:06:31,648 - #39 [
INFO  18:06:31,648 - #40 ]
INFO  18:06:31,648 - #33 ;
INFO  18:06:31,648 - #43 char
INFO  18:06:31,648 - #43 yy
INFO  18:06:31,648 - #39 [
INFO  18:06:31,648 - #40 ]
INFO  18:06:31,648 - #33 ;
INFO  18:06:31,648 - #43 int
INFO  18:06:31,648 - #43 br
INFO  18:06:31,648 - #39 [
INFO  18:06:31,648 - #40 ]
INFO  18:06:31,648 - #33 ;
INFO  18:06:31,648 - #35 {
INFO  18:06:31,649 - #43 br
INFO  18:06:31,649 - #19 =
INFO  18:06:31,649 - #16 new
INFO  18:06:31,649 - #43 int
INFO  18:06:31,649 - #39 [
INFO  18:06:31,649 - #42 10
INFO  18:06:31,649 - #40 ]
INFO  18:06:31,649 - #33 ;
INFO  18:06:31,649 - #43 br
INFO  18:06:31,649 - #39 [
INFO  18:06:31,649 - #42 0
INFO  18:06:31,649 - #40 ]
INFO  18:06:31,649 - #19 =
INFO  18:06:31,649 - #42 10
INFO  18:06:31,650 - #33 ;
INFO  18:06:31,650 - #43 br
INFO  18:06:31,650 - #39 [
INFO  18:06:31,650 - #42 1
INFO  18:06:31,650 - #40 ]
INFO  18:06:31,650 - #19 =
INFO  18:06:31,650 - #42 2
INFO  18:06:31,650 - #33 ;
INFO  18:06:31,650 - #43 br
INFO  18:06:31,650 - #39 [
INFO  18:06:31,650 - #42 2
INFO  18:06:31,650 - #40 ]
INFO  18:06:31,650 - #19 =
INFO  18:06:31,650 - #42 100
INFO  18:06:31,650 - #33 ;
INFO  18:06:31,650 - #43 x
INFO  18:06:31,651 - #19 =
INFO  18:06:31,651 - #43 func_check
INFO  18:06:31,651 - #37 (
INFO  18:06:31,651 - #43 br
INFO  18:06:31,651 - #31 ,
INFO  18:06:31,651 - #43 xx
INFO  18:06:31,651 - #31 ,
INFO  18:06:31,651 - #43 p
INFO  18:06:31,651 - #38 )
INFO  18:06:31,651 - #33 ;
INFO  18:06:31,651 - #18 print
INFO  18:06:31,651 - #37 (
INFO  18:06:31,651 - #43 x
INFO  18:06:31,652 - #38 )
INFO  18:06:31,652 - #33 ;
INFO  18:06:31,652 - #18 print
INFO  18:06:31,652 - #37 (
INFO  18:06:31,652 - #43 br
INFO  18:06:31,653 - #39 [
INFO  18:06:31,653 - #43 br
INFO  18:06:31,653 - #39 [
INFO  18:06:31,653 - #42 1
INFO  18:06:31,653 - #40 ]
INFO  18:06:31,653 - #40 ]
INFO  18:06:31,653 - #38 )
INFO  18:06:31,653 - #33 ;
INFO  18:06:31,653 - #18 print
INFO  18:06:31,653 - #37 (
INFO  18:06:31,653 - #43 br
INFO  18:06:31,653 - #39 [
INFO  18:06:31,653 - #42 0
INFO  18:06:31,653 - #40 ]
INFO  18:06:31,654 - #38 )
INFO  18:06:31,654 - #33 ;
INFO  18:06:31,654 - #43 br
INFO  18:06:31,654 - #39 [
INFO  18:06:31,654 - #42 0
INFO  18:06:31,654 - #40 ]
INFO  18:06:31,654 - #28 ++
INFO  18:06:31,654 - #33 ;
INFO  18:06:31,654 - #18 print
INFO  18:06:31,654 - #37 (
INFO  18:06:31,654 - #43 br
INFO  18:06:31,654 - #39 [
INFO  18:06:31,654 - #42 0
INFO  18:06:31,654 - #40 ]
INFO  18:06:31,655 - #38 )
INFO  18:06:31,655 - #33 ;
INFO  18:06:31,655 - #43 x
INFO  18:06:31,655 - #19 =
INFO  18:06:31,655 - #43 br
INFO  18:06:31,655 - #39 [
INFO  18:06:31,655 - #42 0
INFO  18:06:31,655 - #40 ]
INFO  18:06:31,655 - #49 +
INFO  18:06:31,655 - #43 br
INFO  18:06:31,655 - #39 [
INFO  18:06:31,655 - #42 1
INFO  18:06:31,655 - #40 ]
INFO  18:06:31,656 - #33 ;
INFO  18:06:31,657 - #43 a
INFO  18:06:31,657 - #19 =
INFO  18:06:31,657 - #42 2
INFO  18:06:31,657 - #49 +
INFO  18:06:31,657 - #43 br
INFO  18:06:31,657 - #39 [
INFO  18:06:31,657 - #42 0
INFO  18:06:31,657 - #40 ]
INFO  18:06:31,657 - #46 *
INFO  18:06:31,657 - #43 br
INFO  18:06:31,657 - #39 [
INFO  18:06:31,657 - #42 2
INFO  18:06:31,657 - #40 ]
INFO  18:06:31,657 - #33 ;
INFO  18:06:31,657 - #43 b
INFO  18:06:31,658 - #19 =
INFO  18:06:31,658 - #50 -
INFO  18:06:31,658 - #43 br
INFO  18:06:31,658 - #39 [
INFO  18:06:31,658 - #42 1
INFO  18:06:31,658 - #40 ]
INFO  18:06:31,658 - #46 *
INFO  18:06:31,658 - #43 br
INFO  18:06:31,658 - #39 [
INFO  18:06:31,658 - #42 2
INFO  18:06:31,658 - #40 ]
INFO  18:06:31,658 - #33 ;
INFO  18:06:31,658 - #43 c
INFO  18:06:31,659 - #19 =
INFO  18:06:31,659 - #50 -
INFO  18:06:31,659 - #43 br
INFO  18:06:31,659 - #39 [
INFO  18:06:31,659 - #42 2
INFO  18:06:31,659 - #40 ]
INFO  18:06:31,659 - #47 /
INFO  18:06:31,659 - #43 br
INFO  18:06:31,659 - #39 [
INFO  18:06:31,659 - #42 1
INFO  18:06:31,659 - #40 ]
INFO  18:06:31,659 - #33 ;
INFO  18:06:31,659 - #18 print
INFO  18:06:31,659 - #37 (
INFO  18:06:31,659 - #43 x
INFO  18:06:31,659 - #38 )
INFO  18:06:31,660 - #33 ;
INFO  18:06:31,660 - #18 print
INFO  18:06:31,660 - #37 (
INFO  18:06:31,660 - #43 a
INFO  18:06:31,660 - #38 )
INFO  18:06:31,660 - #33 ;
INFO  18:06:31,661 - #18 print
INFO  18:06:31,661 - #37 (
INFO  18:06:31,661 - #43 b
INFO  18:06:31,661 - #38 )
INFO  18:06:31,661 - #33 ;
INFO  18:06:31,661 - #18 print
INFO  18:06:31,661 - #37 (
INFO  18:06:31,661 - #43 c
INFO  18:06:31,662 - #38 )
INFO  18:06:31,662 - #33 ;
INFO  18:06:31,662 - #43 x
INFO  18:06:31,662 - #19 =
INFO  18:06:31,662 - #42 2
INFO  18:06:31,662 - #49 +
INFO  18:06:31,662 - #42 3
INFO  18:06:31,662 - #46 *
INFO  18:06:31,662 - #37 (
INFO  18:06:31,662 - #42 4
INFO  18:06:31,662 - #49 +
INFO  18:06:31,662 - #42 5
INFO  18:06:31,662 - #38 )
INFO  18:06:31,662 - #49 +
INFO  18:06:31,663 - #43 k
INFO  18:06:31,663 - #37 (
INFO  18:06:31,663 - #42 0
INFO  18:06:31,663 - #31 ,
INFO  18:06:31,663 - #42 1
INFO  18:06:31,663 - #38 )
INFO  18:06:31,663 - #33 ;
INFO  18:06:31,663 - #43 x
INFO  18:06:31,663 - #19 =
INFO  18:06:31,663 - #50 -
INFO  18:06:31,663 - #37 (
INFO  18:06:31,663 - #42 5
INFO  18:06:31,663 - #49 +
INFO  18:06:31,663 - #42 2
INFO  18:06:31,663 - #38 )
INFO  18:06:31,663 - #50 -
INFO  18:06:31,663 - #42 3
INFO  18:06:31,663 - #49 +
INFO  18:06:31,663 - #42 4
INFO  18:06:31,664 - #33 ;
INFO  18:06:31,664 - #18 print
INFO  18:06:31,664 - #37 (
INFO  18:06:31,664 - #50 -
INFO  18:06:31,664 - #43 x
INFO  18:06:31,664 - #49 +
INFO  18:06:31,664 - #42 4
INFO  18:06:31,664 - #50 -
INFO  18:06:31,664 - #42 10
INFO  18:06:31,664 - #38 )
INFO  18:06:31,664 - #33 ;
INFO  18:06:31,664 - #43 k
INFO  18:06:31,664 - #37 (
INFO  18:06:31,664 - #42 0
INFO  18:06:31,664 - #31 ,
INFO  18:06:31,664 - #42 1
INFO  18:06:31,664 - #38 )
INFO  18:06:31,664 - #33 ;
INFO  18:06:31,665 - #43 kk
INFO  18:06:31,665 - #37 (
INFO  18:06:31,665 - #38 )
INFO  18:06:31,666 - #33 ;
INFO  18:06:31,666 - #36 }
INFO  18:06:31,666 - #36 }
INFO  18:06:31,686 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      NoGroupDecl(
      ) [NoGroupDecl]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 b
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               c
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             d
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            ReturnValueClassVoid(
             kk
            ) [ReturnValueClassVoid]
            NoFormParam(
            ) [NoFormParam]
            NoVarDeclList(
            ) [NoVarDeclList]
            LBraceClass(
            ) [LBraceClass]
            NoStmt(
            ) [NoStmt]
            RBraceClass(
            ) [RBraceClass]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
           k
          ) [ReturnValueClassNoVoid]
          FormParams(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclClassNoArray(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormalParamDeclClassNoArray]
              ) [SingleFormalParamDecl]
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               b
              ) [FormalParamDeclClassNoArray]
            ) [FormalParamDecls]
          ) [FormParams]
          NoVarDeclList(
          ) [NoVarDeclList]
          LBraceClass(
          ) [LBraceClass]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              ReturnNonTerminalClass(
              ) [ReturnNonTerminalClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           b
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [ReturnExpr]
          ) [Statements]
          RBraceClass(
          ) [RBraceClass]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         func_check
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclClassArray(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormalParamDeclClassArray]
              ) [SingleFormalParamDecl]
              FormalParamDeclClassArray(
                Type(
                 char
                ) [Type]
               b
              ) [FormalParamDeclClassArray]
            ) [FormalParamDecls]
            FormalParamDeclClassNoArray(
              Type(
               bool
              ) [Type]
             c
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               local
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         local
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   a
                                  ) [DesigIdent]
                                  OptionalDesignatorArray(
                                    HelperClass(
                                    ) [HelperClass]
                                    LSquareClass(
                                    ) [LSquareClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [OptionalDesignatorArray]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               local
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     local
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               local
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          TermOptionalListClass(
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                            MultiplyOperationClass(
                             *
                            ) [MultiplyOperationClass]
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [TermOptionalListClass]
                        ) [TermClass]
                        ExprOptionalListClass(
                          ExprOptionalListClass(
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                            PlusOperation(
                             +
                            ) [PlusOperation]
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   local
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                          ) [ExprOptionalListClass]
                          MinusOperation(
                           -
                          ) [MinusOperation]
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 a
                                ) [DesigIdent]
                                OptionalDesignatorArray(
                                  HelperClass(
                                  ) [HelperClass]
                                  LSquareClass(
                                  ) [LSquareClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           1
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [OptionalDesignatorArray]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                        ) [ExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            PrintStmt(
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           local
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
              NoCommaNumberClass(
              ) [NoCommaNumberClass]
            ) [PrintStmt]
          ) [Statements]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         local
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  VarDeclClass(
                    Type(
                     int
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       x
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   char
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     z
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 bool
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   p
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               char
              ) [Type]
              VarListSingle(
                VarClassArray(
                 xx
                ) [VarClassArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassArray(
               yy
              ) [VarClassArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             br
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    NoStmt(
                                                    ) [NoStmt]
                                                    Assignment(
                                                      DesignatorStatementOptionsClassAssignExpression(
                                                        Designator(
                                                          DesigIdent(
                                                           br
                                                          ) [DesigIdent]
                                                          NoOptionalDesignatorClass(
                                                          ) [NoOptionalDesignatorClass]
                                                        ) [Designator]
                                                        AssignOpClass(
                                                          AssignOperationClass(
                                                          ) [AssignOperationClass]
                                                        ) [AssignOpClass]
                                                        ClassOneClass(
                                                          NormalExpressionClass(
                                                            ExprFirstOptionClassWithMinus(
                                                              TermClass(
                                                                NewFactorClass(
                                                                  Type(
                                                                   int
                                                                  ) [Type]
                                                                  FactorOptionalSecondClass(
                                                                    ClassOneClass(
                                                                      NormalExpressionClass(
                                                                        ExprFirstOptionClassWithMinus(
                                                                          TermClass(
                                                                            NumberConst(
                                                                             10
                                                                            ) [NumberConst]
                                                                            NoTermOptionalListClass(
                                                                            ) [NoTermOptionalListClass]
                                                                          ) [TermClass]
                                                                          NoExprOptionalListClass(
                                                                          ) [NoExprOptionalListClass]
                                                                        ) [ExprFirstOptionClassWithMinus]
                                                                      ) [NormalExpressionClass]
                                                                    ) [ClassOneClass]
                                                                  ) [FactorOptionalSecondClass]
                                                                ) [NewFactorClass]
                                                                NoTermOptionalListClass(
                                                                ) [NoTermOptionalListClass]
                                                              ) [TermClass]
                                                              NoExprOptionalListClass(
                                                              ) [NoExprOptionalListClass]
                                                            ) [ExprFirstOptionClassWithMinus]
                                                          ) [NormalExpressionClass]
                                                        ) [ClassOneClass]
                                                      ) [DesignatorStatementOptionsClassAssignExpression]
                                                    ) [Assignment]
                                                  ) [Statements]
                                                  Assignment(
                                                    DesignatorStatementOptionsClassAssignExpression(
                                                      Designator(
                                                        DesigIdent(
                                                         br
                                                        ) [DesigIdent]
                                                        OptionalDesignatorArray(
                                                          HelperClass(
                                                          ) [HelperClass]
                                                          LSquareClass(
                                                          ) [LSquareClass]
                                                          ClassOneClass(
                                                            NormalExpressionClass(
                                                              ExprFirstOptionClassWithMinus(
                                                                TermClass(
                                                                  NumberConst(
                                                                   0
                                                                  ) [NumberConst]
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                ) [TermClass]
                                                                NoExprOptionalListClass(
                                                                ) [NoExprOptionalListClass]
                                                              ) [ExprFirstOptionClassWithMinus]
                                                            ) [NormalExpressionClass]
                                                          ) [ClassOneClass]
                                                        ) [OptionalDesignatorArray]
                                                      ) [Designator]
                                                      AssignOpClass(
                                                        AssignOperationClass(
                                                        ) [AssignOperationClass]
                                                      ) [AssignOpClass]
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              NumberConst(
                                                               10
                                                              ) [NumberConst]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                    ) [DesignatorStatementOptionsClassAssignExpression]
                                                  ) [Assignment]
                                                ) [Statements]
                                                Assignment(
                                                  DesignatorStatementOptionsClassAssignExpression(
                                                    Designator(
                                                      DesigIdent(
                                                       br
                                                      ) [DesigIdent]
                                                      OptionalDesignatorArray(
                                                        HelperClass(
                                                        ) [HelperClass]
                                                        LSquareClass(
                                                        ) [LSquareClass]
                                                        ClassOneClass(
                                                          NormalExpressionClass(
                                                            ExprFirstOptionClassWithMinus(
                                                              TermClass(
                                                                NumberConst(
                                                                 1
                                                                ) [NumberConst]
                                                                NoTermOptionalListClass(
                                                                ) [NoTermOptionalListClass]
                                                              ) [TermClass]
                                                              NoExprOptionalListClass(
                                                              ) [NoExprOptionalListClass]
                                                            ) [ExprFirstOptionClassWithMinus]
                                                          ) [NormalExpressionClass]
                                                        ) [ClassOneClass]
                                                      ) [OptionalDesignatorArray]
                                                    ) [Designator]
                                                    AssignOpClass(
                                                      AssignOperationClass(
                                                      ) [AssignOperationClass]
                                                    ) [AssignOpClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            NumberConst(
                                                             2
                                                            ) [NumberConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                                ) [Assignment]
                                              ) [Statements]
                                              Assignment(
                                                DesignatorStatementOptionsClassAssignExpression(
                                                  Designator(
                                                    DesigIdent(
                                                     br
                                                    ) [DesigIdent]
                                                    OptionalDesignatorArray(
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      LSquareClass(
                                                      ) [LSquareClass]
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              NumberConst(
                                                               2
                                                              ) [NumberConst]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                    ) [OptionalDesignatorArray]
                                                  ) [Designator]
                                                  AssignOpClass(
                                                    AssignOperationClass(
                                                    ) [AssignOperationClass]
                                                  ) [AssignOpClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           100
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [DesignatorStatementOptionsClassAssignExpression]
                                              ) [Assignment]
                                            ) [Statements]
                                            Assignment(
                                              DesignatorStatementOptionsClassAssignExpression(
                                                Designator(
                                                  DesigIdent(
                                                   x
                                                  ) [DesigIdent]
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                                AssignOpClass(
                                                  AssignOperationClass(
                                                  ) [AssignOperationClass]
                                                ) [AssignOpClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        FactorOptionalParams(
                                                          Designator(
                                                            DesigIdent(
                                                             func_check
                                                            ) [DesigIdent]
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                          Actuals(
                                                            ActualParams(
                                                              ActualParams(
                                                                ActualParam(
                                                                  ClassOneClass(
                                                                    NormalExpressionClass(
                                                                      ExprFirstOptionClassWithMinus(
                                                                        TermClass(
                                                                          DesignatorClass(
                                                                            Designator(
                                                                              DesigIdent(
                                                                               br
                                                                              ) [DesigIdent]
                                                                              NoOptionalDesignatorClass(
                                                                              ) [NoOptionalDesignatorClass]
                                                                            ) [Designator]
                                                                          ) [DesignatorClass]
                                                                          NoTermOptionalListClass(
                                                                          ) [NoTermOptionalListClass]
                                                                        ) [TermClass]
                                                                        NoExprOptionalListClass(
                                                                        ) [NoExprOptionalListClass]
                                                                      ) [ExprFirstOptionClassWithMinus]
                                                                    ) [NormalExpressionClass]
                                                                  ) [ClassOneClass]
                                                                ) [ActualParam]
                                                                ClassOneClass(
                                                                  NormalExpressionClass(
                                                                    ExprFirstOptionClassWithMinus(
                                                                      TermClass(
                                                                        DesignatorClass(
                                                                          Designator(
                                                                            DesigIdent(
                                                                             xx
                                                                            ) [DesigIdent]
                                                                            NoOptionalDesignatorClass(
                                                                            ) [NoOptionalDesignatorClass]
                                                                          ) [Designator]
                                                                        ) [DesignatorClass]
                                                                        NoTermOptionalListClass(
                                                                        ) [NoTermOptionalListClass]
                                                                      ) [TermClass]
                                                                      NoExprOptionalListClass(
                                                                      ) [NoExprOptionalListClass]
                                                                    ) [ExprFirstOptionClassWithMinus]
                                                                  ) [NormalExpressionClass]
                                                                ) [ClassOneClass]
                                                              ) [ActualParams]
                                                              ClassOneClass(
                                                                NormalExpressionClass(
                                                                  ExprFirstOptionClassWithMinus(
                                                                    TermClass(
                                                                      DesignatorClass(
                                                                        Designator(
                                                                          DesigIdent(
                                                                           p
                                                                          ) [DesigIdent]
                                                                          NoOptionalDesignatorClass(
                                                                          ) [NoOptionalDesignatorClass]
                                                                        ) [Designator]
                                                                      ) [DesignatorClass]
                                                                      NoTermOptionalListClass(
                                                                      ) [NoTermOptionalListClass]
                                                                    ) [TermClass]
                                                                    NoExprOptionalListClass(
                                                                    ) [NoExprOptionalListClass]
                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                ) [NormalExpressionClass]
                                                              ) [ClassOneClass]
                                                            ) [ActualParams]
                                                          ) [Actuals]
                                                        ) [FactorOptionalParams]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [DesignatorStatementOptionsClassAssignExpression]
                                            ) [Assignment]
                                          ) [Statements]
                                          PrintStmt(
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      Designator(
                                                        DesigIdent(
                                                         x
                                                        ) [DesigIdent]
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                            NoCommaNumberClass(
                                            ) [NoCommaNumberClass]
                                          ) [PrintStmt]
                                        ) [Statements]
                                        PrintStmt(
                                          ClassOneClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  DesignatorClass(
                                                    Designator(
                                                      DesigIdent(
                                                       br
                                                      ) [DesigIdent]
                                                      OptionalDesignatorArray(
                                                        HelperClass(
                                                        ) [HelperClass]
                                                        LSquareClass(
                                                        ) [LSquareClass]
                                                        ClassOneClass(
                                                          NormalExpressionClass(
                                                            ExprFirstOptionClassWithMinus(
                                                              TermClass(
                                                                DesignatorClass(
                                                                  Designator(
                                                                    DesigIdent(
                                                                     br
                                                                    ) [DesigIdent]
                                                                    OptionalDesignatorArray(
                                                                      HelperClass(
                                                                      ) [HelperClass]
                                                                      LSquareClass(
                                                                      ) [LSquareClass]
                                                                      ClassOneClass(
                                                                        NormalExpressionClass(
                                                                          ExprFirstOptionClassWithMinus(
                                                                            TermClass(
                                                                              NumberConst(
                                                                               1
                                                                              ) [NumberConst]
                                                                              NoTermOptionalListClass(
                                                                              ) [NoTermOptionalListClass]
                                                                            ) [TermClass]
                                                                            NoExprOptionalListClass(
                                                                            ) [NoExprOptionalListClass]
                                                                          ) [ExprFirstOptionClassWithMinus]
                                                                        ) [NormalExpressionClass]
                                                                      ) [ClassOneClass]
                                                                    ) [OptionalDesignatorArray]
                                                                  ) [Designator]
                                                                ) [DesignatorClass]
                                                                NoTermOptionalListClass(
                                                                ) [NoTermOptionalListClass]
                                                              ) [TermClass]
                                                              NoExprOptionalListClass(
                                                              ) [NoExprOptionalListClass]
                                                            ) [ExprFirstOptionClassWithMinus]
                                                          ) [NormalExpressionClass]
                                                        ) [ClassOneClass]
                                                      ) [OptionalDesignatorArray]
                                                    ) [Designator]
                                                  ) [DesignatorClass]
                                                  NoTermOptionalListClass(
                                                  ) [NoTermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                          ) [ClassOneClass]
                                          NoCommaNumberClass(
                                          ) [NoCommaNumberClass]
                                        ) [PrintStmt]
                                      ) [Statements]
                                      PrintStmt(
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                DesignatorClass(
                                                  Designator(
                                                    DesigIdent(
                                                     br
                                                    ) [DesigIdent]
                                                    OptionalDesignatorArray(
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      LSquareClass(
                                                      ) [LSquareClass]
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              NumberConst(
                                                               0
                                                              ) [NumberConst]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                    ) [OptionalDesignatorArray]
                                                  ) [Designator]
                                                ) [DesignatorClass]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                        NoCommaNumberClass(
                                        ) [NoCommaNumberClass]
                                      ) [PrintStmt]
                                    ) [Statements]
                                    Assignment(
                                      DesignatorStatementPlusPlus(
                                        Designator(
                                          DesigIdent(
                                           br
                                          ) [DesigIdent]
                                          OptionalDesignatorArray(
                                            HelperClass(
                                            ) [HelperClass]
                                            LSquareClass(
                                            ) [LSquareClass]
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    NumberConst(
                                                     0
                                                    ) [NumberConst]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                          ) [OptionalDesignatorArray]
                                        ) [Designator]
                                      ) [DesignatorStatementPlusPlus]
                                    ) [Assignment]
                                  ) [Statements]
                                  PrintStmt(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 br
                                                ) [DesigIdent]
                                                OptionalDesignatorArray(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  LSquareClass(
                                                  ) [LSquareClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           0
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [OptionalDesignatorArray]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                    NoCommaNumberClass(
                                    ) [NoCommaNumberClass]
                                  ) [PrintStmt]
                                ) [Statements]
                                Assignment(
                                  DesignatorStatementOptionsClassAssignExpression(
                                    Designator(
                                      DesigIdent(
                                       x
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    AssignOpClass(
                                      AssignOperationClass(
                                      ) [AssignOperationClass]
                                    ) [AssignOpClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 br
                                                ) [DesigIdent]
                                                OptionalDesignatorArray(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  LSquareClass(
                                                  ) [LSquareClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           0
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [OptionalDesignatorArray]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          ExprOptionalListClass(
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                            PlusOperation(
                                             +
                                            ) [PlusOperation]
                                            TermClass(
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   br
                                                  ) [DesigIdent]
                                                  OptionalDesignatorArray(
                                                    HelperClass(
                                                    ) [HelperClass]
                                                    LSquareClass(
                                                    ) [LSquareClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            NumberConst(
                                                             1
                                                            ) [NumberConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [OptionalDesignatorArray]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                          ) [ExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                ) [Assignment]
                              ) [Statements]
                              Assignment(
                                DesignatorStatementOptionsClassAssignExpression(
                                  Designator(
                                    DesigIdent(
                                     a
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                  AssignOpClass(
                                    AssignOperationClass(
                                    ) [AssignOperationClass]
                                  ) [AssignOpClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           2
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        ExprOptionalListClass(
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                          PlusOperation(
                                           +
                                          ) [PlusOperation]
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 br
                                                ) [DesigIdent]
                                                OptionalDesignatorArray(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  LSquareClass(
                                                  ) [LSquareClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           0
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [OptionalDesignatorArray]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            TermOptionalListClass(
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                              MultiplyOperationClass(
                                               *
                                              ) [MultiplyOperationClass]
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   br
                                                  ) [DesigIdent]
                                                  OptionalDesignatorArray(
                                                    HelperClass(
                                                    ) [HelperClass]
                                                    LSquareClass(
                                                    ) [LSquareClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            NumberConst(
                                                             2
                                                            ) [NumberConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [OptionalDesignatorArray]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                            ) [TermOptionalListClass]
                                          ) [TermClass]
                                        ) [ExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [DesignatorStatementOptionsClassAssignExpression]
                              ) [Assignment]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementOptionsClassAssignExpression(
                                Designator(
                                  DesigIdent(
                                   b
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                AssignOpClass(
                                  AssignOperationClass(
                                  ) [AssignOperationClass]
                                ) [AssignOpClass]
                                ClassOneClass(
                                  ExprSecondOptionClassMinus(
                                    ExprNegativeClass(
                                     -
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               br
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         1
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          TermOptionalListClass(
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                            MultiplyOperationClass(
                                             *
                                            ) [MultiplyOperationClass]
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 br
                                                ) [DesigIdent]
                                                OptionalDesignatorArray(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  LSquareClass(
                                                  ) [LSquareClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           2
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [OptionalDesignatorArray]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                          ) [TermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [ExprNegativeClass]
                                  ) [ExprSecondOptionClassMinus]
                                ) [ClassOneClass]
                              ) [DesignatorStatementOptionsClassAssignExpression]
                            ) [Assignment]
                          ) [Statements]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 c
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                ExprSecondOptionClassMinus(
                                  ExprNegativeClass(
                                   -
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        DesignatorClass(
                                          Designator(
                                            DesigIdent(
                                             br
                                            ) [DesigIdent]
                                            OptionalDesignatorArray(
                                              HelperClass(
                                              ) [HelperClass]
                                              LSquareClass(
                                              ) [LSquareClass]
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      NumberConst(
                                                       2
                                                      ) [NumberConst]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                            ) [OptionalDesignatorArray]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                        TermOptionalListClass(
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                          DivideOperationClass(
                                           /
                                          ) [DivideOperationClass]
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               br
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         1
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                        ) [TermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [ExprNegativeClass]
                                ) [ExprSecondOptionClassMinus]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       x
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          NoCommaNumberClass(
                          ) [NoCommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     a
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   b
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 c
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       x
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             2
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          ExprOptionalListClass(
                            ExprOptionalListClass(
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                              PlusOperation(
                               +
                              ) [PlusOperation]
                              TermClass(
                                NumberConst(
                                 3
                                ) [NumberConst]
                                TermOptionalListClass(
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                  MultiplyOperationClass(
                                   *
                                  ) [MultiplyOperationClass]
                                  ParenFactorClass(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             4
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          ExprOptionalListClass(
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                            PlusOperation(
                                             +
                                            ) [PlusOperation]
                                            TermClass(
                                              NumberConst(
                                               5
                                              ) [NumberConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                          ) [ExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [ParenFactorClass]
                                ) [TermOptionalListClass]
                              ) [TermClass]
                            ) [ExprOptionalListClass]
                            PlusOperation(
                             +
                            ) [PlusOperation]
                            TermClass(
                              FactorOptionalParams(
                                Designator(
                                  DesigIdent(
                                   k
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                Actuals(
                                  ActualParams(
                                    ActualParam(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              NumberConst(
                                               0
                                              ) [NumberConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                    ) [ActualParam]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             1
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [ActualParams]
                                ) [Actuals]
                              ) [FactorOptionalParams]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                          ) [ExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     x
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    ExprSecondOptionClassMinus(
                      ExprNegativeClass(
                       -
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            ParenFactorClass(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       5
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    ExprOptionalListClass(
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                      PlusOperation(
                                       +
                                      ) [PlusOperation]
                                      TermClass(
                                        NumberConst(
                                         2
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                    ) [ExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [ParenFactorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          ExprOptionalListClass(
                            ExprOptionalListClass(
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                              MinusOperation(
                               -
                              ) [MinusOperation]
                              TermClass(
                                NumberConst(
                                 3
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                            ) [ExprOptionalListClass]
                            PlusOperation(
                             +
                            ) [PlusOperation]
                            TermClass(
                              NumberConst(
                               4
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                          ) [ExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [ExprNegativeClass]
                    ) [ExprSecondOptionClassMinus]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            PrintStmt(
              ClassOneClass(
                ExprSecondOptionClassMinus(
                  ExprNegativeClass(
                   -
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                            DesigIdent(
                             x
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      ExprOptionalListClass(
                        ExprOptionalListClass(
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                          PlusOperation(
                           +
                          ) [PlusOperation]
                          TermClass(
                            NumberConst(
                             4
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                        ) [ExprOptionalListClass]
                        MinusOperation(
                         -
                        ) [MinusOperation]
                        TermClass(
                          NumberConst(
                           10
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                      ) [ExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [ExprNegativeClass]
                ) [ExprSecondOptionClassMinus]
              ) [ClassOneClass]
              NoCommaNumberClass(
              ) [NoCommaNumberClass]
            ) [PrintStmt]
          ) [Statements]
          Assignment(
            DesignatorStatementActualParameters(
              Designator(
                DesigIdent(
                 k
                ) [DesigIdent]
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              Actuals(
                ActualParams(
                  ActualParam(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             0
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [ActualParam]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           1
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [ActualParams]
              ) [Actuals]
            ) [DesignatorStatementActualParameters]
          ) [Assignment]
        ) [Statements]
        Assignment(
          DesignatorStatementActualParameters(
            Designator(
              DesigIdent(
               kk
              ) [DesigIdent]
              NoOptionalDesignatorClass(
              ) [NoOptionalDesignatorClass]
            ) [Designator]
            NoActuals(
            ) [NoActuals]
          ) [DesignatorStatementActualParameters]
        ) [Assignment]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:06:31,689 - ===================================
INFO  18:06:31,693 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  18:06:31,693 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  18:06:31,693 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  18:06:31,693 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  18:06:31,693 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  18:06:31,693 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  18:06:31,694 - CONST VALUE 3 IS BEING USED! ON LINE 4
INFO  18:06:31,694 - CONST VARIABLE y IS BEING DEFINED! ON LINE 4
INFO  18:06:31,694 - FUNCTION kk WITH VOID AS RETURN VALUE!  ON LINE 6
INFO  18:06:31,694 - METHOD BODY STARTING!
INFO  18:06:31,694 - METHOD BODY ENDING!
INFO  18:06:31,694 - END OF DEFINING FUNCTION kk
INFO  18:06:31,694 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 8
INFO  18:06:31,694 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 8
INFO  18:06:31,694 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 8
INFO  18:06:31,694 - METHOD BODY STARTING!
INFO  18:06:31,694 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  18:06:31,694 - WE ARE USING A VARIABLE OF TYPE int ON LINE 8
INFO  18:06:31,694 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  18:06:31,694 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  18:06:31,694 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 8
INFO  18:06:31,694 - METHOD BODY ENDING!
INFO  18:06:31,694 - END OF DEFINING FUNCTION k
INFO  18:06:31,694 - FUNCTION func_check WITH RETURN VALUE OF TYPE int ON LINE 10
INFO  18:06:31,694 - FORMAL ARRAY PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 10
INFO  18:06:31,694 - FORMAL ARRAY PARAMETER b DEFINED AND IT IS OF TYPE char ON LINE 10
INFO  18:06:31,694 - FORMAL PARAMETER c DEFINED AND IT IS OF TYPE boolean ON LINE 10
INFO  18:06:31,695 - VARIABLE local IS BEING DEFINED! ON LINE 11
INFO  18:06:31,695 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 11
INFO  18:06:31,695 - METHOD BODY STARTING!
INFO  18:06:31,695 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  18:06:31,695 - BEGINNING OF AN ASSIGNEMENT! ON LINE 13
INFO  18:06:31,695 - CONST NUMBER 0 ON LINE 13
INFO  18:06:31,695 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  18:06:31,695 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  18:06:31,695 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE array
INFO  18:06:31,695 - WE ARE USING AN ARRAY OF TYPE int ON LINE 13
INFO  18:06:31,695 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  18:06:31,695 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  18:06:31,695 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 13
INFO  18:06:31,695 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  18:06:31,695 - WE ARE USING A VARIABLE OF TYPE int ON LINE 14
INFO  18:06:31,695 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  18:06:31,695 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  18:06:31,695 - PRINT FUNCTION CALL IN USE! ON LINE 14
INFO  18:06:31,695 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  18:06:31,695 - BEGINNING OF AN ASSIGNEMENT! ON LINE 15
INFO  18:06:31,695 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  18:06:31,695 - WE ARE USING A VARIABLE OF TYPE int ON LINE 15
INFO  18:06:31,695 - CONST NUMBER 2 ON LINE 15
INFO  18:06:31,695 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  18:06:31,696 - USING INTEGERS IN TERM! ON LINE 15
INFO  18:06:31,696 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  18:06:31,696 - WE ARE USING A VARIABLE OF TYPE int ON LINE 15
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  18:06:31,696 - CONST NUMBER 1 ON LINE 15
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  18:06:31,696 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE array
INFO  18:06:31,696 - WE ARE USING AN ARRAY OF TYPE int ON LINE 15
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  18:06:31,696 - USING INTEGERS IN TERM! ON LINE 18
INFO  18:06:31,696 - USING INTEGERS IN TERM! ON LINE 15
INFO  18:06:31,696 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 15
INFO  18:06:31,696 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  18:06:31,696 - WE ARE USING A VARIABLE OF TYPE int ON LINE 16
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  18:06:31,696 - PRINT FUNCTION CALL IN USE! ON LINE 16
INFO  18:06:31,696 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  18:06:31,696 - WE ARE USING A VARIABLE OF TYPE int ON LINE 17
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  18:06:31,696 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  18:06:31,696 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 17
INFO  18:06:31,696 - METHOD BODY ENDING!
INFO  18:06:31,696 - END OF DEFINING FUNCTION func_check
INFO  18:06:31,696 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 22
INFO  18:06:31,696 - VARIABLE x IS BEING DEFINED! ON LINE 23
INFO  18:06:31,696 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 23
INFO  18:06:31,697 - VARIABLE z IS BEING DEFINED! ON LINE 24
INFO  18:06:31,697 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 24
INFO  18:06:31,697 - VARIABLE p IS BEING DEFINED! ON LINE 25
INFO  18:06:31,697 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 25
INFO  18:06:31,697 - ARRAY VARIABLE xx IS BEING DEFINED! ON LINE 26
INFO  18:06:31,697 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 26
INFO  18:06:31,697 - ARRAY VARIABLE yy IS BEING DEFINED! ON LINE 27
INFO  18:06:31,697 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 27
INFO  18:06:31,697 - ARRAY VARIABLE br IS BEING DEFINED! ON LINE 28
INFO  18:06:31,697 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 28
INFO  18:06:31,697 - METHOD BODY STARTING!
INFO  18:06:31,697 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,697 - BEGINNING OF AN ASSIGNEMENT! ON LINE 31
INFO  18:06:31,697 - CONST NUMBER 10 ON LINE 31
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  18:06:31,697 - USAGE OF KEYWORD NEW! ON LINE 31
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  18:06:31,697 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 31
INFO  18:06:31,697 - CONST NUMBER 0 ON LINE 32
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  18:06:31,697 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,697 - BEGINNING OF AN ASSIGNEMENT! ON LINE 32
INFO  18:06:31,697 - CONST NUMBER 10 ON LINE 32
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  18:06:31,697 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 32
INFO  18:06:31,697 - CONST NUMBER 1 ON LINE 33
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 33
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 33
INFO  18:06:31,697 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,697 - BEGINNING OF AN ASSIGNEMENT! ON LINE 33
INFO  18:06:31,697 - CONST NUMBER 2 ON LINE 33
INFO  18:06:31,697 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 33
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 33
INFO  18:06:31,698 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 33
INFO  18:06:31,698 - CONST NUMBER 2 ON LINE 34
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  18:06:31,698 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,698 - BEGINNING OF AN ASSIGNEMENT! ON LINE 34
INFO  18:06:31,698 - CONST NUMBER 100 ON LINE 34
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  18:06:31,698 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 34
INFO  18:06:31,698 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  18:06:31,698 - BEGINNING OF AN ASSIGNEMENT! ON LINE 36
INFO  18:06:31,698 - CURRENT VARIABLE IN USE IS func_check AND IT IS OF TYPE int
INFO  18:06:31,698 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,698 - WE ARE USING A VARIABLE OF TYPE array ON LINE 36
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  18:06:31,698 - CURRENT VARIABLE IN USE IS xx AND IT IS OF TYPE array
INFO  18:06:31,698 - WE ARE USING A VARIABLE OF TYPE array ON LINE 36
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  18:06:31,698 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  18:06:31,698 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 36
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  18:06:31,698 - TYPE -> array <- AND -> array <- ON LINE 36
INFO  18:06:31,698 - TYPE -> array <- AND -> array <- ON LINE 36
INFO  18:06:31,698 - TYPE -> boolean <- AND -> boolean <- ON LINE 36
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  18:06:31,698 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 36
INFO  18:06:31,698 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  18:06:31,698 - WE ARE USING A VARIABLE OF TYPE int ON LINE 37
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  18:06:31,698 - PRINT FUNCTION CALL IN USE! ON LINE 37
INFO  18:06:31,698 - CONST NUMBER 1 ON LINE 40
INFO  18:06:31,698 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  18:06:31,699 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,699 - WE ARE USING AN ARRAY OF TYPE int ON LINE 40
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  18:06:31,699 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,699 - WE ARE USING AN ARRAY OF TYPE int ON LINE 40
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  18:06:31,699 - PRINT FUNCTION CALL IN USE! ON LINE 40
INFO  18:06:31,699 - CONST NUMBER 0 ON LINE 41
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  18:06:31,699 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,699 - WE ARE USING AN ARRAY OF TYPE int ON LINE 41
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  18:06:31,699 - PRINT FUNCTION CALL IN USE! ON LINE 41
INFO  18:06:31,699 - CONST NUMBER 0 ON LINE 42
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  18:06:31,699 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,699 - USING ++ ON br ON LINE 42
INFO  18:06:31,699 - CONST NUMBER 0 ON LINE 43
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  18:06:31,699 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,699 - WE ARE USING AN ARRAY OF TYPE int ON LINE 43
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  18:06:31,699 - PRINT FUNCTION CALL IN USE! ON LINE 43
INFO  18:06:31,699 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  18:06:31,699 - BEGINNING OF AN ASSIGNEMENT! ON LINE 45
INFO  18:06:31,699 - CONST NUMBER 0 ON LINE 45
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  18:06:31,699 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,699 - WE ARE USING AN ARRAY OF TYPE int ON LINE 45
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  18:06:31,699 - CONST NUMBER 1 ON LINE 45
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  18:06:31,699 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,699 - WE ARE USING AN ARRAY OF TYPE int ON LINE 45
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  18:06:31,699 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  18:06:31,699 - USING INTEGERS IN TERM! ON LINE 45
INFO  18:06:31,700 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 45
INFO  18:06:31,700 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  18:06:31,700 - BEGINNING OF AN ASSIGNEMENT! ON LINE 46
INFO  18:06:31,700 - CONST NUMBER 2 ON LINE 46
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  18:06:31,700 - CONST NUMBER 0 ON LINE 46
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  18:06:31,700 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,700 - WE ARE USING AN ARRAY OF TYPE int ON LINE 46
INFO  18:06:31,700 - CONST NUMBER 2 ON LINE 46
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  18:06:31,700 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,700 - WE ARE USING AN ARRAY OF TYPE int ON LINE 46
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  18:06:31,700 - USING INTEGERS IN TERM! ON LINE 46
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 6
INFO  18:06:31,700 - USING INTEGERS IN TERM! ON LINE 46
INFO  18:06:31,700 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 46
INFO  18:06:31,700 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  18:06:31,700 - BEGINNING OF AN ASSIGNEMENT! ON LINE 47
INFO  18:06:31,700 - CONST NUMBER 1 ON LINE 47
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  18:06:31,700 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,700 - WE ARE USING AN ARRAY OF TYPE int ON LINE 47
INFO  18:06:31,700 - CONST NUMBER 2 ON LINE 47
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  18:06:31,700 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,700 - WE ARE USING AN ARRAY OF TYPE int ON LINE 47
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  18:06:31,700 - USING INTEGERS IN TERM! ON LINE 47
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  18:06:31,700 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 47
INFO  18:06:31,700 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  18:06:31,700 - BEGINNING OF AN ASSIGNEMENT! ON LINE 48
INFO  18:06:31,700 - CONST NUMBER 2 ON LINE 48
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  18:06:31,700 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  18:06:31,700 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,700 - WE ARE USING AN ARRAY OF TYPE int ON LINE 48
INFO  18:06:31,701 - CONST NUMBER 1 ON LINE 48
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  18:06:31,701 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  18:06:31,701 - WE ARE USING AN ARRAY OF TYPE int ON LINE 48
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  18:06:31,701 - USING INTEGERS IN TERM! ON LINE 48
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  18:06:31,701 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 48
INFO  18:06:31,701 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  18:06:31,701 - WE ARE USING A VARIABLE OF TYPE int ON LINE 50
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  18:06:31,701 - PRINT FUNCTION CALL IN USE! ON LINE 50
INFO  18:06:31,701 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  18:06:31,701 - WE ARE USING A VARIABLE OF TYPE int ON LINE 51
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 51
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 51
INFO  18:06:31,701 - PRINT FUNCTION CALL IN USE! ON LINE 51
INFO  18:06:31,701 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  18:06:31,701 - WE ARE USING A VARIABLE OF TYPE int ON LINE 52
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  18:06:31,701 - PRINT FUNCTION CALL IN USE! ON LINE 52
INFO  18:06:31,701 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  18:06:31,701 - WE ARE USING A VARIABLE OF TYPE int ON LINE 53
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  18:06:31,701 - PRINT FUNCTION CALL IN USE! ON LINE 53
INFO  18:06:31,701 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  18:06:31,701 - BEGINNING OF AN ASSIGNEMENT! ON LINE 55
INFO  18:06:31,701 - CONST NUMBER 2 ON LINE 55
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  18:06:31,701 - CONST NUMBER 3 ON LINE 55
INFO  18:06:31,701 - CONST NUMBER 4 ON LINE 55
INFO  18:06:31,701 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  18:06:31,701 - CONST NUMBER 5 ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  18:06:31,702 - USING INTEGERS IN TERM! ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  18:06:31,702 - USING INTEGERS IN TERM! ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 6
INFO  18:06:31,702 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  18:06:31,702 - CONST NUMBER 0 ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  18:06:31,702 - CONST NUMBER 1 ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  18:06:31,702 - TYPE -> int <- AND -> int <- ON LINE 55
INFO  18:06:31,702 - TYPE -> int <- AND -> int <- ON LINE 55
INFO  18:06:31,702 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  18:06:31,702 - USING INTEGERS IN TERM! ON LINE 6
INFO  18:06:31,702 - USING INTEGERS IN TERM! ON LINE 55
INFO  18:06:31,702 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 55
INFO  18:06:31,702 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  18:06:31,702 - BEGINNING OF AN ASSIGNEMENT! ON LINE 56
INFO  18:06:31,702 - CONST NUMBER 5 ON LINE 56
INFO  18:06:31,703 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  18:06:31,703 - CONST NUMBER 2 ON LINE 56
INFO  18:06:31,703 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  18:06:31,703 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  18:06:31,703 - USING INTEGERS IN TERM! ON LINE 56
INFO  18:06:31,703 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  18:06:31,703 - CONST NUMBER 3 ON LINE 56
INFO  18:06:31,703 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  18:06:31,703 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  18:06:31,703 - CONST NUMBER 4 ON LINE 56
INFO  18:06:31,703 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  18:06:31,703 - USING INTEGERS IN TERM! ON LINE 13
INFO  18:06:31,703 - USING INTEGERS IN TERM! ON LINE 56
INFO  18:06:31,703 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 56
INFO  18:06:31,703 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  18:06:31,703 - WE ARE USING A VARIABLE OF TYPE int ON LINE 58
INFO  18:06:31,704 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  18:06:31,704 - CONST NUMBER 4 ON LINE 58
INFO  18:06:31,704 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  18:06:31,704 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  18:06:31,704 - CONST NUMBER 10 ON LINE 58
INFO  18:06:31,704 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  18:06:31,704 - USING INTEGERS IN TERM! ON LINE 9
INFO  18:06:31,704 - USING INTEGERS IN TERM! ON LINE 58
INFO  18:06:31,704 - PRINT FUNCTION CALL IN USE! ON LINE 58
INFO  18:06:31,704 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  18:06:31,704 - CONST NUMBER 0 ON LINE 60
INFO  18:06:31,704 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  18:06:31,704 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  18:06:31,704 - CONST NUMBER 1 ON LINE 60
INFO  18:06:31,704 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  18:06:31,704 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  18:06:31,704 - TYPE -> int <- AND -> int <- ON LINE 60
INFO  18:06:31,704 - TYPE -> int <- AND -> int <- ON LINE 60
INFO  18:06:31,704 - GLOBAL METHOD k HAS BEEN CALLED!
INFO  18:06:31,704 - CURRENT VARIABLE IN USE IS kk AND IT IS OF TYPE void
INFO  18:06:31,704 - GLOBAL METHOD kk HAS BEEN CALLED!
INFO  18:06:31,704 - METHOD BODY ENDING!
INFO  18:06:31,704 - END OF DEFINING FUNCTION main
INFO  18:06:31,704 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  18:06:31,704 -  Deklarisanih promenljivih ima = 11
INFO  18:06:31,704 - ===================================
INFO  18:06:31,709 - Parsiranje uspesno zavrseno!
