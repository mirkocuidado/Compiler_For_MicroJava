INFO  16:23:23,368 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  16:23:23,444 - #2 program
INFO  16:23:23,445 - #43 MJProgram
INFO  16:23:23,445 - #43 int
INFO  16:23:23,447 - #43 a
INFO  16:23:23,447 - #31 ,
INFO  16:23:23,448 - #43 b
INFO  16:23:23,448 - #31 ,
INFO  16:23:23,448 - #43 c
INFO  16:23:23,448 - #31 ,
INFO  16:23:23,448 - #43 d
INFO  16:23:23,448 - #33 ;
INFO  16:23:23,448 - #9 const
INFO  16:23:23,449 - #43 int
INFO  16:23:23,449 - #43 term
INFO  16:23:23,449 - #19 =
INFO  16:23:23,449 - #42 0
INFO  16:23:23,449 - #33 ;
INFO  16:23:23,450 - #9 const
INFO  16:23:23,450 - #43 int
INFO  16:23:23,450 - #43 y
INFO  16:23:23,450 - #19 =
INFO  16:23:23,460 - #42 3
INFO  16:23:23,460 - #33 ;
INFO  16:23:23,460 - #35 {
INFO  16:23:23,460 - #43 int
INFO  16:23:23,461 - #43 k
INFO  16:23:23,461 - #37 (
INFO  16:23:23,462 - #43 int
INFO  16:23:23,462 - #43 a
INFO  16:23:23,462 - #31 ,
INFO  16:23:23,462 - #43 int
INFO  16:23:23,462 - #43 b
INFO  16:23:23,462 - #38 )
INFO  16:23:23,463 - #35 {
INFO  16:23:23,463 - #41 return
INFO  16:23:23,465 - #43 b
INFO  16:23:23,467 - #33 ;
INFO  16:23:23,469 - #36 }
INFO  16:23:23,470 - #5 void
INFO  16:23:23,471 - #43 main
INFO  16:23:23,471 - #37 (
INFO  16:23:23,471 - #38 )
INFO  16:23:23,472 - #43 int
INFO  16:23:23,472 - #43 x
INFO  16:23:23,472 - #33 ;
INFO  16:23:23,472 - #43 bool
INFO  16:23:23,472 - #43 p
INFO  16:23:23,472 - #33 ;
INFO  16:23:23,472 - #43 bool
INFO  16:23:23,473 - #43 r
INFO  16:23:23,473 - #33 ;
INFO  16:23:23,473 - #43 bool
INFO  16:23:23,473 - #43 q
INFO  16:23:23,473 - #33 ;
INFO  16:23:23,473 - #43 int
INFO  16:23:23,473 - #43 br
INFO  16:23:23,473 - #39 [
INFO  16:23:23,473 - #40 ]
INFO  16:23:23,473 - #33 ;
INFO  16:23:23,473 - #43 int
INFO  16:23:23,473 - #43 indexes
INFO  16:23:23,474 - #39 [
INFO  16:23:23,474 - #40 ]
INFO  16:23:23,474 - #33 ;
INFO  16:23:23,474 - #43 int
INFO  16:23:23,474 - #43 dd
INFO  16:23:23,474 - #33 ;
INFO  16:23:23,474 - #43 int
INFO  16:23:23,474 - #43 ee
INFO  16:23:23,474 - #33 ;
INFO  16:23:23,474 - #43 int
INFO  16:23:23,474 - #43 ff
INFO  16:23:23,474 - #33 ;
INFO  16:23:23,475 - #43 int
INFO  16:23:23,475 - #43 gg
INFO  16:23:23,475 - #33 ;
INFO  16:23:23,475 - #43 char
INFO  16:23:23,475 - #43 hh
INFO  16:23:23,475 - #33 ;
INFO  16:23:23,475 - #43 int
INFO  16:23:23,475 - #43 ii
INFO  16:23:23,475 - #33 ;
INFO  16:23:23,475 - #35 {
INFO  16:23:23,475 - #43 x
INFO  16:23:23,475 - #19 =
INFO  16:23:23,476 - #42 3
INFO  16:23:23,477 - #33 ;
INFO  16:23:23,477 - #43 dd
INFO  16:23:23,478 - #19 =
INFO  16:23:23,478 - #42 6
INFO  16:23:23,478 - #33 ;
INFO  16:23:23,478 - #14 if
INFO  16:23:23,478 - #37 (
INFO  16:23:23,478 - #43 x
INFO  16:23:23,478 - #23 <
INFO  16:23:23,478 - #43 dd
INFO  16:23:23,480 - #38 )
INFO  16:23:23,482 - #35 {
INFO  16:23:23,482 - #14 if
INFO  16:23:23,482 - #37 (
INFO  16:23:23,483 - #43 x
INFO  16:23:23,483 - #20 ==
INFO  16:23:23,483 - #42 3
INFO  16:23:23,484 - #38 )
INFO  16:23:23,485 - #35 {
INFO  16:23:23,485 - #18 print
INFO  16:23:23,485 - #37 (
INFO  16:23:23,485 - #44 d
INFO  16:23:23,485 - #38 )
INFO  16:23:23,486 - #33 ;
INFO  16:23:23,486 - #18 print
INFO  16:23:23,486 - #37 (
INFO  16:23:23,486 - #44 a
INFO  16:23:23,486 - #38 )
INFO  16:23:23,486 - #33 ;
INFO  16:23:23,487 - #36 }
INFO  16:23:23,487 - #14 if
INFO  16:23:23,488 - #37 (
INFO  16:23:23,488 - #43 dd
INFO  16:23:23,489 - #21 !=
INFO  16:23:23,489 - #42 5
INFO  16:23:23,489 - #38 )
INFO  16:23:23,489 - #35 {
INFO  16:23:23,489 - #18 print
INFO  16:23:23,489 - #37 (
INFO  16:23:23,490 - #44 d
INFO  16:23:23,490 - #38 )
INFO  16:23:23,490 - #33 ;
INFO  16:23:23,490 - #18 print
INFO  16:23:23,490 - #37 (
INFO  16:23:23,490 - #44 a
INFO  16:23:23,490 - #38 )
INFO  16:23:23,490 - #33 ;
INFO  16:23:23,490 - #36 }
INFO  16:23:23,490 - #14 if
INFO  16:23:23,490 - #37 (
INFO  16:23:23,490 - #43 x
INFO  16:23:23,490 - #22 >
INFO  16:23:23,490 - #42 2
INFO  16:23:23,491 - #38 )
INFO  16:23:23,491 - #35 {
INFO  16:23:23,491 - #18 print
INFO  16:23:23,491 - #37 (
INFO  16:23:23,491 - #44 d
INFO  16:23:23,491 - #38 )
INFO  16:23:23,492 - #33 ;
INFO  16:23:23,492 - #18 print
INFO  16:23:23,492 - #37 (
INFO  16:23:23,492 - #44 a
INFO  16:23:23,492 - #38 )
INFO  16:23:23,492 - #33 ;
INFO  16:23:23,492 - #36 }
INFO  16:23:23,492 - #14 if
INFO  16:23:23,492 - #37 (
INFO  16:23:23,492 - #43 dd
INFO  16:23:23,492 - #23 <
INFO  16:23:23,492 - #42 7
INFO  16:23:23,492 - #38 )
INFO  16:23:23,492 - #35 {
INFO  16:23:23,492 - #18 print
INFO  16:23:23,492 - #37 (
INFO  16:23:23,493 - #44 d
INFO  16:23:23,493 - #38 )
INFO  16:23:23,493 - #33 ;
INFO  16:23:23,493 - #18 print
INFO  16:23:23,493 - #37 (
INFO  16:23:23,493 - #44 a
INFO  16:23:23,493 - #38 )
INFO  16:23:23,493 - #33 ;
INFO  16:23:23,493 - #36 }
INFO  16:23:23,493 - #14 if
INFO  16:23:23,493 - #37 (
INFO  16:23:23,493 - #43 dd
INFO  16:23:23,493 - #25 <=
INFO  16:23:23,493 - #42 6
INFO  16:23:23,494 - #38 )
INFO  16:23:23,494 - #35 {
INFO  16:23:23,494 - #18 print
INFO  16:23:23,494 - #37 (
INFO  16:23:23,494 - #44 d
INFO  16:23:23,494 - #38 )
INFO  16:23:23,494 - #33 ;
INFO  16:23:23,495 - #18 print
INFO  16:23:23,495 - #37 (
INFO  16:23:23,495 - #44 a
INFO  16:23:23,495 - #38 )
INFO  16:23:23,495 - #33 ;
INFO  16:23:23,495 - #36 }
INFO  16:23:23,495 - #14 if
INFO  16:23:23,495 - #37 (
INFO  16:23:23,495 - #43 x
INFO  16:23:23,495 - #24 >=
INFO  16:23:23,495 - #42 3
INFO  16:23:23,496 - #38 )
INFO  16:23:23,496 - #35 {
INFO  16:23:23,496 - #18 print
INFO  16:23:23,496 - #37 (
INFO  16:23:23,496 - #44 d
INFO  16:23:23,496 - #38 )
INFO  16:23:23,496 - #33 ;
INFO  16:23:23,496 - #18 print
INFO  16:23:23,496 - #37 (
INFO  16:23:23,496 - #44 a
INFO  16:23:23,496 - #38 )
INFO  16:23:23,497 - #33 ;
INFO  16:23:23,497 - #36 }
INFO  16:23:23,497 - #36 }
INFO  16:23:23,497 - #15 else
INFO  16:23:23,497 - #35 {
INFO  16:23:23,497 - #18 print
INFO  16:23:23,497 - #37 (
INFO  16:23:23,497 - #42 3
INFO  16:23:23,497 - #38 )
INFO  16:23:23,497 - #33 ;
INFO  16:23:23,497 - #36 }
INFO  16:23:23,497 - #43 x
INFO  16:23:23,497 - #19 =
INFO  16:23:23,497 - #42 10
INFO  16:23:23,497 - #33 ;
INFO  16:23:23,497 - #12 do
INFO  16:23:23,498 - #35 {
INFO  16:23:23,499 - #18 print
INFO  16:23:23,499 - #37 (
INFO  16:23:23,499 - #44 x
INFO  16:23:23,499 - #38 )
INFO  16:23:23,499 - #33 ;
INFO  16:23:23,499 - #18 print
INFO  16:23:23,499 - #37 (
INFO  16:23:23,499 - #44 =
INFO  16:23:23,499 - #38 )
INFO  16:23:23,499 - #33 ;
INFO  16:23:23,499 - #18 print
INFO  16:23:23,499 - #37 (
INFO  16:23:23,499 - #43 x
INFO  16:23:23,500 - #31 ,
INFO  16:23:23,500 - #42 1
INFO  16:23:23,500 - #38 )
INFO  16:23:23,500 - #33 ;
INFO  16:23:23,500 - #18 print
INFO  16:23:23,500 - #37 (
INFO  16:23:23,500 - #44  
INFO  16:23:23,500 - #38 )
INFO  16:23:23,500 - #33 ;
INFO  16:23:23,500 - #43 x
INFO  16:23:23,500 - #29 --
INFO  16:23:23,500 - #33 ;
INFO  16:23:23,500 - #36 }
INFO  16:23:23,500 - #13 while
INFO  16:23:23,500 - #37 (
INFO  16:23:23,500 - #43 x
INFO  16:23:23,502 - #24 >=
INFO  16:23:23,502 - #42 0
INFO  16:23:23,502 - #38 )
INFO  16:23:23,502 - #33 ;
INFO  16:23:23,503 - #43 indexes
INFO  16:23:23,503 - #19 =
INFO  16:23:23,503 - #16 new
INFO  16:23:23,504 - #43 int
INFO  16:23:23,504 - #39 [
INFO  16:23:23,504 - #42 10
INFO  16:23:23,504 - #40 ]
INFO  16:23:23,504 - #33 ;
INFO  16:23:23,504 - #43 x
INFO  16:23:23,504 - #19 =
INFO  16:23:23,504 - #42 0
INFO  16:23:23,504 - #33 ;
INFO  16:23:23,504 - #12 do
INFO  16:23:23,504 - #35 {
INFO  16:23:23,504 - #43 indexes
INFO  16:23:23,504 - #39 [
INFO  16:23:23,506 - #43 x
INFO  16:23:23,507 - #40 ]
INFO  16:23:23,507 - #19 =
INFO  16:23:23,507 - #43 x
INFO  16:23:23,507 - #33 ;
INFO  16:23:23,507 - #43 x
INFO  16:23:23,507 - #28 ++
INFO  16:23:23,507 - #33 ;
INFO  16:23:23,508 - #36 }
INFO  16:23:23,508 - #13 while
INFO  16:23:23,508 - #37 (
INFO  16:23:23,508 - #43 x
INFO  16:23:23,508 - #23 <
INFO  16:23:23,508 - #42 10
INFO  16:23:23,508 - #38 )
INFO  16:23:23,508 - #33 ;
INFO  16:23:23,508 - #43 br
INFO  16:23:23,508 - #19 =
INFO  16:23:23,508 - #16 new
INFO  16:23:23,508 - #43 int
INFO  16:23:23,508 - #39 [
INFO  16:23:23,508 - #42 10
INFO  16:23:23,508 - #40 ]
INFO  16:23:23,508 - #33 ;
INFO  16:23:23,508 - #43 x
INFO  16:23:23,508 - #19 =
INFO  16:23:23,508 - #42 0
INFO  16:23:23,508 - #33 ;
INFO  16:23:23,508 - #12 do
INFO  16:23:23,509 - #35 {
INFO  16:23:23,509 - #43 br
INFO  16:23:23,509 - #39 [
INFO  16:23:23,509 - #43 x
INFO  16:23:23,509 - #40 ]
INFO  16:23:23,509 - #19 =
INFO  16:23:23,509 - #43 x
INFO  16:23:23,509 - #49 +
INFO  16:23:23,509 - #42 10
INFO  16:23:23,509 - #33 ;
INFO  16:23:23,509 - #43 x
INFO  16:23:23,509 - #28 ++
INFO  16:23:23,509 - #33 ;
INFO  16:23:23,509 - #36 }
INFO  16:23:23,509 - #13 while
INFO  16:23:23,509 - #37 (
INFO  16:23:23,509 - #43 x
INFO  16:23:23,509 - #23 <
INFO  16:23:23,509 - #42 10
INFO  16:23:23,509 - #38 )
INFO  16:23:23,509 - #33 ;
INFO  16:23:23,510 - #43 x
INFO  16:23:23,510 - #19 =
INFO  16:23:23,510 - #42 0
INFO  16:23:23,510 - #33 ;
INFO  16:23:23,510 - #12 do
INFO  16:23:23,510 - #35 {
INFO  16:23:23,510 - #18 print
INFO  16:23:23,510 - #37 (
INFO  16:23:23,510 - #44 b
INFO  16:23:23,510 - #38 )
INFO  16:23:23,510 - #33 ;
INFO  16:23:23,510 - #18 print
INFO  16:23:23,510 - #37 (
INFO  16:23:23,510 - #44 r
INFO  16:23:23,510 - #38 )
INFO  16:23:23,510 - #33 ;
INFO  16:23:23,510 - #18 print
INFO  16:23:23,510 - #37 (
INFO  16:23:23,510 - #44 [
INFO  16:23:23,510 - #38 )
INFO  16:23:23,510 - #33 ;
INFO  16:23:23,510 - #18 print
INFO  16:23:23,510 - #37 (
INFO  16:23:23,510 - #43 x
INFO  16:23:23,510 - #31 ,
INFO  16:23:23,510 - #42 1
INFO  16:23:23,510 - #38 )
INFO  16:23:23,510 - #33 ;
INFO  16:23:23,511 - #18 print
INFO  16:23:23,511 - #37 (
INFO  16:23:23,511 - #44 ]
INFO  16:23:23,511 - #38 )
INFO  16:23:23,511 - #33 ;
INFO  16:23:23,511 - #18 print
INFO  16:23:23,511 - #37 (
INFO  16:23:23,511 - #44 =
INFO  16:23:23,511 - #38 )
INFO  16:23:23,511 - #33 ;
INFO  16:23:23,511 - #18 print
INFO  16:23:23,511 - #37 (
INFO  16:23:23,511 - #43 br
INFO  16:23:23,511 - #39 [
INFO  16:23:23,511 - #43 indexes
INFO  16:23:23,511 - #39 [
INFO  16:23:23,511 - #43 x
INFO  16:23:23,511 - #40 ]
INFO  16:23:23,511 - #40 ]
INFO  16:23:23,511 - #31 ,
INFO  16:23:23,511 - #42 1
INFO  16:23:23,511 - #38 )
INFO  16:23:23,511 - #33 ;
INFO  16:23:23,511 - #18 print
INFO  16:23:23,511 - #37 (
INFO  16:23:23,511 - #44  
INFO  16:23:23,511 - #38 )
INFO  16:23:23,511 - #33 ;
INFO  16:23:23,511 - #43 x
INFO  16:23:23,512 - #28 ++
INFO  16:23:23,512 - #33 ;
INFO  16:23:23,512 - #36 }
INFO  16:23:23,512 - #13 while
INFO  16:23:23,512 - #37 (
INFO  16:23:23,512 - #43 x
INFO  16:23:23,512 - #23 <
INFO  16:23:23,512 - #42 10
INFO  16:23:23,512 - #38 )
INFO  16:23:23,512 - #33 ;
INFO  16:23:23,513 - #36 }
INFO  16:23:23,513 - #36 }
INFO  16:23:23,531 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListSingle(
                    VarClassNoArray(
                     a
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                  VarClassNoArray(
                   b
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               d
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           int
          ) [Type]
          ConstListSingle(
            ConstListNoArray(
             term
              ValuesNumber(
               0
              ) [ValuesNumber]
            ) [ConstListNoArray]
          ) [ConstListSingle]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassNoArray(
              Type(
               int
              ) [Type]
             b
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         b
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  VarDeclListClass(
                    VarDeclListClass(
                      VarDeclListClass(
                        VarDeclListClass(
                          VarDeclListClass(
                            VarDeclListClass(
                              NoVarDeclList(
                              ) [NoVarDeclList]
                              VarDeclClass(
                                Type(
                                 int
                                ) [Type]
                                VarListSingle(
                                  VarClassNoArray(
                                   x
                                  ) [VarClassNoArray]
                                ) [VarListSingle]
                              ) [VarDeclClass]
                            ) [VarDeclListClass]
                            VarDeclClass(
                              Type(
                               bool
                              ) [Type]
                              VarListSingle(
                                VarClassNoArray(
                                 p
                                ) [VarClassNoArray]
                              ) [VarListSingle]
                            ) [VarDeclClass]
                          ) [VarDeclListClass]
                          VarDeclClass(
                            Type(
                             bool
                            ) [Type]
                            VarListSingle(
                              VarClassNoArray(
                               r
                              ) [VarClassNoArray]
                            ) [VarListSingle]
                          ) [VarDeclClass]
                        ) [VarDeclListClass]
                        VarDeclClass(
                          Type(
                           bool
                          ) [Type]
                          VarListSingle(
                            VarClassNoArray(
                             q
                            ) [VarClassNoArray]
                          ) [VarListSingle]
                        ) [VarDeclClass]
                      ) [VarDeclListClass]
                      VarDeclClass(
                        Type(
                         int
                        ) [Type]
                        VarListSingle(
                          VarClassArray(
                           br
                          ) [VarClassArray]
                        ) [VarListSingle]
                      ) [VarDeclClass]
                    ) [VarDeclListClass]
                    VarDeclClass(
                      Type(
                       int
                      ) [Type]
                      VarListSingle(
                        VarClassArray(
                         indexes
                        ) [VarClassArray]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [VarDeclListClass]
                  VarDeclClass(
                    Type(
                     int
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       dd
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     ee
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   ff
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 gg
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               hh
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             ii
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                NoStmt(
                                ) [NoStmt]
                                Assignment(
                                  DesignatorStatementOptionsClassAssignExpression(
                                    Designator(
                                      DesigIdent(
                                       x
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    AssignOpClass(
                                      AssignOperationClass(
                                      ) [AssignOperationClass]
                                    ) [AssignOpClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             3
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                ) [Assignment]
                              ) [Statements]
                              Assignment(
                                DesignatorStatementOptionsClassAssignExpression(
                                  Designator(
                                    DesigIdent(
                                     dd
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                  AssignOpClass(
                                    AssignOperationClass(
                                    ) [AssignOperationClass]
                                  ) [AssignOpClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           6
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [DesignatorStatementOptionsClassAssignExpression]
                              ) [Assignment]
                            ) [Statements]
                            IfStatement(
                              IfConditionNoError(
                                ConditionClass(
                                  CondTermClass(
                                    CondFactClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 x
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                      CondFactOptionalClass(
                                        LessOperationClass(
                                        ) [LessOperationClass]
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   dd
                                                  ) [DesigIdent]
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [CondFactOptionalClass]
                                    ) [CondFactClass]
                                    NoCondTermOptionalClass(
                                    ) [NoCondTermOptionalClass]
                                  ) [CondTermClass]
                                  NoConditionOptionalClass(
                                  ) [NoConditionOptionalClass]
                                ) [ConditionClass]
                              ) [IfConditionNoError]
                              StatementStatement(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            NoStmt(
                                            ) [NoStmt]
                                            IfStatement(
                                              IfConditionNoError(
                                                ConditionClass(
                                                  CondTermClass(
                                                    CondFactClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            DesignatorClass(
                                                              Designator(
                                                                DesigIdent(
                                                                 x
                                                                ) [DesigIdent]
                                                                NoOptionalDesignatorClass(
                                                                ) [NoOptionalDesignatorClass]
                                                              ) [Designator]
                                                            ) [DesignatorClass]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                      CondFactOptionalClass(
                                                        RelationOperationClassEqualComparation(
                                                        ) [RelationOperationClassEqualComparation]
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              NumberConst(
                                                               3
                                                              ) [NumberConst]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [CondFactOptionalClass]
                                                    ) [CondFactClass]
                                                    NoCondTermOptionalClass(
                                                    ) [NoCondTermOptionalClass]
                                                  ) [CondTermClass]
                                                  NoConditionOptionalClass(
                                                  ) [NoConditionOptionalClass]
                                                ) [ConditionClass]
                                              ) [IfConditionNoError]
                                              StatementStatement(
                                                Statements(
                                                  Statements(
                                                    NoStmt(
                                                    ) [NoStmt]
                                                    PrintStmt(
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              CharConst(
                                                               d
                                                              ) [CharConst]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                      NoCommaNumberClass(
                                                      ) [NoCommaNumberClass]
                                                    ) [PrintStmt]
                                                  ) [Statements]
                                                  PrintStmt(
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            CharConst(
                                                             a
                                                            ) [CharConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                    NoCommaNumberClass(
                                                    ) [NoCommaNumberClass]
                                                  ) [PrintStmt]
                                                ) [Statements]
                                              ) [StatementStatement]
                                              Empty(
                                              ) [Empty]
                                              NoOptionalStatement(
                                              ) [NoOptionalStatement]
                                            ) [IfStatement]
                                          ) [Statements]
                                          IfStatement(
                                            IfConditionNoError(
                                              ConditionClass(
                                                CondTermClass(
                                                  CondFactClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          DesignatorClass(
                                                            Designator(
                                                              DesigIdent(
                                                               dd
                                                              ) [DesigIdent]
                                                              NoOptionalDesignatorClass(
                                                              ) [NoOptionalDesignatorClass]
                                                            ) [Designator]
                                                          ) [DesignatorClass]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                    CondFactOptionalClass(
                                                      RelationOperationClassNotEqualComparation(
                                                      ) [RelationOperationClassNotEqualComparation]
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            NumberConst(
                                                             5
                                                            ) [NumberConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [CondFactOptionalClass]
                                                  ) [CondFactClass]
                                                  NoCondTermOptionalClass(
                                                  ) [NoCondTermOptionalClass]
                                                ) [CondTermClass]
                                                NoConditionOptionalClass(
                                                ) [NoConditionOptionalClass]
                                              ) [ConditionClass]
                                            ) [IfConditionNoError]
                                            StatementStatement(
                                              Statements(
                                                Statements(
                                                  NoStmt(
                                                  ) [NoStmt]
                                                  PrintStmt(
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            CharConst(
                                                             d
                                                            ) [CharConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                    NoCommaNumberClass(
                                                    ) [NoCommaNumberClass]
                                                  ) [PrintStmt]
                                                ) [Statements]
                                                PrintStmt(
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          CharConst(
                                                           a
                                                          ) [CharConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                  NoCommaNumberClass(
                                                  ) [NoCommaNumberClass]
                                                ) [PrintStmt]
                                              ) [Statements]
                                            ) [StatementStatement]
                                            Empty(
                                            ) [Empty]
                                            NoOptionalStatement(
                                            ) [NoOptionalStatement]
                                          ) [IfStatement]
                                        ) [Statements]
                                        IfStatement(
                                          IfConditionNoError(
                                            ConditionClass(
                                              CondTermClass(
                                                CondFactClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        DesignatorClass(
                                                          Designator(
                                                            DesigIdent(
                                                             x
                                                            ) [DesigIdent]
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                        ) [DesignatorClass]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                  CondFactOptionalClass(
                                                    GreaterOperationClass(
                                                    ) [GreaterOperationClass]
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           2
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [CondFactOptionalClass]
                                                ) [CondFactClass]
                                                NoCondTermOptionalClass(
                                                ) [NoCondTermOptionalClass]
                                              ) [CondTermClass]
                                              NoConditionOptionalClass(
                                              ) [NoConditionOptionalClass]
                                            ) [ConditionClass]
                                          ) [IfConditionNoError]
                                          StatementStatement(
                                            Statements(
                                              Statements(
                                                NoStmt(
                                                ) [NoStmt]
                                                PrintStmt(
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          CharConst(
                                                           d
                                                          ) [CharConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                  NoCommaNumberClass(
                                                  ) [NoCommaNumberClass]
                                                ) [PrintStmt]
                                              ) [Statements]
                                              PrintStmt(
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        CharConst(
                                                         a
                                                        ) [CharConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                                NoCommaNumberClass(
                                                ) [NoCommaNumberClass]
                                              ) [PrintStmt]
                                            ) [Statements]
                                          ) [StatementStatement]
                                          Empty(
                                          ) [Empty]
                                          NoOptionalStatement(
                                          ) [NoOptionalStatement]
                                        ) [IfStatement]
                                      ) [Statements]
                                      IfStatement(
                                        IfConditionNoError(
                                          ConditionClass(
                                            CondTermClass(
                                              CondFactClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      DesignatorClass(
                                                        Designator(
                                                          DesigIdent(
                                                           dd
                                                          ) [DesigIdent]
                                                          NoOptionalDesignatorClass(
                                                          ) [NoOptionalDesignatorClass]
                                                        ) [Designator]
                                                      ) [DesignatorClass]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                                CondFactOptionalClass(
                                                  LessOperationClass(
                                                  ) [LessOperationClass]
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         7
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [CondFactOptionalClass]
                                              ) [CondFactClass]
                                              NoCondTermOptionalClass(
                                              ) [NoCondTermOptionalClass]
                                            ) [CondTermClass]
                                            NoConditionOptionalClass(
                                            ) [NoConditionOptionalClass]
                                          ) [ConditionClass]
                                        ) [IfConditionNoError]
                                        StatementStatement(
                                          Statements(
                                            Statements(
                                              NoStmt(
                                              ) [NoStmt]
                                              PrintStmt(
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        CharConst(
                                                         d
                                                        ) [CharConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                                NoCommaNumberClass(
                                                ) [NoCommaNumberClass]
                                              ) [PrintStmt]
                                            ) [Statements]
                                            PrintStmt(
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      CharConst(
                                                       a
                                                      ) [CharConst]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                              NoCommaNumberClass(
                                              ) [NoCommaNumberClass]
                                            ) [PrintStmt]
                                          ) [Statements]
                                        ) [StatementStatement]
                                        Empty(
                                        ) [Empty]
                                        NoOptionalStatement(
                                        ) [NoOptionalStatement]
                                      ) [IfStatement]
                                    ) [Statements]
                                    IfStatement(
                                      IfConditionNoError(
                                        ConditionClass(
                                          CondTermClass(
                                            CondFactClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      Designator(
                                                        DesigIdent(
                                                         dd
                                                        ) [DesigIdent]
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                              CondFactOptionalClass(
                                                LessOrEqualOperationClass(
                                                ) [LessOrEqualOperationClass]
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      NumberConst(
                                                       6
                                                      ) [NumberConst]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [CondFactOptionalClass]
                                            ) [CondFactClass]
                                            NoCondTermOptionalClass(
                                            ) [NoCondTermOptionalClass]
                                          ) [CondTermClass]
                                          NoConditionOptionalClass(
                                          ) [NoConditionOptionalClass]
                                        ) [ConditionClass]
                                      ) [IfConditionNoError]
                                      StatementStatement(
                                        Statements(
                                          Statements(
                                            NoStmt(
                                            ) [NoStmt]
                                            PrintStmt(
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      CharConst(
                                                       d
                                                      ) [CharConst]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                              NoCommaNumberClass(
                                              ) [NoCommaNumberClass]
                                            ) [PrintStmt]
                                          ) [Statements]
                                          PrintStmt(
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    CharConst(
                                                     a
                                                    ) [CharConst]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                            NoCommaNumberClass(
                                            ) [NoCommaNumberClass]
                                          ) [PrintStmt]
                                        ) [Statements]
                                      ) [StatementStatement]
                                      Empty(
                                      ) [Empty]
                                      NoOptionalStatement(
                                      ) [NoOptionalStatement]
                                    ) [IfStatement]
                                  ) [Statements]
                                  IfStatement(
                                    IfConditionNoError(
                                      ConditionClass(
                                        CondTermClass(
                                          CondFactClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  DesignatorClass(
                                                    Designator(
                                                      DesigIdent(
                                                       x
                                                      ) [DesigIdent]
                                                      NoOptionalDesignatorClass(
                                                      ) [NoOptionalDesignatorClass]
                                                    ) [Designator]
                                                  ) [DesignatorClass]
                                                  NoTermOptionalListClass(
                                                  ) [NoTermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                            CondFactOptionalClass(
                                              GreaterOrEqualOperationClass(
                                              ) [GreaterOrEqualOperationClass]
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    NumberConst(
                                                     3
                                                    ) [NumberConst]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [CondFactOptionalClass]
                                          ) [CondFactClass]
                                          NoCondTermOptionalClass(
                                          ) [NoCondTermOptionalClass]
                                        ) [CondTermClass]
                                        NoConditionOptionalClass(
                                        ) [NoConditionOptionalClass]
                                      ) [ConditionClass]
                                    ) [IfConditionNoError]
                                    StatementStatement(
                                      Statements(
                                        Statements(
                                          NoStmt(
                                          ) [NoStmt]
                                          PrintStmt(
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    CharConst(
                                                     d
                                                    ) [CharConst]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                            NoCommaNumberClass(
                                            ) [NoCommaNumberClass]
                                          ) [PrintStmt]
                                        ) [Statements]
                                        PrintStmt(
                                          ClassOneClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  CharConst(
                                                   a
                                                  ) [CharConst]
                                                  NoTermOptionalListClass(
                                                  ) [NoTermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                          ) [ClassOneClass]
                                          NoCommaNumberClass(
                                          ) [NoCommaNumberClass]
                                        ) [PrintStmt]
                                      ) [Statements]
                                    ) [StatementStatement]
                                    Empty(
                                    ) [Empty]
                                    NoOptionalStatement(
                                    ) [NoOptionalStatement]
                                  ) [IfStatement]
                                ) [Statements]
                              ) [StatementStatement]
                              Empty(
                              ) [Empty]
                              YesOptionalStatement(
                                StatementStatement(
                                  Statements(
                                    NoStmt(
                                    ) [NoStmt]
                                    PrintStmt(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              NumberConst(
                                               3
                                              ) [NumberConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                      NoCommaNumberClass(
                                      ) [NoCommaNumberClass]
                                    ) [PrintStmt]
                                  ) [Statements]
                                ) [StatementStatement]
                              ) [YesOptionalStatement]
                            ) [IfStatement]
                          ) [Statements]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 x
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       10
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        DoWhileStatement(
                          DoClass(
                          ) [DoClass]
                          StatementStatement(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      NoStmt(
                                      ) [NoStmt]
                                      PrintStmt(
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                CharConst(
                                                 x
                                                ) [CharConst]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                        NoCommaNumberClass(
                                        ) [NoCommaNumberClass]
                                      ) [PrintStmt]
                                    ) [Statements]
                                    PrintStmt(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              CharConst(
                                               =
                                              ) [CharConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                      NoCommaNumberClass(
                                      ) [NoCommaNumberClass]
                                    ) [PrintStmt]
                                  ) [Statements]
                                  PrintStmt(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 x
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                    CommaNumberClass(
                                     1
                                    ) [CommaNumberClass]
                                  ) [PrintStmt]
                                ) [Statements]
                                PrintStmt(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          CharConst(
                                            
                                          ) [CharConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                  NoCommaNumberClass(
                                  ) [NoCommaNumberClass]
                                ) [PrintStmt]
                              ) [Statements]
                              Assignment(
                                DesignatorStatementMinusMinus(
                                  Designator(
                                    DesigIdent(
                                     x
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorStatementMinusMinus]
                              ) [Assignment]
                            ) [Statements]
                          ) [StatementStatement]
                          LParenClass(
                          ) [LParenClass]
                          ConditionClass(
                            CondTermClass(
                              CondFactClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           x
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                                CondFactOptionalClass(
                                  GreaterOrEqualOperationClass(
                                  ) [GreaterOrEqualOperationClass]
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         0
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [CondFactOptionalClass]
                              ) [CondFactClass]
                              NoCondTermOptionalClass(
                              ) [NoCondTermOptionalClass]
                            ) [CondTermClass]
                            NoConditionOptionalClass(
                            ) [NoConditionOptionalClass]
                          ) [ConditionClass]
                          RParenClass(
                          ) [RParenClass]
                        ) [DoWhileStatement]
                      ) [Statements]
                      Assignment(
                        DesignatorStatementOptionsClassAssignExpression(
                          Designator(
                            DesigIdent(
                             indexes
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NewFactorClass(
                                    Type(
                                     int
                                    ) [Type]
                                    FactorOptionalSecondClass(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              NumberConst(
                                               10
                                              ) [NumberConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                    ) [FactorOptionalSecondClass]
                                  ) [NewFactorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [Assignment]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           x
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 0
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  DoWhileStatement(
                    DoClass(
                    ) [DoClass]
                    StatementStatement(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 indexes
                                ) [DesigIdent]
                                OptionalDesignatorArray(
                                  HelperClass(
                                  ) [HelperClass]
                                  LSquareClass(
                                  ) [LSquareClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               x
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [OptionalDesignatorArray]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           x
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        Assignment(
                          DesignatorStatementPlusPlus(
                            Designator(
                              DesigIdent(
                               x
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorStatementPlusPlus]
                        ) [Assignment]
                      ) [Statements]
                    ) [StatementStatement]
                    LParenClass(
                    ) [LParenClass]
                    ConditionClass(
                      CondTermClass(
                        CondFactClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     x
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                          CondFactOptionalClass(
                            LessOperationClass(
                            ) [LessOperationClass]
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   10
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [CondFactOptionalClass]
                        ) [CondFactClass]
                        NoCondTermOptionalClass(
                        ) [NoCondTermOptionalClass]
                      ) [CondTermClass]
                      NoConditionOptionalClass(
                      ) [NoConditionOptionalClass]
                    ) [ConditionClass]
                    RParenClass(
                    ) [RParenClass]
                  ) [DoWhileStatement]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       br
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NewFactorClass(
                              Type(
                               int
                              ) [Type]
                              FactorOptionalSecondClass(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         10
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [FactorOptionalSecondClass]
                            ) [NewFactorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     x
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           0
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            DoWhileStatement(
              DoClass(
              ) [DoClass]
              StatementStatement(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           br
                          ) [DesigIdent]
                          OptionalDesignatorArray(
                            HelperClass(
                            ) [HelperClass]
                            LSquareClass(
                            ) [LSquareClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    DesignatorClass(
                                      Designator(
                                        DesigIdent(
                                         x
                                        ) [DesigIdent]
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                    ) [DesignatorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [OptionalDesignatorArray]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     x
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              ExprOptionalListClass(
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                                PlusOperation(
                                 +
                                ) [PlusOperation]
                                TermClass(
                                  NumberConst(
                                   10
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                              ) [ExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementPlusPlus(
                      Designator(
                        DesigIdent(
                         x
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorStatementPlusPlus]
                  ) [Assignment]
                ) [Statements]
              ) [StatementStatement]
              LParenClass(
              ) [LParenClass]
              ConditionClass(
                CondTermClass(
                  CondFactClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               x
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                    CondFactOptionalClass(
                      LessOperationClass(
                      ) [LessOperationClass]
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             10
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [CondFactOptionalClass]
                  ) [CondFactClass]
                  NoCondTermOptionalClass(
                  ) [NoCondTermOptionalClass]
                ) [CondTermClass]
                NoConditionOptionalClass(
                ) [NoConditionOptionalClass]
              ) [ConditionClass]
              RParenClass(
              ) [RParenClass]
            ) [DoWhileStatement]
          ) [Statements]
          Assignment(
            DesignatorStatementOptionsClassAssignExpression(
              Designator(
                DesigIdent(
                 x
                ) [DesigIdent]
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       0
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [Assignment]
        ) [Statements]
        DoWhileStatement(
          DoClass(
          ) [DoClass]
          StatementStatement(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              PrintStmt(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        CharConst(
                                         b
                                        ) [CharConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                                NoCommaNumberClass(
                                ) [NoCommaNumberClass]
                              ) [PrintStmt]
                            ) [Statements]
                            PrintStmt(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      CharConst(
                                       r
                                      ) [CharConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                              NoCommaNumberClass(
                              ) [NoCommaNumberClass]
                            ) [PrintStmt]
                          ) [Statements]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    CharConst(
                                     [
                                    ) [CharConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       x
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          CommaNumberClass(
                           1
                          ) [CommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                CharConst(
                                 ]
                                ) [CharConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              CharConst(
                               =
                              ) [CharConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 br
                                ) [DesigIdent]
                                OptionalDesignatorArray(
                                  HelperClass(
                                  ) [HelperClass]
                                  LSquareClass(
                                  ) [LSquareClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               indexes
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        DesignatorClass(
                                                          Designator(
                                                            DesigIdent(
                                                             x
                                                            ) [DesigIdent]
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                        ) [DesignatorClass]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [OptionalDesignatorArray]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    CommaNumberClass(
                     1
                    ) [CommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          CharConst(
                            
                          ) [CharConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
              Assignment(
                DesignatorStatementPlusPlus(
                  Designator(
                    DesigIdent(
                     x
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                ) [DesignatorStatementPlusPlus]
              ) [Assignment]
            ) [Statements]
          ) [StatementStatement]
          LParenClass(
          ) [LParenClass]
          ConditionClass(
            CondTermClass(
              CondFactClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           x
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
                CondFactOptionalClass(
                  LessOperationClass(
                  ) [LessOperationClass]
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        NumberConst(
                         10
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [CondFactOptionalClass]
              ) [CondFactClass]
              NoCondTermOptionalClass(
              ) [NoCondTermOptionalClass]
            ) [CondTermClass]
            NoConditionOptionalClass(
            ) [NoConditionOptionalClass]
          ) [ConditionClass]
          RParenClass(
          ) [RParenClass]
        ) [DoWhileStatement]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:23:23,536 - ===================================
INFO  16:23:23,541 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  16:23:23,541 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  16:23:23,541 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  16:23:23,541 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  16:23:23,541 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  16:23:23,541 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  16:23:23,542 - CONST VALUE 0 IS BEING USED! ON LINE 4
INFO  16:23:23,542 - CONST VARIABLE term IS BEING DEFINED! ON LINE 4
INFO  16:23:23,542 - CONST VALUE 3 IS BEING USED! ON LINE 5
INFO  16:23:23,542 - CONST VARIABLE y IS BEING DEFINED! ON LINE 5
INFO  16:23:23,542 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 9
INFO  16:23:23,542 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  16:23:23,542 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  16:23:23,542 - METHOD BODY STARTING!
INFO  16:23:23,542 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  16:23:23,542 - WE ARE USING A VARIABLE OF TYPE int ON LINE 9
INFO  16:23:23,542 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  16:23:23,542 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  16:23:23,542 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 9
INFO  16:23:23,542 - METHOD BODY ENDING!
INFO  16:23:23,542 - END OF DEFINING FUNCTION k
INFO  16:23:23,543 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 23
INFO  16:23:23,543 - VARIABLE x IS BEING DEFINED! ON LINE 24
INFO  16:23:23,543 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 24
INFO  16:23:23,543 - VARIABLE p IS BEING DEFINED! ON LINE 26
INFO  16:23:23,543 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 26
INFO  16:23:23,543 - VARIABLE r IS BEING DEFINED! ON LINE 27
INFO  16:23:23,543 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 27
INFO  16:23:23,543 - VARIABLE q IS BEING DEFINED! ON LINE 28
INFO  16:23:23,543 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 28
INFO  16:23:23,543 - ARRAY VARIABLE br IS BEING DEFINED! ON LINE 31
INFO  16:23:23,543 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 31
INFO  16:23:23,543 - ARRAY VARIABLE indexes IS BEING DEFINED! ON LINE 32
INFO  16:23:23,543 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 32
INFO  16:23:23,543 - VARIABLE dd IS BEING DEFINED! ON LINE 33
INFO  16:23:23,543 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 33
INFO  16:23:23,543 - VARIABLE ee IS BEING DEFINED! ON LINE 34
INFO  16:23:23,543 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 34
INFO  16:23:23,543 - VARIABLE ff IS BEING DEFINED! ON LINE 35
INFO  16:23:23,543 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 35
INFO  16:23:23,543 - VARIABLE gg IS BEING DEFINED! ON LINE 36
INFO  16:23:23,543 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 36
INFO  16:23:23,543 - VARIABLE hh IS BEING DEFINED! ON LINE 37
INFO  16:23:23,543 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 37
INFO  16:23:23,543 - VARIABLE ii IS BEING DEFINED! ON LINE 38
INFO  16:23:23,543 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 38
INFO  16:23:23,543 - METHOD BODY STARTING!
INFO  16:23:23,543 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,544 - BEGINNING OF AN ASSIGNEMENT! ON LINE 50
INFO  16:23:23,544 - CONST NUMBER 3 ON LINE 50
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  16:23:23,544 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 50
INFO  16:23:23,544 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  16:23:23,544 - BEGINNING OF AN ASSIGNEMENT! ON LINE 51
INFO  16:23:23,544 - CONST NUMBER 6 ON LINE 51
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 51
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 51
INFO  16:23:23,544 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 51
INFO  16:23:23,544 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,544 - WE ARE USING A VARIABLE OF TYPE int ON LINE 53
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  16:23:23,544 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  16:23:23,544 - WE ARE USING A VARIABLE OF TYPE int ON LINE 53
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  16:23:23,544 - USING TWO EXPRESSIONS OF TYPE int ON LINE 53
INFO  16:23:23,544 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,544 - WE ARE USING A VARIABLE OF TYPE int ON LINE 54
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 54
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 54
INFO  16:23:23,544 - CONST NUMBER 3 ON LINE 54
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 54
INFO  16:23:23,544 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 54
INFO  16:23:23,544 - USING TWO EXPRESSIONS OF TYPE int ON LINE 54
INFO  16:23:23,544 - CONST CHAR d ON LINE 55
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  16:23:23,545 - PRINT FUNCTION CALL IN USE! ON LINE 55
INFO  16:23:23,545 - CONST CHAR a ON LINE 56
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  16:23:23,545 - PRINT FUNCTION CALL IN USE! ON LINE 56
INFO  16:23:23,545 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  16:23:23,545 - WE ARE USING A VARIABLE OF TYPE int ON LINE 59
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  16:23:23,545 - CONST NUMBER 5 ON LINE 59
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  16:23:23,545 - USING TWO EXPRESSIONS OF TYPE int ON LINE 59
INFO  16:23:23,545 - CONST CHAR d ON LINE 60
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  16:23:23,545 - PRINT FUNCTION CALL IN USE! ON LINE 60
INFO  16:23:23,545 - CONST CHAR a ON LINE 61
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 61
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 61
INFO  16:23:23,545 - PRINT FUNCTION CALL IN USE! ON LINE 61
INFO  16:23:23,545 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,545 - WE ARE USING A VARIABLE OF TYPE int ON LINE 64
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 64
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 64
INFO  16:23:23,545 - CONST NUMBER 2 ON LINE 64
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 64
INFO  16:23:23,545 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 64
INFO  16:23:23,545 - USING TWO EXPRESSIONS OF TYPE int ON LINE 64
INFO  16:23:23,545 - CONST CHAR d ON LINE 65
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 65
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 65
INFO  16:23:23,546 - PRINT FUNCTION CALL IN USE! ON LINE 65
INFO  16:23:23,546 - CONST CHAR a ON LINE 66
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 66
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 66
INFO  16:23:23,546 - PRINT FUNCTION CALL IN USE! ON LINE 66
INFO  16:23:23,546 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  16:23:23,546 - WE ARE USING A VARIABLE OF TYPE int ON LINE 69
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  16:23:23,546 - CONST NUMBER 7 ON LINE 69
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  16:23:23,546 - USING TWO EXPRESSIONS OF TYPE int ON LINE 69
INFO  16:23:23,546 - CONST CHAR d ON LINE 70
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  16:23:23,546 - PRINT FUNCTION CALL IN USE! ON LINE 70
INFO  16:23:23,546 - CONST CHAR a ON LINE 71
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 71
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 71
INFO  16:23:23,546 - PRINT FUNCTION CALL IN USE! ON LINE 71
INFO  16:23:23,546 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  16:23:23,546 - WE ARE USING A VARIABLE OF TYPE int ON LINE 74
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 74
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 74
INFO  16:23:23,546 - CONST NUMBER 6 ON LINE 74
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 74
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 74
INFO  16:23:23,546 - USING TWO EXPRESSIONS OF TYPE int ON LINE 74
INFO  16:23:23,546 - CONST CHAR d ON LINE 75
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  16:23:23,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  16:23:23,547 - PRINT FUNCTION CALL IN USE! ON LINE 75
INFO  16:23:23,547 - CONST CHAR a ON LINE 76
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 76
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 76
INFO  16:23:23,547 - PRINT FUNCTION CALL IN USE! ON LINE 76
INFO  16:23:23,547 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,547 - WE ARE USING A VARIABLE OF TYPE int ON LINE 79
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 79
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 79
INFO  16:23:23,547 - CONST NUMBER 3 ON LINE 79
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 79
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 79
INFO  16:23:23,547 - USING TWO EXPRESSIONS OF TYPE int ON LINE 79
INFO  16:23:23,547 - CONST CHAR d ON LINE 80
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  16:23:23,547 - PRINT FUNCTION CALL IN USE! ON LINE 80
INFO  16:23:23,547 - CONST CHAR a ON LINE 81
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 81
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 81
INFO  16:23:23,547 - PRINT FUNCTION CALL IN USE! ON LINE 81
INFO  16:23:23,547 - CONST NUMBER 3 ON LINE 85
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  16:23:23,547 - PRINT FUNCTION CALL IN USE! ON LINE 85
INFO  16:23:23,547 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,547 - BEGINNING OF AN ASSIGNEMENT! ON LINE 88
INFO  16:23:23,547 - CONST NUMBER 10 ON LINE 88
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 88
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 88
INFO  16:23:23,547 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 88
INFO  16:23:23,547 - BEGINNING OF A DO...WHILE LOOP!
INFO  16:23:23,547 - CONST CHAR x ON LINE 90
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  16:23:23,547 - PRINT FUNCTION CALL IN USE! ON LINE 90
INFO  16:23:23,547 - CONST CHAR = ON LINE 91
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 91
INFO  16:23:23,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 91
INFO  16:23:23,547 - PRINT FUNCTION CALL IN USE! ON LINE 91
INFO  16:23:23,547 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,548 - WE ARE USING A VARIABLE OF TYPE int ON LINE 92
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 92
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 92
INFO  16:23:23,548 - PRINT FUNCTION CALL IN USE! ON LINE 92
INFO  16:23:23,548 - CONST CHAR   ON LINE 93
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 93
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 93
INFO  16:23:23,548 - PRINT FUNCTION CALL IN USE! ON LINE 93
INFO  16:23:23,548 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,548 - USING -- ON x ON LINE 94
INFO  16:23:23,548 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,548 - WE ARE USING A VARIABLE OF TYPE int ON LINE 96
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 96
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 96
INFO  16:23:23,548 - CONST NUMBER 0 ON LINE 96
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 96
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 96
INFO  16:23:23,548 - USING TWO EXPRESSIONS OF TYPE int ON LINE 96
INFO  16:23:23,548 - ENDING OF A DO...WHILE LOOP! ON LINE 89
INFO  16:23:23,548 - CURRENT VARIABLE IN USE IS indexes AND IT IS OF TYPE array
INFO  16:23:23,548 - BEGINNING OF AN ASSIGNEMENT! ON LINE 98
INFO  16:23:23,548 - CONST NUMBER 10 ON LINE 98
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 98
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 98
INFO  16:23:23,548 - USAGE OF KEYWORD NEW! ON LINE 98
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 98
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 98
INFO  16:23:23,548 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 98
INFO  16:23:23,548 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,548 - BEGINNING OF AN ASSIGNEMENT! ON LINE 99
INFO  16:23:23,548 - CONST NUMBER 0 ON LINE 99
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 99
INFO  16:23:23,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 99
INFO  16:23:23,548 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 99
INFO  16:23:23,548 - BEGINNING OF A DO...WHILE LOOP!
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,549 - WE ARE USING A VARIABLE OF TYPE int ON LINE 101
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 101
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 101
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS indexes AND IT IS OF TYPE array
INFO  16:23:23,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 101
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,549 - WE ARE USING A VARIABLE OF TYPE int ON LINE 101
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 101
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 101
INFO  16:23:23,549 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 101
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,549 - USING ++ ON x ON LINE 102
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,549 - WE ARE USING A VARIABLE OF TYPE int ON LINE 104
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 104
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 104
INFO  16:23:23,549 - CONST NUMBER 10 ON LINE 104
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 104
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 104
INFO  16:23:23,549 - USING TWO EXPRESSIONS OF TYPE int ON LINE 104
INFO  16:23:23,549 - ENDING OF A DO...WHILE LOOP! ON LINE 100
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  16:23:23,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 109
INFO  16:23:23,549 - CONST NUMBER 10 ON LINE 109
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 109
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 109
INFO  16:23:23,549 - USAGE OF KEYWORD NEW! ON LINE 109
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 109
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 109
INFO  16:23:23,549 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 109
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 110
INFO  16:23:23,549 - CONST NUMBER 0 ON LINE 110
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 110
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 110
INFO  16:23:23,549 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 110
INFO  16:23:23,549 - BEGINNING OF A DO...WHILE LOOP!
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,549 - WE ARE USING A VARIABLE OF TYPE int ON LINE 112
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 112
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 112
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  16:23:23,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 112
INFO  16:23:23,549 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,549 - WE ARE USING A VARIABLE OF TYPE int ON LINE 112
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 112
INFO  16:23:23,549 - CONST NUMBER 10 ON LINE 112
INFO  16:23:23,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 112
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  16:23:23,550 - USING INTEGERS IN TERM! ON LINE 112
INFO  16:23:23,550 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 112
INFO  16:23:23,550 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,550 - USING ++ ON x ON LINE 113
INFO  16:23:23,550 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,550 - WE ARE USING A VARIABLE OF TYPE int ON LINE 114
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 114
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 114
INFO  16:23:23,550 - CONST NUMBER 10 ON LINE 114
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 114
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 114
INFO  16:23:23,550 - USING TWO EXPRESSIONS OF TYPE int ON LINE 114
INFO  16:23:23,550 - ENDING OF A DO...WHILE LOOP! ON LINE 111
INFO  16:23:23,550 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,550 - BEGINNING OF AN ASSIGNEMENT! ON LINE 116
INFO  16:23:23,550 - CONST NUMBER 0 ON LINE 116
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 116
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 116
INFO  16:23:23,550 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 116
INFO  16:23:23,550 - BEGINNING OF A DO...WHILE LOOP!
INFO  16:23:23,550 - CONST CHAR b ON LINE 118
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 118
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 118
INFO  16:23:23,550 - PRINT FUNCTION CALL IN USE! ON LINE 118
INFO  16:23:23,550 - CONST CHAR r ON LINE 119
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 119
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 119
INFO  16:23:23,550 - PRINT FUNCTION CALL IN USE! ON LINE 119
INFO  16:23:23,550 - CONST CHAR [ ON LINE 120
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 120
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 120
INFO  16:23:23,550 - PRINT FUNCTION CALL IN USE! ON LINE 120
INFO  16:23:23,550 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,550 - WE ARE USING A VARIABLE OF TYPE int ON LINE 121
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 121
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 121
INFO  16:23:23,550 - PRINT FUNCTION CALL IN USE! ON LINE 121
INFO  16:23:23,550 - CONST CHAR ] ON LINE 122
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 122
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 122
INFO  16:23:23,550 - PRINT FUNCTION CALL IN USE! ON LINE 122
INFO  16:23:23,550 - CONST CHAR = ON LINE 123
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 123
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 123
INFO  16:23:23,550 - PRINT FUNCTION CALL IN USE! ON LINE 123
INFO  16:23:23,550 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,550 - WE ARE USING A VARIABLE OF TYPE int ON LINE 124
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 124
INFO  16:23:23,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 124
INFO  16:23:23,550 - CURRENT VARIABLE IN USE IS indexes AND IT IS OF TYPE array
INFO  16:23:23,551 - WE ARE USING AN ARRAY OF TYPE int ON LINE 124
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 124
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 124
INFO  16:23:23,551 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  16:23:23,551 - WE ARE USING AN ARRAY OF TYPE int ON LINE 124
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 124
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 124
INFO  16:23:23,551 - PRINT FUNCTION CALL IN USE! ON LINE 124
INFO  16:23:23,551 - CONST CHAR   ON LINE 125
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 125
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 125
INFO  16:23:23,551 - PRINT FUNCTION CALL IN USE! ON LINE 125
INFO  16:23:23,551 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,551 - USING ++ ON x ON LINE 126
INFO  16:23:23,551 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  16:23:23,551 - WE ARE USING A VARIABLE OF TYPE int ON LINE 128
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 128
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 128
INFO  16:23:23,551 - CONST NUMBER 10 ON LINE 128
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 128
INFO  16:23:23,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 128
INFO  16:23:23,551 - USING TWO EXPRESSIONS OF TYPE int ON LINE 128
INFO  16:23:23,551 - ENDING OF A DO...WHILE LOOP! ON LINE 117
INFO  16:23:23,551 - METHOD BODY ENDING!
INFO  16:23:23,551 - END OF DEFINING FUNCTION main
INFO  16:23:23,551 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  16:23:23,551 -  Deklarisanih promenljivih ima = 16
INFO  16:23:23,551 - ===================================
INFO  16:23:23,556 - Parsiranje uspesno zavrseno!
