INFO  00:14:55,259 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  00:14:55,320 - #34 program
INFO  00:14:55,320 - #48 MJProgram
INFO  00:14:55,320 - #48 int
INFO  00:14:55,321 - #48 x
INFO  00:14:55,321 - #42 ,
INFO  00:14:55,321 - #48 y
INFO  00:14:55,322 - #37 ;
INFO  00:14:55,322 - #48 int
INFO  00:14:55,322 - #48 bla
INFO  00:14:55,322 - #45 [
INFO  00:14:55,322 - #46 ]
INFO  00:14:55,322 - #42 ,
INFO  00:14:55,322 - #48 zz
INFO  00:14:55,322 - #42 ,
INFO  00:14:55,323 - #48 cc
INFO  00:14:55,323 - #45 [
INFO  00:14:55,323 - #46 ]
INFO  00:14:55,323 - #37 ;
INFO  00:14:55,323 - #7 const
INFO  00:14:55,323 - #48 int
INFO  00:14:55,323 - #48 aa
INFO  00:14:55,332 - #33 =
INFO  00:14:55,332 - #47 5
INFO  00:14:55,332 - #42 ,
INFO  00:14:55,332 - #48 bb
INFO  00:14:55,333 - #33 =
INFO  00:14:55,333 - #47 6
INFO  00:14:55,333 - #37 ;
INFO  00:14:55,333 - #7 const
INFO  00:14:55,333 - #48 char
INFO  00:14:55,333 - #48 cc
INFO  00:14:55,333 - #33 =
INFO  00:14:55,334 - #2 c
INFO  00:14:55,334 - #42 ,
INFO  00:14:55,335 - #48 dd
INFO  00:14:55,335 - #33 =
INFO  00:14:55,335 - #2 d
INFO  00:14:55,335 - #37 ;
INFO  00:14:55,335 - #7 const
INFO  00:14:55,335 - #48 bool
INFO  00:14:55,335 - #48 ee
INFO  00:14:55,335 - #33 =
INFO  00:14:55,335 - #3 true
INFO  00:14:55,335 - #42 ,
INFO  00:14:55,336 - #48 ff
INFO  00:14:55,336 - #33 =
INFO  00:14:55,336 - #3 false
INFO  00:14:55,336 - #37 ;
INFO  00:14:55,336 - #5 class
INFO  00:14:55,336 - #48 Klasa
INFO  00:14:55,337 - #35 {
INFO  00:14:55,337 - #48 int
INFO  00:14:55,338 - #48 duca1
INFO  00:14:55,338 - #42 ,
INFO  00:14:55,338 - #48 duca2
INFO  00:14:55,338 - #42 ,
INFO  00:14:55,338 - #48 duca3
INFO  00:14:55,338 - #37 ;
INFO  00:14:55,338 - #36 }
INFO  00:14:55,339 - #5 class
INFO  00:14:55,339 - #48 KlasaDva
INFO  00:14:55,339 - #13 extends
INFO  00:14:55,340 - #48 Klasa
INFO  00:14:55,340 - #35 {
INFO  00:14:55,340 - #48 int
INFO  00:14:55,340 - #48 aa
INFO  00:14:55,340 - #37 ;
INFO  00:14:55,340 - #35 {
INFO  00:14:55,340 - #48 int
INFO  00:14:55,341 - #48 f
INFO  00:14:55,341 - #38 (
INFO  00:14:55,341 - #39 )
INFO  00:14:55,341 - #35 {
INFO  00:14:55,342 - #36 }
INFO  00:14:55,342 - #36 }
INFO  00:14:55,343 - #36 }
INFO  00:14:55,343 - #5 class
INFO  00:14:55,343 - #48 Klasa3
INFO  00:14:55,343 - #35 {
INFO  00:14:55,343 - #36 }
INFO  00:14:55,343 - #5 class
INFO  00:14:55,343 - #48 Klasa4
INFO  00:14:55,343 - #35 {
INFO  00:14:55,343 - #35 {
INFO  00:14:55,343 - #44 void
INFO  00:14:55,343 - #48 bla
INFO  00:14:55,344 - #38 (
INFO  00:14:55,344 - #39 )
INFO  00:14:55,344 - #35 {
INFO  00:14:55,344 - #36 }
INFO  00:14:55,344 - #36 }
INFO  00:14:55,344 - #36 }
INFO  00:14:55,344 - #35 {
INFO  00:14:55,344 - #48 int
INFO  00:14:55,345 - #48 f
INFO  00:14:55,345 - #38 (
INFO  00:14:55,345 - #39 )
INFO  00:14:55,345 - #35 {
INFO  00:14:55,345 - #36 }
INFO  00:14:55,345 - #44 void
INFO  00:14:55,345 - #48 f
INFO  00:14:55,345 - #38 (
INFO  00:14:55,345 - #39 )
INFO  00:14:55,345 - #35 {
INFO  00:14:55,345 - #36 }
INFO  00:14:55,345 - #48 int
INFO  00:14:55,345 - #48 f
INFO  00:14:55,345 - #38 (
INFO  00:14:55,345 - #48 int
INFO  00:14:55,345 - #48 a
INFO  00:14:55,345 - #39 )
INFO  00:14:55,346 - #35 {
INFO  00:14:55,346 - #36 }
INFO  00:14:55,346 - #48 int
INFO  00:14:55,346 - #48 f
INFO  00:14:55,346 - #38 (
INFO  00:14:55,346 - #48 int
INFO  00:14:55,346 - #48 b
INFO  00:14:55,346 - #42 ,
INFO  00:14:55,347 - #48 int
INFO  00:14:55,347 - #48 c
INFO  00:14:55,347 - #45 [
INFO  00:14:55,347 - #46 ]
INFO  00:14:55,347 - #39 )
INFO  00:14:55,347 - #35 {
INFO  00:14:55,347 - #36 }
INFO  00:14:55,347 - #44 void
INFO  00:14:55,348 - #48 main
INFO  00:14:55,348 - #38 (
INFO  00:14:55,348 - #39 )
INFO  00:14:55,348 - #48 int
INFO  00:14:55,348 - #48 x
INFO  00:14:55,348 - #42 ,
INFO  00:14:55,348 - #48 i
INFO  00:14:55,348 - #37 ;
INFO  00:14:55,348 - #48 char
INFO  00:14:55,348 - #48 c
INFO  00:14:55,348 - #37 ;
INFO  00:14:55,349 - #35 {
INFO  00:14:55,349 - #48 val
INFO  00:14:55,349 - #33 =
INFO  00:14:55,351 - #11 new
INFO  00:14:55,352 - #48 Table
INFO  00:14:55,352 - #37 ;
INFO  00:14:55,355 - #48 val
INFO  00:14:55,355 - #30 .
INFO  00:14:55,355 - #48 pos
INFO  00:14:55,355 - #33 =
INFO  00:14:55,355 - #11 new
INFO  00:14:55,355 - #48 int
INFO  00:14:55,355 - #45 [
INFO  00:14:55,356 - #48 size
INFO  00:14:55,356 - #46 ]
INFO  00:14:55,357 - #37 ;
INFO  00:14:55,357 - #48 val
INFO  00:14:55,357 - #30 .
INFO  00:14:55,357 - #48 neg
INFO  00:14:55,357 - #33 =
INFO  00:14:55,357 - #11 new
INFO  00:14:55,357 - #48 int
INFO  00:14:55,357 - #45 [
INFO  00:14:55,357 - #48 size
INFO  00:14:55,357 - #46 ]
INFO  00:14:55,358 - #37 ;
INFO  00:14:55,358 - #48 i
INFO  00:14:55,358 - #33 =
INFO  00:14:55,358 - #47 0
INFO  00:14:55,358 - #37 ;
INFO  00:14:55,358 - #9 do
INFO  00:14:55,359 - #35 {
ERROR 00:14:55,359 - 
Sintaksna greska na liniji 47
INFO  00:14:55,359 - #48 val
INFO  00:14:55,359 - #30 .
INFO  00:14:55,359 - #48 putp
INFO  00:14:55,359 - #38 (
INFO  00:14:55,359 - #47 0
INFO  00:14:55,359 - #42 ,
INFO  00:14:55,360 - #48 i
INFO  00:14:55,360 - #39 )
INFO  00:14:55,360 - #37 ;
INFO  00:14:55,360 - #48 val
INFO  00:14:55,360 - #30 .
INFO  00:14:55,360 - #48 putn
INFO  00:14:55,360 - #38 (
INFO  00:14:55,360 - #47 0
INFO  00:14:55,360 - #42 ,
INFO  00:14:55,360 - #48 i
INFO  00:14:55,360 - #39 )
INFO  00:14:55,360 - #37 ;
INFO  00:14:55,360 - #48 i
INFO  00:14:55,360 - #28 ++
INFO  00:14:55,360 - #37 ;
INFO  00:14:55,360 - #36 }
INFO  00:14:55,360 - #10 while
INFO  00:14:55,360 - #38 (
INFO  00:14:55,360 - #48 i
INFO  00:14:55,360 - #24 <
INFO  00:14:55,361 - #48 size
INFO  00:14:55,361 - #39 )
INFO  00:14:55,361 - #37 ;
INFO  00:14:55,361 - #48 f
INFO  00:14:55,361 - #38 (
INFO  00:14:55,361 - #48 c
INFO  00:14:55,361 - #42 ,
INFO  00:14:55,361 - #48 x
INFO  00:14:55,361 - #42 ,
INFO  00:14:55,361 - #48 i
INFO  00:14:55,361 - #39 )
INFO  00:14:55,361 - #37 ;
INFO  00:14:55,361 - #12 read
INFO  00:14:55,361 - #38 (
INFO  00:14:55,361 - #48 x
INFO  00:14:55,361 - #39 )
INFO  00:14:55,361 - #37 ;
INFO  00:14:55,361 - #9 do
INFO  00:14:55,361 - #35 {
INFO  00:14:55,361 - #49 if
INFO  00:14:55,361 - #38 (
INFO  00:14:55,361 - #48 x
INFO  00:14:55,361 - #25 <=
INFO  00:14:55,362 - #47 0
INFO  00:14:55,362 - #39 )
INFO  00:14:55,362 - #4 break
INFO  00:14:55,362 - #37 ;
INFO  00:14:55,362 - #49 if
INFO  00:14:55,362 - #38 (
INFO  00:14:55,362 - #47 0
INFO  00:14:55,362 - #25 <=
INFO  00:14:55,362 - #48 x
INFO  00:14:55,362 - #26 &&
INFO  00:14:55,362 - #48 x
INFO  00:14:55,362 - #24 <
INFO  00:14:55,362 - #48 size
INFO  00:14:55,362 - #39 )
INFO  00:14:55,362 - #35 {
INFO  00:14:55,362 - #48 val
INFO  00:14:55,362 - #30 .
INFO  00:14:55,362 - #48 putp
INFO  00:14:55,362 - #38 (
INFO  00:14:55,362 - #48 val
INFO  00:14:55,362 - #30 .
INFO  00:14:55,362 - #48 getp
INFO  00:14:55,362 - #38 (
INFO  00:14:55,362 - #48 x
INFO  00:14:55,363 - #39 )
INFO  00:14:55,363 - #41 +
INFO  00:14:55,363 - #47 1
INFO  00:14:55,363 - #39 )
INFO  00:14:55,363 - #37 ;
INFO  00:14:55,363 - #36 }
INFO  00:14:55,363 - #50 else
INFO  00:14:55,363 - #49 if
INFO  00:14:55,363 - #38 (
INFO  00:14:55,363 - #16 -
INFO  00:14:55,363 - #48 size
INFO  00:14:55,363 - #24 <
INFO  00:14:55,363 - #48 x
INFO  00:14:55,363 - #26 &&
INFO  00:14:55,363 - #48 x
INFO  00:14:55,363 - #24 <
INFO  00:14:55,363 - #47 0
INFO  00:14:55,363 - #39 )
INFO  00:14:55,363 - #35 {
INFO  00:14:55,364 - #48 val
INFO  00:14:55,364 - #30 .
INFO  00:14:55,364 - #48 putn
INFO  00:14:55,364 - #38 (
INFO  00:14:55,364 - #48 val
INFO  00:14:55,364 - #30 .
INFO  00:14:55,364 - #48 getn
INFO  00:14:55,364 - #38 (
INFO  00:14:55,364 - #16 -
INFO  00:14:55,364 - #48 x
INFO  00:14:55,364 - #39 )
INFO  00:14:55,364 - #41 +
INFO  00:14:55,364 - #47 1
INFO  00:14:55,364 - #39 )
INFO  00:14:55,364 - #37 ;
INFO  00:14:55,364 - #36 }
INFO  00:14:55,364 - #12 read
INFO  00:14:55,364 - #38 (
INFO  00:14:55,364 - #48 x
INFO  00:14:55,364 - #39 )
INFO  00:14:55,364 - #37 ;
INFO  00:14:55,364 - #36 }
INFO  00:14:55,364 - #10 while
INFO  00:14:55,365 - #38 (
INFO  00:14:55,365 - #3 true
INFO  00:14:55,365 - #39 )
INFO  00:14:55,365 - #37 ;
INFO  00:14:55,365 - #43 print
INFO  00:14:55,365 - #38 (
INFO  00:14:55,365 - #48 x
INFO  00:14:55,365 - #24 <
INFO  00:14:55,365 - #47 0
INFO  00:14:55,365 - #31 ?
INFO  00:14:55,365 - #2 -
INFO  00:14:55,365 - #32 :
INFO  00:14:55,365 - #2 +
INFO  00:14:55,365 - #39 )
INFO  00:14:55,365 - #37 ;
INFO  00:14:55,365 - #36 }
INFO  00:14:55,365 - #36 }
ERROR 00:14:55,365 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 74
