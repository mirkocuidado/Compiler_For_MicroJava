INFO  22:51:59,159 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  22:51:59,313 - #2 program
INFO  22:51:59,313 - #43 MJProgram
INFO  22:51:59,313 - #43 int
INFO  22:51:59,315 - #43 a
INFO  22:51:59,315 - #31 ,
INFO  22:51:59,316 - #43 b
INFO  22:51:59,316 - #31 ,
INFO  22:51:59,316 - #43 c
INFO  22:51:59,316 - #31 ,
INFO  22:51:59,316 - #43 d
INFO  22:51:59,316 - #33 ;
INFO  22:51:59,317 - #9 const
INFO  22:51:59,317 - #43 int
INFO  22:51:59,317 - #43 term
INFO  22:51:59,317 - #19 =
INFO  22:51:59,318 - #42 1
INFO  22:51:59,318 - #33 ;
INFO  22:51:59,318 - #9 const
INFO  22:51:59,318 - #43 int
INFO  22:51:59,319 - #43 y
INFO  22:51:59,319 - #19 =
INFO  22:51:59,332 - #42 3
INFO  22:51:59,332 - #33 ;
INFO  22:51:59,333 - #35 {
INFO  22:51:59,333 - #5 void
INFO  22:51:59,334 - #43 main
INFO  22:51:59,335 - #37 (
INFO  22:51:59,335 - #38 )
INFO  22:51:59,336 - #43 int
INFO  22:51:59,337 - #43 x
INFO  22:51:59,337 - #33 ;
INFO  22:51:59,337 - #35 {
INFO  22:51:59,338 - #43 x
INFO  22:51:59,340 - #19 =
INFO  22:51:59,342 - #43 term
INFO  22:51:59,344 - #34 ?
INFO  22:51:59,345 - #42 2
INFO  22:51:59,346 - #32 :
INFO  22:51:59,346 - #42 3
INFO  22:51:59,348 - #33 ;
INFO  22:51:59,348 - #18 print
INFO  22:51:59,348 - #37 (
INFO  22:51:59,349 - #43 x
INFO  22:51:59,349 - #38 )
INFO  22:51:59,349 - #33 ;
INFO  22:51:59,350 - #36 }
INFO  22:51:59,350 - #36 }
INFO  22:51:59,362 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListSingle(
                    VarClassNoArray(
                     a
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                  VarClassNoArray(
                   b
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               d
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           int
          ) [Type]
          ConstListSingle(
            ConstListNoArray(
             term
              ValuesNumber(
               1
              ) [ValuesNumber]
            ) [ConstListNoArray]
          ) [ConstListSingle]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        NoVarDeclList(
        ) [NoVarDeclList]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             x
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          Assignment(
            DesignatorStatementOptionsClassAssignExpression(
              Designator(
                DesigIdent(
                 x
                ) [DesigIdent]
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassTwoClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           term
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
                TernaryClass(
                ) [TernaryClass]
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       2
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
                ColonClass(
                ) [ColonClass]
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       3
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassTwoClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [Assignment]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                      DesigIdent(
                       x
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:51:59,363 - ===================================
INFO  22:51:59,371 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  22:51:59,371 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  22:51:59,372 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  22:51:59,372 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  22:51:59,372 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  22:51:59,372 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  22:51:59,372 - CONST VALUE 1 IS BEING USED! ON LINE 4
INFO  22:51:59,373 - CONST VARIABLE term IS BEING DEFINED! ON LINE 4
INFO  22:51:59,373 - CONST VALUE 3 IS BEING USED! ON LINE 5
INFO  22:51:59,374 - CONST VARIABLE y IS BEING DEFINED! ON LINE 5
INFO  22:51:59,374 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 23
INFO  22:51:59,374 - VARIABLE x IS BEING DEFINED! ON LINE 24
INFO  22:51:59,374 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 24
INFO  22:51:59,374 - METHOD BODY STARTING!
INFO  22:51:59,375 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:51:59,375 - BEGINNING OF AN ASSIGNEMENT! ON LINE 59
INFO  22:51:59,376 - CURRENT VARIABLE IN USE IS term AND IT IS OF TYPE int
INFO  22:51:59,376 - WE ARE USING A VARIABLE OF TYPE int ON LINE 59
INFO  22:51:59,376 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  22:51:59,377 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  22:51:59,378 - CONST NUMBER 2 ON LINE 59
INFO  22:51:59,378 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  22:51:59,378 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  22:51:59,378 - CONST NUMBER 3 ON LINE 59
INFO  22:51:59,378 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  22:51:59,378 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  22:51:59,378 - SUCCESSFUL TERNARY! TYPES: int AND int ! ON LINE 59
INFO  22:51:59,378 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 59
INFO  22:51:59,378 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:51:59,378 - WE ARE USING A VARIABLE OF TYPE int ON LINE 60
INFO  22:51:59,378 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  22:51:59,378 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  22:51:59,379 - PRINT FUNCTION CALL IN USE! ON LINE 60
INFO  22:51:59,379 - METHOD BODY ENDING!
INFO  22:51:59,379 - END OF DEFINING FUNCTION main
INFO  22:51:59,379 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  22:51:59,379 -  Deklarisanih promenljivih ima = 5
INFO  22:51:59,379 - ===================================
