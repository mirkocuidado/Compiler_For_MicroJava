INFO  22:33:33,491 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  22:33:33,615 - #2 program
INFO  22:33:33,616 - #48 MJProgram
INFO  22:33:33,616 - #48 int
INFO  22:33:33,618 - #48 a
INFO  22:33:33,620 - #36 ,
INFO  22:33:33,620 - #48 b
INFO  22:33:33,620 - #36 ,
INFO  22:33:33,620 - #48 c
INFO  22:33:33,621 - #36 ,
INFO  22:33:33,621 - #48 d
INFO  22:33:33,621 - #38 ;
INFO  22:33:33,621 - #9 const
INFO  22:33:33,622 - #48 int
INFO  22:33:33,622 - #48 y
INFO  22:33:33,622 - #24 =
INFO  22:33:33,622 - #47 3
INFO  22:33:33,622 - #38 ;
INFO  22:33:33,623 - #40 {
INFO  22:33:33,623 - #48 int
INFO  22:33:33,625 - #48 k
INFO  22:33:33,626 - #42 (
INFO  22:33:33,637 - #48 int
INFO  22:33:33,637 - #48 a
INFO  22:33:33,637 - #36 ,
INFO  22:33:33,637 - #48 int
INFO  22:33:33,637 - #48 b
INFO  22:33:33,637 - #43 )
INFO  22:33:33,638 - #40 {
INFO  22:33:33,640 - #46 return
INFO  22:33:33,643 - #48 b
INFO  22:33:33,648 - #38 ;
INFO  22:33:33,652 - #41 }
INFO  22:33:33,652 - #48 char
INFO  22:33:33,655 - #48 s
INFO  22:33:33,655 - #42 (
INFO  22:33:33,655 - #43 )
INFO  22:33:33,658 - #40 {
INFO  22:33:33,658 - #46 return
INFO  22:33:33,659 - #49 c
INFO  22:33:33,659 - #38 ;
INFO  22:33:33,659 - #41 }
INFO  22:33:33,659 - #5 void
INFO  22:33:33,659 - #48 main
INFO  22:33:33,659 - #42 (
INFO  22:33:33,660 - #43 )
INFO  22:33:33,660 - #48 int
INFO  22:33:33,660 - #48 x
INFO  22:33:33,660 - #38 ;
INFO  22:33:33,660 - #48 char
INFO  22:33:33,660 - #48 z
INFO  22:33:33,661 - #38 ;
INFO  22:33:33,661 - #48 bool
INFO  22:33:33,661 - #48 p
INFO  22:33:33,661 - #38 ;
INFO  22:33:33,661 - #48 int
INFO  22:33:33,661 - #48 xx
INFO  22:33:33,661 - #44 [
INFO  22:33:33,661 - #45 ]
INFO  22:33:33,662 - #38 ;
INFO  22:33:33,662 - #48 int
INFO  22:33:33,662 - #48 dd
INFO  22:33:33,662 - #38 ;
INFO  22:33:33,662 - #40 {
INFO  22:33:33,663 - #48 x
INFO  22:33:33,663 - #24 =
INFO  22:33:33,663 - #48 xx
INFO  22:33:33,666 - #44 [
INFO  22:33:33,666 - #47 0
INFO  22:33:33,668 - #45 ]
INFO  22:33:33,668 - #19 +
INFO  22:33:33,669 - #48 xx
INFO  22:33:33,670 - #44 [
INFO  22:33:33,670 - #47 2
INFO  22:33:33,671 - #45 ]
INFO  22:33:33,671 - #38 ;
INFO  22:33:33,671 - #18 print
INFO  22:33:33,671 - #42 (
INFO  22:33:33,671 - #47 2
INFO  22:33:33,672 - #43 )
INFO  22:33:33,673 - #38 ;
INFO  22:33:33,673 - #48 x
INFO  22:33:33,674 - #24 =
INFO  22:33:33,674 - #48 k
INFO  22:33:33,674 - #42 (
INFO  22:33:33,674 - #47 33
INFO  22:33:33,675 - #36 ,
INFO  22:33:33,675 - #48 k
INFO  22:33:33,675 - #42 (
INFO  22:33:33,675 - #47 12
INFO  22:33:33,675 - #36 ,
INFO  22:33:33,675 - #47 13
INFO  22:33:33,675 - #43 )
INFO  22:33:33,676 - #43 )
INFO  22:33:33,676 - #38 ;
INFO  22:33:33,676 - #18 print
INFO  22:33:33,676 - #42 (
INFO  22:33:33,676 - #48 x
INFO  22:33:33,676 - #43 )
INFO  22:33:33,676 - #38 ;
INFO  22:33:33,677 - #48 x
INFO  22:33:33,677 - #24 =
INFO  22:33:33,677 - #48 y
INFO  22:33:33,677 - #38 ;
INFO  22:33:33,677 - #18 print
INFO  22:33:33,677 - #42 (
INFO  22:33:33,677 - #48 x
INFO  22:33:33,677 - #43 )
INFO  22:33:33,677 - #38 ;
INFO  22:33:33,677 - #18 print
INFO  22:33:33,677 - #42 (
INFO  22:33:33,678 - #48 y
INFO  22:33:33,678 - #43 )
INFO  22:33:33,678 - #38 ;
INFO  22:33:33,678 - #48 d
INFO  22:33:33,678 - #24 =
INFO  22:33:33,678 - #47 4
INFO  22:33:33,678 - #38 ;
INFO  22:33:33,678 - #18 print
INFO  22:33:33,678 - #42 (
INFO  22:33:33,678 - #48 d
INFO  22:33:33,678 - #43 )
INFO  22:33:33,679 - #38 ;
INFO  22:33:33,679 - #48 d
INFO  22:33:33,679 - #33 ++
INFO  22:33:33,679 - #38 ;
INFO  22:33:33,679 - #18 print
INFO  22:33:33,679 - #42 (
INFO  22:33:33,679 - #48 d
INFO  22:33:33,679 - #43 )
INFO  22:33:33,679 - #38 ;
INFO  22:33:33,680 - #48 d
INFO  22:33:33,680 - #34 --
INFO  22:33:33,680 - #38 ;
INFO  22:33:33,680 - #18 print
INFO  22:33:33,680 - #42 (
INFO  22:33:33,680 - #48 d
INFO  22:33:33,680 - #43 )
INFO  22:33:33,680 - #38 ;
INFO  22:33:33,680 - #48 dd
INFO  22:33:33,681 - #24 =
INFO  22:33:33,681 - #47 10
INFO  22:33:33,681 - #38 ;
INFO  22:33:33,681 - #18 print
INFO  22:33:33,681 - #42 (
INFO  22:33:33,681 - #48 dd
INFO  22:33:33,681 - #43 )
INFO  22:33:33,681 - #38 ;
INFO  22:33:33,681 - #48 dd
INFO  22:33:33,681 - #33 ++
INFO  22:33:33,681 - #38 ;
INFO  22:33:33,681 - #18 print
INFO  22:33:33,682 - #42 (
INFO  22:33:33,682 - #48 dd
INFO  22:33:33,682 - #43 )
INFO  22:33:33,682 - #38 ;
INFO  22:33:33,682 - #48 dd
INFO  22:33:33,682 - #34 --
INFO  22:33:33,682 - #38 ;
INFO  22:33:33,682 - #18 print
INFO  22:33:33,682 - #42 (
INFO  22:33:33,682 - #48 dd
INFO  22:33:33,682 - #43 )
INFO  22:33:33,682 - #38 ;
INFO  22:33:33,683 - #48 p
INFO  22:33:33,684 - #24 =
INFO  22:33:33,684 - #50 true
INFO  22:33:33,684 - #38 ;
INFO  22:33:33,684 - #18 print
INFO  22:33:33,684 - #42 (
INFO  22:33:33,684 - #48 p
INFO  22:33:33,684 - #43 )
INFO  22:33:33,684 - #38 ;
INFO  22:33:33,684 - #48 p
INFO  22:33:33,684 - #24 =
INFO  22:33:33,684 - #50 false
INFO  22:33:33,684 - #38 ;
INFO  22:33:33,685 - #18 print
INFO  22:33:33,685 - #42 (
INFO  22:33:33,685 - #48 p
INFO  22:33:33,685 - #43 )
INFO  22:33:33,685 - #38 ;
INFO  22:33:33,685 - #48 z
INFO  22:33:33,685 - #24 =
INFO  22:33:33,685 - #49 m
INFO  22:33:33,685 - #38 ;
INFO  22:33:33,685 - #18 print
INFO  22:33:33,685 - #42 (
INFO  22:33:33,685 - #48 z
INFO  22:33:33,685 - #43 )
INFO  22:33:33,686 - #38 ;
INFO  22:33:33,686 - #48 z
INFO  22:33:33,686 - #24 =
INFO  22:33:33,686 - #48 s
INFO  22:33:33,686 - #42 (
INFO  22:33:33,686 - #43 )
INFO  22:33:33,687 - #38 ;
INFO  22:33:33,688 - #18 print
INFO  22:33:33,688 - #42 (
INFO  22:33:33,688 - #48 z
INFO  22:33:33,688 - #43 )
INFO  22:33:33,688 - #38 ;
INFO  22:33:33,688 - #46 return
INFO  22:33:33,688 - #38 ;
INFO  22:33:33,688 - #41 }
INFO  22:33:33,690 - #41 }
INFO  22:33:33,712 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      NoGroupDecl(
      ) [NoGroupDecl]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 b
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               c
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             d
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
           k
          ) [ReturnValueClassNoVoid]
          FormParams(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclClassNoArray(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormalParamDeclClassNoArray]
              ) [SingleFormalParamDecl]
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               b
              ) [FormalParamDeclClassNoArray]
            ) [FormalParamDecls]
          ) [FormParams]
          NoVarDeclList(
          ) [NoVarDeclList]
          LBraceClass(
          ) [LBraceClass]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              ReturnNonTerminalClass(
              ) [ReturnNonTerminalClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        HelperClass(
                        ) [HelperClass]
                        Designator(
                         b
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [ReturnExpr]
          ) [Statements]
          RBraceClass(
          ) [RBraceClass]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           char
          ) [Type]
         s
        ) [ReturnValueClassNoVoid]
        NoFormParam(
        ) [NoFormParam]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    CharConst(
                     c
                    ) [CharConst]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                NoVarDeclList(
                ) [NoVarDeclList]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     x
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 char
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   z
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               bool
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 p
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassArray(
               xx
              ) [VarClassArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             dd
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        Statements(
                                                          Statements(
                                                            Statements(
                                                              NoStmt(
                                                              ) [NoStmt]
                                                              Assignment(
                                                                DesignatorStatementOptionsClassAssignExpression(
                                                                  Designator(
                                                                   x
                                                                    NoOptionalDesignatorClass(
                                                                    ) [NoOptionalDesignatorClass]
                                                                  ) [Designator]
                                                                  HelperClass(
                                                                  ) [HelperClass]
                                                                  AssignOpClass(
                                                                    AssignOperationClass(
                                                                    ) [AssignOperationClass]
                                                                  ) [AssignOpClass]
                                                                  ClassOneClass(
                                                                    NormalExpressionClass(
                                                                      ExprFirstOptionClassWithMinus(
                                                                        TermClass(
                                                                          DesignatorClass(
                                                                            HelperClass(
                                                                            ) [HelperClass]
                                                                            Designator(
                                                                             xx
                                                                              OptionalDesignatorArray(
                                                                                NoOptionalDesignatorClass(
                                                                                ) [NoOptionalDesignatorClass]
                                                                                LSquareClass(
                                                                                ) [LSquareClass]
                                                                                ClassOneClass(
                                                                                  NormalExpressionClass(
                                                                                    ExprFirstOptionClassWithMinus(
                                                                                      TermClass(
                                                                                        NumberConst(
                                                                                         0
                                                                                        ) [NumberConst]
                                                                                        NoTermOptionalListClass(
                                                                                        ) [NoTermOptionalListClass]
                                                                                      ) [TermClass]
                                                                                      NoExprOptionalListClass(
                                                                                      ) [NoExprOptionalListClass]
                                                                                    ) [ExprFirstOptionClassWithMinus]
                                                                                  ) [NormalExpressionClass]
                                                                                ) [ClassOneClass]
                                                                              ) [OptionalDesignatorArray]
                                                                            ) [Designator]
                                                                          ) [DesignatorClass]
                                                                          NoTermOptionalListClass(
                                                                          ) [NoTermOptionalListClass]
                                                                        ) [TermClass]
                                                                        ExprOptionalListClass(
                                                                          NoExprOptionalListClass(
                                                                          ) [NoExprOptionalListClass]
                                                                          PlusOperation(
                                                                          ) [PlusOperation]
                                                                          TermClass(
                                                                            DesignatorClass(
                                                                              HelperClass(
                                                                              ) [HelperClass]
                                                                              Designator(
                                                                               xx
                                                                                OptionalDesignatorArray(
                                                                                  NoOptionalDesignatorClass(
                                                                                  ) [NoOptionalDesignatorClass]
                                                                                  LSquareClass(
                                                                                  ) [LSquareClass]
                                                                                  ClassOneClass(
                                                                                    NormalExpressionClass(
                                                                                      ExprFirstOptionClassWithMinus(
                                                                                        TermClass(
                                                                                          NumberConst(
                                                                                           2
                                                                                          ) [NumberConst]
                                                                                          NoTermOptionalListClass(
                                                                                          ) [NoTermOptionalListClass]
                                                                                        ) [TermClass]
                                                                                        NoExprOptionalListClass(
                                                                                        ) [NoExprOptionalListClass]
                                                                                      ) [ExprFirstOptionClassWithMinus]
                                                                                    ) [NormalExpressionClass]
                                                                                  ) [ClassOneClass]
                                                                                ) [OptionalDesignatorArray]
                                                                              ) [Designator]
                                                                            ) [DesignatorClass]
                                                                            NoTermOptionalListClass(
                                                                            ) [NoTermOptionalListClass]
                                                                          ) [TermClass]
                                                                        ) [ExprOptionalListClass]
                                                                      ) [ExprFirstOptionClassWithMinus]
                                                                    ) [NormalExpressionClass]
                                                                  ) [ClassOneClass]
                                                                ) [DesignatorStatementOptionsClassAssignExpression]
                                                              ) [Assignment]
                                                            ) [Statements]
                                                            PrintStmt(
                                                              ClassOneClass(
                                                                NormalExpressionClass(
                                                                  ExprFirstOptionClassWithMinus(
                                                                    TermClass(
                                                                      NumberConst(
                                                                       2
                                                                      ) [NumberConst]
                                                                      NoTermOptionalListClass(
                                                                      ) [NoTermOptionalListClass]
                                                                    ) [TermClass]
                                                                    NoExprOptionalListClass(
                                                                    ) [NoExprOptionalListClass]
                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                ) [NormalExpressionClass]
                                                              ) [ClassOneClass]
                                                              NoCommaNumberClass(
                                                              ) [NoCommaNumberClass]
                                                            ) [PrintStmt]
                                                          ) [Statements]
                                                          Assignment(
                                                            DesignatorStatementOptionsClassAssignExpression(
                                                              Designator(
                                                               x
                                                                NoOptionalDesignatorClass(
                                                                ) [NoOptionalDesignatorClass]
                                                              ) [Designator]
                                                              HelperClass(
                                                              ) [HelperClass]
                                                              AssignOpClass(
                                                                AssignOperationClass(
                                                                ) [AssignOperationClass]
                                                              ) [AssignOpClass]
                                                              ClassOneClass(
                                                                NormalExpressionClass(
                                                                  ExprFirstOptionClassWithMinus(
                                                                    TermClass(
                                                                      FactorOptionalParams(
                                                                        HelperClass(
                                                                        ) [HelperClass]
                                                                        Designator(
                                                                         k
                                                                          NoOptionalDesignatorClass(
                                                                          ) [NoOptionalDesignatorClass]
                                                                        ) [Designator]
                                                                        Actuals(
                                                                          ActualParams(
                                                                            ActualParam(
                                                                              ClassOneClass(
                                                                                NormalExpressionClass(
                                                                                  ExprFirstOptionClassWithMinus(
                                                                                    TermClass(
                                                                                      NumberConst(
                                                                                       33
                                                                                      ) [NumberConst]
                                                                                      NoTermOptionalListClass(
                                                                                      ) [NoTermOptionalListClass]
                                                                                    ) [TermClass]
                                                                                    NoExprOptionalListClass(
                                                                                    ) [NoExprOptionalListClass]
                                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                                ) [NormalExpressionClass]
                                                                              ) [ClassOneClass]
                                                                            ) [ActualParam]
                                                                            ClassOneClass(
                                                                              NormalExpressionClass(
                                                                                ExprFirstOptionClassWithMinus(
                                                                                  TermClass(
                                                                                    FactorOptionalParams(
                                                                                      HelperClass(
                                                                                      ) [HelperClass]
                                                                                      Designator(
                                                                                       k
                                                                                        NoOptionalDesignatorClass(
                                                                                        ) [NoOptionalDesignatorClass]
                                                                                      ) [Designator]
                                                                                      Actuals(
                                                                                        ActualParams(
                                                                                          ActualParam(
                                                                                            ClassOneClass(
                                                                                              NormalExpressionClass(
                                                                                                ExprFirstOptionClassWithMinus(
                                                                                                  TermClass(
                                                                                                    NumberConst(
                                                                                                     12
                                                                                                    ) [NumberConst]
                                                                                                    NoTermOptionalListClass(
                                                                                                    ) [NoTermOptionalListClass]
                                                                                                  ) [TermClass]
                                                                                                  NoExprOptionalListClass(
                                                                                                  ) [NoExprOptionalListClass]
                                                                                                ) [ExprFirstOptionClassWithMinus]
                                                                                              ) [NormalExpressionClass]
                                                                                            ) [ClassOneClass]
                                                                                          ) [ActualParam]
                                                                                          ClassOneClass(
                                                                                            NormalExpressionClass(
                                                                                              ExprFirstOptionClassWithMinus(
                                                                                                TermClass(
                                                                                                  NumberConst(
                                                                                                   13
                                                                                                  ) [NumberConst]
                                                                                                  NoTermOptionalListClass(
                                                                                                  ) [NoTermOptionalListClass]
                                                                                                ) [TermClass]
                                                                                                NoExprOptionalListClass(
                                                                                                ) [NoExprOptionalListClass]
                                                                                              ) [ExprFirstOptionClassWithMinus]
                                                                                            ) [NormalExpressionClass]
                                                                                          ) [ClassOneClass]
                                                                                        ) [ActualParams]
                                                                                      ) [Actuals]
                                                                                    ) [FactorOptionalParams]
                                                                                    NoTermOptionalListClass(
                                                                                    ) [NoTermOptionalListClass]
                                                                                  ) [TermClass]
                                                                                  NoExprOptionalListClass(
                                                                                  ) [NoExprOptionalListClass]
                                                                                ) [ExprFirstOptionClassWithMinus]
                                                                              ) [NormalExpressionClass]
                                                                            ) [ClassOneClass]
                                                                          ) [ActualParams]
                                                                        ) [Actuals]
                                                                      ) [FactorOptionalParams]
                                                                      NoTermOptionalListClass(
                                                                      ) [NoTermOptionalListClass]
                                                                    ) [TermClass]
                                                                    NoExprOptionalListClass(
                                                                    ) [NoExprOptionalListClass]
                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                ) [NormalExpressionClass]
                                                              ) [ClassOneClass]
                                                            ) [DesignatorStatementOptionsClassAssignExpression]
                                                          ) [Assignment]
                                                        ) [Statements]
                                                        PrintStmt(
                                                          ClassOneClass(
                                                            NormalExpressionClass(
                                                              ExprFirstOptionClassWithMinus(
                                                                TermClass(
                                                                  DesignatorClass(
                                                                    HelperClass(
                                                                    ) [HelperClass]
                                                                    Designator(
                                                                     x
                                                                      NoOptionalDesignatorClass(
                                                                      ) [NoOptionalDesignatorClass]
                                                                    ) [Designator]
                                                                  ) [DesignatorClass]
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                ) [TermClass]
                                                                NoExprOptionalListClass(
                                                                ) [NoExprOptionalListClass]
                                                              ) [ExprFirstOptionClassWithMinus]
                                                            ) [NormalExpressionClass]
                                                          ) [ClassOneClass]
                                                          NoCommaNumberClass(
                                                          ) [NoCommaNumberClass]
                                                        ) [PrintStmt]
                                                      ) [Statements]
                                                      Assignment(
                                                        DesignatorStatementOptionsClassAssignExpression(
                                                          Designator(
                                                           x
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                          HelperClass(
                                                          ) [HelperClass]
                                                          AssignOpClass(
                                                            AssignOperationClass(
                                                            ) [AssignOperationClass]
                                                          ) [AssignOpClass]
                                                          ClassOneClass(
                                                            NormalExpressionClass(
                                                              ExprFirstOptionClassWithMinus(
                                                                TermClass(
                                                                  DesignatorClass(
                                                                    HelperClass(
                                                                    ) [HelperClass]
                                                                    Designator(
                                                                     y
                                                                      NoOptionalDesignatorClass(
                                                                      ) [NoOptionalDesignatorClass]
                                                                    ) [Designator]
                                                                  ) [DesignatorClass]
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                ) [TermClass]
                                                                NoExprOptionalListClass(
                                                                ) [NoExprOptionalListClass]
                                                              ) [ExprFirstOptionClassWithMinus]
                                                            ) [NormalExpressionClass]
                                                          ) [ClassOneClass]
                                                        ) [DesignatorStatementOptionsClassAssignExpression]
                                                      ) [Assignment]
                                                    ) [Statements]
                                                    PrintStmt(
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              DesignatorClass(
                                                                HelperClass(
                                                                ) [HelperClass]
                                                                Designator(
                                                                 x
                                                                  NoOptionalDesignatorClass(
                                                                  ) [NoOptionalDesignatorClass]
                                                                ) [Designator]
                                                              ) [DesignatorClass]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                      NoCommaNumberClass(
                                                      ) [NoCommaNumberClass]
                                                    ) [PrintStmt]
                                                  ) [Statements]
                                                  PrintStmt(
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            DesignatorClass(
                                                              HelperClass(
                                                              ) [HelperClass]
                                                              Designator(
                                                               y
                                                                NoOptionalDesignatorClass(
                                                                ) [NoOptionalDesignatorClass]
                                                              ) [Designator]
                                                            ) [DesignatorClass]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                    NoCommaNumberClass(
                                                    ) [NoCommaNumberClass]
                                                  ) [PrintStmt]
                                                ) [Statements]
                                                Assignment(
                                                  DesignatorStatementOptionsClassAssignExpression(
                                                    Designator(
                                                     d
                                                      NoOptionalDesignatorClass(
                                                      ) [NoOptionalDesignatorClass]
                                                    ) [Designator]
                                                    HelperClass(
                                                    ) [HelperClass]
                                                    AssignOpClass(
                                                      AssignOperationClass(
                                                      ) [AssignOperationClass]
                                                    ) [AssignOpClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            NumberConst(
                                                             4
                                                            ) [NumberConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                                ) [Assignment]
                                              ) [Statements]
                                              PrintStmt(
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        DesignatorClass(
                                                          HelperClass(
                                                          ) [HelperClass]
                                                          Designator(
                                                           d
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                        ) [DesignatorClass]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                                NoCommaNumberClass(
                                                ) [NoCommaNumberClass]
                                              ) [PrintStmt]
                                            ) [Statements]
                                            Assignment(
                                              DesignatorStatementPlusPlus(
                                                Designator(
                                                 d
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                              ) [DesignatorStatementPlusPlus]
                                            ) [Assignment]
                                          ) [Statements]
                                          PrintStmt(
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      Designator(
                                                       d
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                            NoCommaNumberClass(
                                            ) [NoCommaNumberClass]
                                          ) [PrintStmt]
                                        ) [Statements]
                                        Assignment(
                                          DesignatorStatementMinusMinus(
                                            Designator(
                                             d
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorStatementMinusMinus]
                                        ) [Assignment]
                                      ) [Statements]
                                      PrintStmt(
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                DesignatorClass(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  Designator(
                                                   d
                                                    NoOptionalDesignatorClass(
                                                    ) [NoOptionalDesignatorClass]
                                                  ) [Designator]
                                                ) [DesignatorClass]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                        NoCommaNumberClass(
                                        ) [NoCommaNumberClass]
                                      ) [PrintStmt]
                                    ) [Statements]
                                    Assignment(
                                      DesignatorStatementOptionsClassAssignExpression(
                                        Designator(
                                         dd
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                        HelperClass(
                                        ) [HelperClass]
                                        AssignOpClass(
                                          AssignOperationClass(
                                          ) [AssignOperationClass]
                                        ) [AssignOpClass]
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                NumberConst(
                                                 10
                                                ) [NumberConst]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                      ) [DesignatorStatementOptionsClassAssignExpression]
                                    ) [Assignment]
                                  ) [Statements]
                                  PrintStmt(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              HelperClass(
                                              ) [HelperClass]
                                              Designator(
                                               dd
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                    NoCommaNumberClass(
                                    ) [NoCommaNumberClass]
                                  ) [PrintStmt]
                                ) [Statements]
                                Assignment(
                                  DesignatorStatementPlusPlus(
                                    Designator(
                                     dd
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorStatementPlusPlus]
                                ) [Assignment]
                              ) [Statements]
                              PrintStmt(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        DesignatorClass(
                                          HelperClass(
                                          ) [HelperClass]
                                          Designator(
                                           dd
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                                NoCommaNumberClass(
                                ) [NoCommaNumberClass]
                              ) [PrintStmt]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementMinusMinus(
                                Designator(
                                 dd
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorStatementMinusMinus]
                            ) [Assignment]
                          ) [Statements]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    DesignatorClass(
                                      HelperClass(
                                      ) [HelperClass]
                                      Designator(
                                       dd
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                    ) [DesignatorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                             p
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            HelperClass(
                            ) [HelperClass]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    BooleanClassConstFactor(
                                     true
                                    ) [BooleanClassConstFactor]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  HelperClass(
                                  ) [HelperClass]
                                  Designator(
                                   p
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                         p
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        HelperClass(
                        ) [HelperClass]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                BooleanClassConstFactor(
                                 false
                                ) [BooleanClassConstFactor]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              HelperClass(
                              ) [HelperClass]
                              Designator(
                               p
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                     z
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    HelperClass(
                    ) [HelperClass]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            CharConst(
                             m
                            ) [CharConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              PrintStmt(
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          HelperClass(
                          ) [HelperClass]
                          Designator(
                           z
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
                NoCommaNumberClass(
                ) [NoCommaNumberClass]
              ) [PrintStmt]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                 z
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                HelperClass(
                ) [HelperClass]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        FactorOptionalParams(
                          HelperClass(
                          ) [HelperClass]
                          Designator(
                           s
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          NoActuals(
                          ) [NoActuals]
                        ) [FactorOptionalParams]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      HelperClass(
                      ) [HelperClass]
                      Designator(
                       z
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        ReturnNoExpr(
        ) [ReturnNoExpr]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:33:33,714 - ===================================
INFO  22:33:33,721 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  22:33:33,722 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  22:33:33,722 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  22:33:33,722 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  22:33:33,722 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  22:33:33,722 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  22:33:33,722 - CONST VALUE 3 IS BEING USED! ON LINE 4
INFO  22:33:33,722 - CONST VARIABLE y IS BEING DEFINED! ON LINE 4
INFO  22:33:33,722 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 7
INFO  22:33:33,722 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 7
INFO  22:33:33,722 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 7
INFO  22:33:33,723 - METHOD BODY STARTING!
INFO  22:33:33,723 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  22:33:33,723 - WE ARE USING A VARIABLE OF TYPE int ON LINE 23
INFO  22:33:33,723 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:33:33,723 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:33:33,723 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 7
INFO  22:33:33,724 - METHOD BODY ENDING!
INFO  22:33:33,724 - END OF DEFINING FUNCTION k
INFO  22:33:33,724 - FUNCTION s WITH RETURN VALUE OF TYPE char ON LINE 9
INFO  22:33:33,724 - METHOD BODY STARTING!
INFO  22:33:33,724 - CONST CHAR c ON LINE 9
INFO  22:33:33,724 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  22:33:33,724 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  22:33:33,724 - SUCCESSFUL RETURN! TYPES: char AND char ! ON LINE 9
INFO  22:33:33,725 - METHOD BODY ENDING!
INFO  22:33:33,725 - END OF DEFINING FUNCTION s
INFO  22:33:33,725 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 11
INFO  22:33:33,725 - VARIABLE x IS BEING DEFINED! ON LINE 12
INFO  22:33:33,725 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 12
INFO  22:33:33,725 - VARIABLE z IS BEING DEFINED! ON LINE 13
INFO  22:33:33,725 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 13
INFO  22:33:33,725 - VARIABLE p IS BEING DEFINED! ON LINE 14
INFO  22:33:33,725 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 14
INFO  22:33:33,726 - ARRAY VARIABLE xx IS BEING DEFINED! ON LINE 15
INFO  22:33:33,726 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 15
INFO  22:33:33,726 - VARIABLE dd IS BEING DEFINED! ON LINE 16
INFO  22:33:33,726 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 16
INFO  22:33:33,726 - METHOD BODY STARTING!
INFO  22:33:33,726 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:33:33,727 - BEGINNING OF AN ASSIGNEMENT! ON LINE 19
INFO  22:33:33,727 - CONST NUMBER 0 ON LINE 19
INFO  22:33:33,727 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:33:33,727 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:33:33,727 - CURRENT VARIABLE IN USE IS xx AND IT IS OF TYPE array
INFO  22:33:33,728 - WE ARE USING AN ARRAY OF TYPE int ON LINE 4
INFO  22:33:33,728 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:33:33,728 - CONST NUMBER 2 ON LINE 19
INFO  22:33:33,728 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:33:33,728 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:33:33,729 - CURRENT VARIABLE IN USE IS xx AND IT IS OF TYPE array
INFO  22:33:33,729 - WE ARE USING AN ARRAY OF TYPE int ON LINE 12
INFO  22:33:33,729 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  22:33:33,729 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:33:33,729 - USING INTEGERS IN TERM! ON LINE 4
INFO  22:33:33,729 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 19
INFO  22:33:33,729 - CONST NUMBER 2 ON LINE 20
INFO  22:33:33,729 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:33:33,729 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:33:33,730 - PRINT FUNCTION CALL IN USE! ON LINE 20
INFO  22:33:33,730 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:33:33,730 - BEGINNING OF AN ASSIGNEMENT! ON LINE 22
INFO  22:33:33,730 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  22:33:33,730 - CONST NUMBER 33 ON LINE 22
INFO  22:33:33,730 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:33:33,730 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:33:33,730 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  22:33:33,730 - CONST NUMBER 12 ON LINE 22
INFO  22:33:33,730 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:33:33,730 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:33:33,731 - CONST NUMBER 13 ON LINE 22
INFO  22:33:33,731 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:33:33,731 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:33:33,731 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:33:33,731 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:33:33,731 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:33:33,731 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:33:33,731 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:33:33,731 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:33:33,731 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:33:33,732 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:33:33,732 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 22
INFO  22:33:33,732 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:33:33,732 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,732 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,732 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,732 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,732 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:33:33,732 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  22:33:33,732 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  22:33:33,732 - WE ARE USING A VARIABLE OF TYPE int ON LINE 4
INFO  22:33:33,732 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:33:33,733 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:33:33,733 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  22:33:33,733 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:33:33,733 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,733 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,733 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,733 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,733 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  22:33:33,733 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,733 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,733 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,733 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,734 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:33:33,734 - BEGINNING OF AN ASSIGNEMENT! ON LINE 29
INFO  22:33:33,734 - CONST NUMBER 4 ON LINE 29
INFO  22:33:33,734 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:33:33,734 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:33:33,734 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 29
INFO  22:33:33,734 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:33:33,734 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,734 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,734 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,734 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,735 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:33:33,735 - USING ++ ON d ON LINE 31
INFO  22:33:33,735 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:33:33,735 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,735 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,735 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,735 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,735 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:33:33,735 - USING -- ON d ON LINE 33
INFO  22:33:33,735 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:33:33,735 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,736 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,736 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,736 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,736 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:33:33,736 - BEGINNING OF AN ASSIGNEMENT! ON LINE 36
INFO  22:33:33,736 - CONST NUMBER 10 ON LINE 36
INFO  22:33:33,736 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  22:33:33,736 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  22:33:33,736 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 36
INFO  22:33:33,736 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:33:33,736 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,736 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,736 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,737 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,737 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:33:33,737 - USING ++ ON dd ON LINE 38
INFO  22:33:33,737 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:33:33,737 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,737 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,737 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,737 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,737 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:33:33,737 - USING -- ON dd ON LINE 40
INFO  22:33:33,737 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:33:33,737 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:33:33,738 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,738 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,738 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,738 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  22:33:33,738 - BEGINNING OF AN ASSIGNEMENT! ON LINE 43
INFO  22:33:33,738 - CONST CHAR true ON LINE 43
INFO  22:33:33,738 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  22:33:33,738 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  22:33:33,738 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 43
INFO  22:33:33,738 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  22:33:33,738 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 7
INFO  22:33:33,738 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,739 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,739 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,739 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  22:33:33,739 - BEGINNING OF AN ASSIGNEMENT! ON LINE 45
INFO  22:33:33,739 - CONST CHAR false ON LINE 45
INFO  22:33:33,739 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  22:33:33,739 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  22:33:33,739 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 45
INFO  22:33:33,739 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  22:33:33,739 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 7
INFO  22:33:33,739 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,740 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,740 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,740 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:33:33,740 - BEGINNING OF AN ASSIGNEMENT! ON LINE 48
INFO  22:33:33,740 - CONST CHAR m ON LINE 48
INFO  22:33:33,740 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  22:33:33,740 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  22:33:33,740 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 48
INFO  22:33:33,740 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:33:33,741 - WE ARE USING A VARIABLE OF TYPE char ON LINE 7
INFO  22:33:33,741 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,741 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,741 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,741 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:33:33,741 - BEGINNING OF AN ASSIGNEMENT! ON LINE 51
INFO  22:33:33,741 - CURRENT VARIABLE IN USE IS s AND IT IS OF TYPE char
INFO  22:33:33,741 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 3
INFO  22:33:33,741 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 3
INFO  22:33:33,741 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 51
INFO  22:33:33,741 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:33:33,741 - WE ARE USING A VARIABLE OF TYPE char ON LINE 7
INFO  22:33:33,741 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,741 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:33:33,742 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:33:33,742 - return; AND THE FUNCTION IS VOID!
INFO  22:33:33,742 - METHOD BODY ENDING!
INFO  22:33:33,742 - END OF DEFINING FUNCTION main
INFO  22:33:33,742 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  22:33:33,742 -  Deklarisanih promenljivih ima = 9
INFO  22:33:33,742 - ===================================
INFO  22:33:33,750 - Parsiranje uspesno zavrseno!
