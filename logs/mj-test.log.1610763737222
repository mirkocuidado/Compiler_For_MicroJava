INFO  03:21:24,083 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  03:21:24,153 - #2 program
INFO  03:21:24,153 - #43 p
INFO  03:21:24,153 - #43 int
INFO  03:21:24,155 - #43 buffer
INFO  03:21:24,156 - #39 [
INFO  03:21:24,156 - #40 ]
INFO  03:21:24,156 - #33 ;
INFO  03:21:24,156 - #35 {
INFO  03:21:24,156 - #43 int
INFO  03:21:24,157 - #43 give_me_length_of_array
INFO  03:21:24,157 - #37 (
INFO  03:21:24,157 - #43 int
INFO  03:21:24,158 - #43 array
INFO  03:21:24,158 - #39 [
INFO  03:21:24,158 - #40 ]
INFO  03:21:24,158 - #38 )
INFO  03:21:24,158 - #35 {
INFO  03:21:24,159 - #41 return
INFO  03:21:24,160 - #43 len
INFO  03:21:24,161 - #37 (
INFO  03:21:24,173 - #43 array
INFO  03:21:24,173 - #38 )
INFO  03:21:24,175 - #33 ;
INFO  03:21:24,176 - #36 }
INFO  03:21:24,176 - #43 int
INFO  03:21:24,178 - #43 num_plus_ten
INFO  03:21:24,178 - #37 (
INFO  03:21:24,178 - #43 int
INFO  03:21:24,178 - #43 b
INFO  03:21:24,179 - #39 [
INFO  03:21:24,179 - #40 ]
INFO  03:21:24,179 - #31 ,
INFO  03:21:24,179 - #43 int
INFO  03:21:24,179 - #43 num
INFO  03:21:24,179 - #38 )
INFO  03:21:24,179 - #43 int
INFO  03:21:24,179 - #43 buf
INFO  03:21:24,179 - #39 [
INFO  03:21:24,179 - #40 ]
INFO  03:21:24,179 - #33 ;
INFO  03:21:24,179 - #35 {
INFO  03:21:24,180 - #41 return
INFO  03:21:24,180 - #43 num
INFO  03:21:24,180 - #49 +
INFO  03:21:24,180 - #42 10
INFO  03:21:24,180 - #33 ;
INFO  03:21:24,180 - #36 }
INFO  03:21:24,180 - #43 int
INFO  03:21:24,180 - #43 sum_all_elements_of_array
INFO  03:21:24,180 - #37 (
INFO  03:21:24,180 - #43 int
INFO  03:21:24,181 - #43 array
INFO  03:21:24,181 - #39 [
INFO  03:21:24,181 - #40 ]
INFO  03:21:24,181 - #38 )
INFO  03:21:24,181 - #43 int
INFO  03:21:24,181 - #43 sum
INFO  03:21:24,181 - #31 ,
INFO  03:21:24,181 - #43 i
INFO  03:21:24,181 - #33 ;
INFO  03:21:24,181 - #35 {
INFO  03:21:24,181 - #43 sum
INFO  03:21:24,181 - #19 =
INFO  03:21:24,181 - #42 0
INFO  03:21:24,183 - #33 ;
INFO  03:21:24,183 - #43 i
INFO  03:21:24,183 - #19 =
INFO  03:21:24,183 - #42 0
INFO  03:21:24,183 - #33 ;
INFO  03:21:24,183 - #12 do
INFO  03:21:24,183 - #35 {
INFO  03:21:24,184 - #43 sum
INFO  03:21:24,184 - #19 =
INFO  03:21:24,185 - #43 sum
INFO  03:21:24,185 - #49 +
INFO  03:21:24,185 - #43 array
INFO  03:21:24,185 - #39 [
INFO  03:21:24,186 - #43 i
INFO  03:21:24,187 - #40 ]
INFO  03:21:24,187 - #33 ;
INFO  03:21:24,187 - #43 i
INFO  03:21:24,187 - #28 ++
INFO  03:21:24,187 - #33 ;
INFO  03:21:24,187 - #36 }
INFO  03:21:24,187 - #13 while
INFO  03:21:24,187 - #37 (
INFO  03:21:24,188 - #43 i
INFO  03:21:24,189 - #23 <
INFO  03:21:24,189 - #43 give_me_length_of_array
INFO  03:21:24,190 - #37 (
INFO  03:21:24,190 - #43 array
INFO  03:21:24,190 - #38 )
INFO  03:21:24,190 - #38 )
INFO  03:21:24,191 - #33 ;
INFO  03:21:24,192 - #41 return
INFO  03:21:24,193 - #43 sum
INFO  03:21:24,193 - #33 ;
INFO  03:21:24,193 - #36 }
INFO  03:21:24,193 - #5 void
INFO  03:21:24,193 - #43 main
INFO  03:21:24,193 - #37 (
INFO  03:21:24,193 - #38 )
INFO  03:21:24,194 - #43 int
INFO  03:21:24,194 - #43 index
INFO  03:21:24,194 - #33 ;
INFO  03:21:24,194 - #43 int
INFO  03:21:24,194 - #43 sum
INFO  03:21:24,194 - #33 ;
INFO  03:21:24,194 - #43 int
INFO  03:21:24,194 - #43 buffer_Fake
INFO  03:21:24,194 - #39 [
INFO  03:21:24,194 - #40 ]
INFO  03:21:24,194 - #33 ;
INFO  03:21:24,194 - #43 int
INFO  03:21:24,194 - #43 aaa
INFO  03:21:24,194 - #39 [
INFO  03:21:24,194 - #40 ]
INFO  03:21:24,194 - #33 ;
INFO  03:21:24,195 - #35 {
INFO  03:21:24,195 - #43 buffer
INFO  03:21:24,195 - #19 =
INFO  03:21:24,195 - #16 new
INFO  03:21:24,195 - #43 int
INFO  03:21:24,195 - #39 [
INFO  03:21:24,195 - #42 10
INFO  03:21:24,195 - #40 ]
INFO  03:21:24,195 - #33 ;
INFO  03:21:24,195 - #43 buffer
INFO  03:21:24,195 - #39 [
INFO  03:21:24,195 - #42 0
INFO  03:21:24,195 - #40 ]
INFO  03:21:24,196 - #19 =
INFO  03:21:24,196 - #42 1
INFO  03:21:24,196 - #33 ;
INFO  03:21:24,196 - #43 aaa
INFO  03:21:24,196 - #19 =
INFO  03:21:24,196 - #43 buffer
INFO  03:21:24,196 - #33 ;
INFO  03:21:24,196 - #18 print
INFO  03:21:24,196 - #37 (
INFO  03:21:24,196 - #43 aaa
INFO  03:21:24,196 - #39 [
INFO  03:21:24,196 - #42 0
INFO  03:21:24,196 - #40 ]
INFO  03:21:24,197 - #38 )
INFO  03:21:24,197 - #33 ;
INFO  03:21:24,197 - #43 index
INFO  03:21:24,197 - #19 =
INFO  03:21:24,198 - #42 0
INFO  03:21:24,198 - #33 ;
INFO  03:21:24,198 - #12 do
INFO  03:21:24,198 - #35 {
INFO  03:21:24,198 - #43 buffer
INFO  03:21:24,198 - #39 [
INFO  03:21:24,198 - #43 index
INFO  03:21:24,198 - #40 ]
INFO  03:21:24,198 - #19 =
INFO  03:21:24,198 - #43 num_plus_ten
INFO  03:21:24,198 - #37 (
INFO  03:21:24,198 - #43 buffer
INFO  03:21:24,198 - #31 ,
INFO  03:21:24,198 - #43 index
INFO  03:21:24,198 - #38 )
INFO  03:21:24,198 - #33 ;
INFO  03:21:24,199 - #43 index
INFO  03:21:24,199 - #28 ++
INFO  03:21:24,199 - #33 ;
INFO  03:21:24,199 - #36 }
INFO  03:21:24,199 - #13 while
INFO  03:21:24,200 - #37 (
INFO  03:21:24,200 - #43 index
INFO  03:21:24,200 - #23 <
INFO  03:21:24,200 - #43 give_me_length_of_array
INFO  03:21:24,200 - #37 (
INFO  03:21:24,200 - #43 buffer
INFO  03:21:24,200 - #38 )
INFO  03:21:24,200 - #38 )
INFO  03:21:24,200 - #33 ;
INFO  03:21:24,200 - #43 sum
INFO  03:21:24,200 - #19 =
INFO  03:21:24,200 - #43 sum_all_elements_of_array
INFO  03:21:24,200 - #37 (
INFO  03:21:24,200 - #43 buffer
INFO  03:21:24,200 - #38 )
INFO  03:21:24,200 - #33 ;
INFO  03:21:24,200 - #18 print
INFO  03:21:24,200 - #37 (
INFO  03:21:24,200 - #43 sum
INFO  03:21:24,200 - #38 )
INFO  03:21:24,201 - #33 ;
INFO  03:21:24,201 - #41 return
INFO  03:21:24,201 - #33 ;
INFO  03:21:24,201 - #36 }
INFO  03:21:24,201 - #36 }
INFO  03:21:24,211 - Program(
  ProgramName(
   p
  ) [ProgramName]
  GroupDeclarations(
    NoGroupDecl(
    ) [NoGroupDecl]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListSingle(
          VarClassArray(
           buffer
          ) [VarClassArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            ReturnValueClassNoVoid(
              Type(
               int
              ) [Type]
             give_me_length_of_array
            ) [ReturnValueClassNoVoid]
            FormParams(
              SingleFormalParamDecl(
                FormalParamDeclClassArray(
                  Type(
                   int
                  ) [Type]
                 array
                ) [FormalParamDeclClassArray]
              ) [SingleFormalParamDecl]
            ) [FormParams]
            NoVarDeclList(
            ) [NoVarDeclList]
            LBraceClass(
            ) [LBraceClass]
            Statements(
              NoStmt(
              ) [NoStmt]
              ReturnExpr(
                ReturnNonTerminalClass(
                ) [ReturnNonTerminalClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        FactorOptionalParams(
                          Designator(
                            DesigIdent(
                             len
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          Actuals(
                            ActualParam(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           array
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [ActualParam]
                          ) [Actuals]
                        ) [FactorOptionalParams]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [ReturnExpr]
            ) [Statements]
            RBraceClass(
            ) [RBraceClass]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
           num_plus_ten
          ) [ReturnValueClassNoVoid]
          FormParams(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclClassArray(
                  Type(
                   int
                  ) [Type]
                 b
                ) [FormalParamDeclClassArray]
              ) [SingleFormalParamDecl]
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               num
              ) [FormalParamDeclClassNoArray]
            ) [FormalParamDecls]
          ) [FormParams]
          VarDeclListClass(
            NoVarDeclList(
            ) [NoVarDeclList]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassArray(
                 buf
                ) [VarClassArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          LBraceClass(
          ) [LBraceClass]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              ReturnNonTerminalClass(
              ) [ReturnNonTerminalClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           num
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    ExprOptionalListClass(
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                      PlusOperation(
                       +
                      ) [PlusOperation]
                      TermClass(
                        NumberConst(
                         10
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                    ) [ExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [ReturnExpr]
          ) [Statements]
          RBraceClass(
          ) [RBraceClass]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         sum_all_elements_of_array
        ) [ReturnValueClassNoVoid]
        FormParams(
          SingleFormalParamDecl(
            FormalParamDeclClassArray(
              Type(
               int
              ) [Type]
             array
            ) [FormalParamDeclClassArray]
          ) [SingleFormalParamDecl]
        ) [FormParams]
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListSingle(
                VarClassNoArray(
                 sum
                ) [VarClassNoArray]
              ) [VarListSingle]
              VarClassNoArray(
               i
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       sum
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             0
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     i
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           0
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            DoWhileStatement(
              DoClass(
              ) [DoClass]
              StatementStatement(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           sum
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     sum
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              ExprOptionalListClass(
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                                PlusOperation(
                                 +
                                ) [PlusOperation]
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       array
                                      ) [DesigIdent]
                                      OptionalDesignatorArray(
                                        HelperClass(
                                        ) [HelperClass]
                                        LSquareClass(
                                        ) [LSquareClass]
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                DesignatorClass(
                                                  Designator(
                                                    DesigIdent(
                                                     i
                                                    ) [DesigIdent]
                                                    NoOptionalDesignatorClass(
                                                    ) [NoOptionalDesignatorClass]
                                                  ) [Designator]
                                                ) [DesignatorClass]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                      ) [OptionalDesignatorArray]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                              ) [ExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementPlusPlus(
                      Designator(
                        DesigIdent(
                         i
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorStatementPlusPlus]
                  ) [Assignment]
                ) [Statements]
              ) [StatementStatement]
              LParenClass(
              ) [LParenClass]
              ConditionClass(
                CondTermClass(
                  CondFactClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               i
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                    CondFactOptionalClass(
                      LessOperationClass(
                      ) [LessOperationClass]
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            FactorOptionalParams(
                              Designator(
                                DesigIdent(
                                 give_me_length_of_array
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              Actuals(
                                ActualParam(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               array
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [ActualParam]
                              ) [Actuals]
                            ) [FactorOptionalParams]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [CondFactOptionalClass]
                  ) [CondFactClass]
                  NoCondTermOptionalClass(
                  ) [NoCondTermOptionalClass]
                ) [CondTermClass]
                NoConditionOptionalClass(
                ) [NoConditionOptionalClass]
              ) [ConditionClass]
              RParenClass(
              ) [RParenClass]
            ) [DoWhileStatement]
          ) [Statements]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         sum
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              NoVarDeclList(
              ) [NoVarDeclList]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   index
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 sum
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassArray(
               buffer_Fake
              ) [VarClassArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             aaa
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               buffer
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NewFactorClass(
                                      Type(
                                       int
                                      ) [Type]
                                      FactorOptionalSecondClass(
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                NumberConst(
                                                 10
                                                ) [NumberConst]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                      ) [FactorOptionalSecondClass]
                                    ) [NewFactorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      Assignment(
                        DesignatorStatementOptionsClassAssignExpression(
                          Designator(
                            DesigIdent(
                             buffer
                            ) [DesigIdent]
                            OptionalDesignatorArray(
                              HelperClass(
                              ) [HelperClass]
                              LSquareClass(
                              ) [LSquareClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [OptionalDesignatorArray]
                          ) [Designator]
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   1
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [Assignment]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           aaa
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     buffer
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 aaa
                                ) [DesigIdent]
                                OptionalDesignatorArray(
                                  HelperClass(
                                  ) [HelperClass]
                                  LSquareClass(
                                  ) [LSquareClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           0
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [OptionalDesignatorArray]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       index
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             0
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              DoWhileStatement(
                DoClass(
                ) [DoClass]
                StatementStatement(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      Assignment(
                        DesignatorStatementOptionsClassAssignExpression(
                          Designator(
                            DesigIdent(
                             buffer
                            ) [DesigIdent]
                            OptionalDesignatorArray(
                              HelperClass(
                              ) [HelperClass]
                              LSquareClass(
                              ) [LSquareClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           index
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [OptionalDesignatorArray]
                          ) [Designator]
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  FactorOptionalParams(
                                    Designator(
                                      DesigIdent(
                                       num_plus_ten
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    Actuals(
                                      ActualParams(
                                        ActualParam(
                                          ClassOneClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  DesignatorClass(
                                                    Designator(
                                                      DesigIdent(
                                                       buffer
                                                      ) [DesigIdent]
                                                      NoOptionalDesignatorClass(
                                                      ) [NoOptionalDesignatorClass]
                                                    ) [Designator]
                                                  ) [DesignatorClass]
                                                  NoTermOptionalListClass(
                                                  ) [NoTermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                          ) [ClassOneClass]
                                        ) [ActualParam]
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                DesignatorClass(
                                                  Designator(
                                                    DesigIdent(
                                                     index
                                                    ) [DesigIdent]
                                                    NoOptionalDesignatorClass(
                                                    ) [NoOptionalDesignatorClass]
                                                  ) [Designator]
                                                ) [DesignatorClass]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                      ) [ActualParams]
                                    ) [Actuals]
                                  ) [FactorOptionalParams]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [Assignment]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementPlusPlus(
                        Designator(
                          DesigIdent(
                           index
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorStatementPlusPlus]
                    ) [Assignment]
                  ) [Statements]
                ) [StatementStatement]
                LParenClass(
                ) [LParenClass]
                ConditionClass(
                  CondTermClass(
                    CondFactClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 index
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                      CondFactOptionalClass(
                        LessOperationClass(
                        ) [LessOperationClass]
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              FactorOptionalParams(
                                Designator(
                                  DesigIdent(
                                   give_me_length_of_array
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                Actuals(
                                  ActualParam(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 buffer
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [ActualParam]
                                ) [Actuals]
                              ) [FactorOptionalParams]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [CondFactOptionalClass]
                    ) [CondFactClass]
                    NoCondTermOptionalClass(
                    ) [NoCondTermOptionalClass]
                  ) [CondTermClass]
                  NoConditionOptionalClass(
                  ) [NoConditionOptionalClass]
                ) [ConditionClass]
                RParenClass(
                ) [RParenClass]
              ) [DoWhileStatement]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                  DesigIdent(
                   sum
                  ) [DesigIdent]
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        FactorOptionalParams(
                          Designator(
                            DesigIdent(
                             sum_all_elements_of_array
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          Actuals(
                            ActualParam(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           buffer
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [ActualParam]
                          ) [Actuals]
                        ) [FactorOptionalParams]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         sum
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        ReturnNoExpr(
        ) [ReturnNoExpr]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:21:24,213 - ===================================
INFO  03:21:24,216 - PROGRAM NAME DETECTED => p ON LINE 1
INFO  03:21:24,216 - ARRAY VARIABLE buffer IS BEING DEFINED! ON LINE 3
INFO  03:21:24,216 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 3
INFO  03:21:24,216 - FUNCTION give_me_length_of_array WITH RETURN VALUE OF TYPE int ON LINE 7
INFO  03:21:24,217 - FORMAL ARRAY PARAMETER array DEFINED AND IT IS OF TYPE int ON LINE 7
INFO  03:21:24,217 - METHOD BODY STARTING!
INFO  03:21:24,217 - CURRENT VARIABLE IN USE IS len AND IT IS OF TYPE int
INFO  03:21:24,217 - CURRENT VARIABLE IN USE IS array AND IT IS OF TYPE array
INFO  03:21:24,217 - WE ARE USING A VARIABLE OF TYPE array ON LINE 9
INFO  03:21:24,217 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  03:21:24,217 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  03:21:24,217 - TYPE -> array <- AND -> array <- ON LINE 9
INFO  03:21:24,217 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  03:21:24,217 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  03:21:24,217 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 9
INFO  03:21:24,217 - METHOD BODY ENDING!
INFO  03:21:24,217 - END OF DEFINING FUNCTION give_me_length_of_array
INFO  03:21:24,217 - FUNCTION num_plus_ten WITH RETURN VALUE OF TYPE int ON LINE 12
INFO  03:21:24,217 - FORMAL ARRAY PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 12
INFO  03:21:24,217 - FORMAL PARAMETER num DEFINED AND IT IS OF TYPE int ON LINE 12
INFO  03:21:24,218 - ARRAY VARIABLE buf IS BEING DEFINED! ON LINE 13
INFO  03:21:24,218 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 13
INFO  03:21:24,218 - METHOD BODY STARTING!
INFO  03:21:24,218 - CURRENT VARIABLE IN USE IS num AND IT IS OF TYPE int
INFO  03:21:24,218 - WE ARE USING A VARIABLE OF TYPE int ON LINE 18
INFO  03:21:24,218 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  03:21:24,218 - CONST NUMBER 10 ON LINE 18
INFO  03:21:24,218 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  03:21:24,218 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  03:21:24,218 - USING INTEGERS IN TERM! ON LINE 18
INFO  03:21:24,218 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 18
INFO  03:21:24,218 - METHOD BODY ENDING!
INFO  03:21:24,218 - END OF DEFINING FUNCTION num_plus_ten
INFO  03:21:24,218 - FUNCTION sum_all_elements_of_array WITH RETURN VALUE OF TYPE int ON LINE 21
INFO  03:21:24,218 - FORMAL ARRAY PARAMETER array DEFINED AND IT IS OF TYPE int ON LINE 21
INFO  03:21:24,218 - VARIABLE sum IS BEING DEFINED! ON LINE 22
INFO  03:21:24,218 - VARIABLE i IS BEING DEFINED! ON LINE 22
INFO  03:21:24,218 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 22
INFO  03:21:24,218 - METHOD BODY STARTING!
INFO  03:21:24,218 - CURRENT VARIABLE IN USE IS sum AND IT IS OF TYPE int
INFO  03:21:24,218 - BEGINNING OF AN ASSIGNEMENT! ON LINE 24
INFO  03:21:24,219 - CONST NUMBER 0 ON LINE 24
INFO  03:21:24,219 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 24
INFO  03:21:24,219 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 24
INFO  03:21:24,219 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 24
INFO  03:21:24,219 - CURRENT VARIABLE IN USE IS i AND IT IS OF TYPE int
INFO  03:21:24,219 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  03:21:24,219 - CONST NUMBER 0 ON LINE 25
INFO  03:21:24,219 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  03:21:24,219 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  03:21:24,219 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  03:21:24,219 - BEGINNING OF A DO...WHILE LOOP!
INFO  03:21:24,219 - CURRENT VARIABLE IN USE IS sum AND IT IS OF TYPE int
INFO  03:21:24,219 - BEGINNING OF AN ASSIGNEMENT! ON LINE 27
INFO  03:21:24,219 - CURRENT VARIABLE IN USE IS sum AND IT IS OF TYPE int
INFO  03:21:24,219 - WE ARE USING A VARIABLE OF TYPE int ON LINE 27
INFO  03:21:24,219 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:21:24,220 - CURRENT VARIABLE IN USE IS i AND IT IS OF TYPE int
INFO  03:21:24,220 - WE ARE USING A VARIABLE OF TYPE int ON LINE 27
INFO  03:21:24,220 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:21:24,220 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:21:24,220 - CURRENT VARIABLE IN USE IS array AND IT IS OF TYPE array
INFO  03:21:24,220 - WE ARE USING AN ARRAY OF TYPE int ON LINE 27
INFO  03:21:24,220 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:21:24,220 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  03:21:24,220 - USING INTEGERS IN TERM! ON LINE 27
INFO  03:21:24,220 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 27
INFO  03:21:24,220 - CURRENT VARIABLE IN USE IS i AND IT IS OF TYPE int
INFO  03:21:24,220 - USING ++ ON i ON LINE 28
INFO  03:21:24,220 - CURRENT VARIABLE IN USE IS i AND IT IS OF TYPE int
INFO  03:21:24,220 - WE ARE USING A VARIABLE OF TYPE int ON LINE 30
INFO  03:21:24,220 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:21:24,220 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:21:24,220 - CURRENT VARIABLE IN USE IS give_me_length_of_array AND IT IS OF TYPE int
INFO  03:21:24,221 - CURRENT VARIABLE IN USE IS array AND IT IS OF TYPE array
INFO  03:21:24,221 - WE ARE USING A VARIABLE OF TYPE array ON LINE 30
INFO  03:21:24,221 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:21:24,221 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:21:24,221 - TYPE -> array <- AND -> array <- ON LINE 30
INFO  03:21:24,221 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:21:24,221 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:21:24,221 - USING TWO EXPRESSIONS OF TYPE int ON LINE 30
INFO  03:21:24,221 - ENDING OF A DO...WHILE LOOP! ON LINE 26
INFO  03:21:24,221 - CURRENT VARIABLE IN USE IS sum AND IT IS OF TYPE int
INFO  03:21:24,221 - WE ARE USING A VARIABLE OF TYPE int ON LINE 32
INFO  03:21:24,221 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  03:21:24,221 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  03:21:24,221 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 32
INFO  03:21:24,221 - METHOD BODY ENDING!
INFO  03:21:24,221 - END OF DEFINING FUNCTION sum_all_elements_of_array
INFO  03:21:24,221 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 36
INFO  03:21:24,221 - VARIABLE index IS BEING DEFINED! ON LINE 37
INFO  03:21:24,222 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 37
INFO  03:21:24,222 - VARIABLE sum IS BEING DEFINED! ON LINE 38
INFO  03:21:24,222 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 38
INFO  03:21:24,222 - ARRAY VARIABLE buffer_Fake IS BEING DEFINED! ON LINE 39
INFO  03:21:24,222 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 39
INFO  03:21:24,222 - ARRAY VARIABLE aaa IS BEING DEFINED! ON LINE 40
INFO  03:21:24,222 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 40
INFO  03:21:24,222 - METHOD BODY STARTING!
INFO  03:21:24,222 - CURRENT VARIABLE IN USE IS buffer AND IT IS OF TYPE array
INFO  03:21:24,222 - BEGINNING OF AN ASSIGNEMENT! ON LINE 43
INFO  03:21:24,222 - CONST NUMBER 10 ON LINE 43
INFO  03:21:24,222 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  03:21:24,222 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  03:21:24,222 - USAGE OF KEYWORD NEW! ON LINE 43
INFO  03:21:24,222 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  03:21:24,222 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  03:21:24,222 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 43
INFO  03:21:24,222 - CONST NUMBER 0 ON LINE 44
INFO  03:21:24,222 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 44
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 44
INFO  03:21:24,223 - CURRENT VARIABLE IN USE IS buffer AND IT IS OF TYPE array
INFO  03:21:24,223 - BEGINNING OF AN ASSIGNEMENT! ON LINE 44
INFO  03:21:24,223 - CONST NUMBER 1 ON LINE 44
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 44
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 44
INFO  03:21:24,223 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 44
INFO  03:21:24,223 - CURRENT VARIABLE IN USE IS aaa AND IT IS OF TYPE array
INFO  03:21:24,223 - BEGINNING OF AN ASSIGNEMENT! ON LINE 46
INFO  03:21:24,223 - CURRENT VARIABLE IN USE IS buffer AND IT IS OF TYPE array
INFO  03:21:24,223 - WE ARE USING A VARIABLE OF TYPE array ON LINE 46
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  03:21:24,223 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 46
INFO  03:21:24,223 - CONST NUMBER 0 ON LINE 48
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:21:24,223 - CURRENT VARIABLE IN USE IS aaa AND IT IS OF TYPE array
INFO  03:21:24,223 - WE ARE USING AN ARRAY OF TYPE int ON LINE 48
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:21:24,223 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:21:24,224 - PRINT FUNCTION CALL IN USE! ON LINE 48
INFO  03:21:24,224 - CURRENT VARIABLE IN USE IS index AND IT IS OF TYPE int
INFO  03:21:24,224 - BEGINNING OF AN ASSIGNEMENT! ON LINE 50
INFO  03:21:24,224 - CONST NUMBER 0 ON LINE 50
INFO  03:21:24,224 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:21:24,224 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:21:24,224 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 50
INFO  03:21:24,224 - BEGINNING OF A DO...WHILE LOOP!
INFO  03:21:24,224 - CURRENT VARIABLE IN USE IS index AND IT IS OF TYPE int
INFO  03:21:24,224 - WE ARE USING A VARIABLE OF TYPE int ON LINE 52
INFO  03:21:24,224 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  03:21:24,224 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  03:21:24,224 - CURRENT VARIABLE IN USE IS buffer AND IT IS OF TYPE array
INFO  03:21:24,224 - BEGINNING OF AN ASSIGNEMENT! ON LINE 52
INFO  03:21:24,224 - CURRENT VARIABLE IN USE IS num_plus_ten AND IT IS OF TYPE int
INFO  03:21:24,224 - CURRENT VARIABLE IN USE IS buffer AND IT IS OF TYPE array
INFO  03:21:24,224 - WE ARE USING A VARIABLE OF TYPE array ON LINE 52
INFO  03:21:24,224 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  03:21:24,224 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  03:21:24,224 - CURRENT VARIABLE IN USE IS index AND IT IS OF TYPE int
INFO  03:21:24,224 - WE ARE USING A VARIABLE OF TYPE int ON LINE 52
INFO  03:21:24,224 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  03:21:24,224 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  03:21:24,225 - TYPE -> array <- AND -> array <- ON LINE 52
INFO  03:21:24,225 - TYPE -> int <- AND -> int <- ON LINE 52
INFO  03:21:24,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  03:21:24,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  03:21:24,225 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 52
INFO  03:21:24,225 - CURRENT VARIABLE IN USE IS index AND IT IS OF TYPE int
INFO  03:21:24,225 - USING ++ ON index ON LINE 53
INFO  03:21:24,225 - CURRENT VARIABLE IN USE IS index AND IT IS OF TYPE int
INFO  03:21:24,225 - WE ARE USING A VARIABLE OF TYPE int ON LINE 55
INFO  03:21:24,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  03:21:24,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  03:21:24,225 - CURRENT VARIABLE IN USE IS give_me_length_of_array AND IT IS OF TYPE int
INFO  03:21:24,225 - CURRENT VARIABLE IN USE IS buffer AND IT IS OF TYPE array
INFO  03:21:24,225 - WE ARE USING A VARIABLE OF TYPE array ON LINE 55
INFO  03:21:24,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  03:21:24,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  03:21:24,225 - TYPE -> array <- AND -> array <- ON LINE 55
INFO  03:21:24,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  03:21:24,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  03:21:24,225 - USING TWO EXPRESSIONS OF TYPE int ON LINE 55
INFO  03:21:24,225 - ENDING OF A DO...WHILE LOOP! ON LINE 51
INFO  03:21:24,226 - CURRENT VARIABLE IN USE IS sum AND IT IS OF TYPE int
INFO  03:21:24,226 - BEGINNING OF AN ASSIGNEMENT! ON LINE 57
INFO  03:21:24,226 - CURRENT VARIABLE IN USE IS sum_all_elements_of_array AND IT IS OF TYPE int
INFO  03:21:24,226 - CURRENT VARIABLE IN USE IS buffer AND IT IS OF TYPE array
INFO  03:21:24,226 - WE ARE USING A VARIABLE OF TYPE array ON LINE 57
INFO  03:21:24,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 57
INFO  03:21:24,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 57
INFO  03:21:24,226 - TYPE -> array <- AND -> array <- ON LINE 57
INFO  03:21:24,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 57
INFO  03:21:24,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 57
INFO  03:21:24,226 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 57
INFO  03:21:24,226 - CURRENT VARIABLE IN USE IS sum AND IT IS OF TYPE int
INFO  03:21:24,226 - WE ARE USING A VARIABLE OF TYPE int ON LINE 59
INFO  03:21:24,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  03:21:24,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 59
INFO  03:21:24,226 - PRINT FUNCTION CALL IN USE! ON LINE 59
INFO  03:21:24,226 - return; AND THE FUNCTION IS VOID!
INFO  03:21:24,226 - METHOD BODY ENDING!
INFO  03:21:24,226 - END OF DEFINING FUNCTION main
INFO  03:21:24,226 - PROGRAM ENDED => p ON LINE 1
INFO  03:21:24,226 -  Deklarisanih promenljivih ima = 8
INFO  03:21:24,226 - ===================================
INFO  03:21:24,235 - Parsiranje uspesno zavrseno!
