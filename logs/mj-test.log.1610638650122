INFO  16:36:55,535 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  16:36:55,603 - #2 program
INFO  16:36:55,604 - #43 test301
INFO  16:36:55,604 - #9 const
INFO  16:36:55,605 - #43 int
INFO  16:36:55,605 - #43 nula
INFO  16:36:55,606 - #19 =
INFO  16:36:55,606 - #42 0
INFO  16:36:55,606 - #33 ;
INFO  16:36:55,607 - #9 const
INFO  16:36:55,607 - #43 int
INFO  16:36:55,607 - #43 jedan
INFO  16:36:55,607 - #19 =
INFO  16:36:55,607 - #42 1
INFO  16:36:55,607 - #33 ;
INFO  16:36:55,608 - #9 const
INFO  16:36:55,608 - #43 int
INFO  16:36:55,608 - #43 pet
INFO  16:36:55,608 - #19 =
INFO  16:36:55,608 - #42 5
INFO  16:36:55,608 - #33 ;
INFO  16:36:55,608 - #43 int
INFO  16:36:55,616 - #43 niz
INFO  16:36:55,616 - #39 [
INFO  16:36:55,616 - #40 ]
INFO  16:36:55,616 - #33 ;
INFO  16:36:55,616 - #43 char
INFO  16:36:55,617 - #43 nizch
INFO  16:36:55,617 - #39 [
INFO  16:36:55,617 - #40 ]
INFO  16:36:55,617 - #33 ;
INFO  16:36:55,617 - #35 {
INFO  16:36:55,617 - #5 void
INFO  16:36:55,618 - #43 main
INFO  16:36:55,618 - #37 (
INFO  16:36:55,618 - #38 )
INFO  16:36:55,619 - #43 int
INFO  16:36:55,620 - #43 bodovi
INFO  16:36:55,620 - #33 ;
INFO  16:36:55,620 - #43 bool
INFO  16:36:55,620 - #43 bt
INFO  16:36:55,620 - #33 ;
INFO  16:36:55,620 - #35 {
INFO  16:36:55,620 - #43 bodovi
INFO  16:36:55,622 - #19 =
INFO  16:36:55,624 - #42 0
INFO  16:36:55,625 - #33 ;
INFO  16:36:55,626 - #43 bodovi
INFO  16:36:55,627 - #28 ++
INFO  16:36:55,627 - #33 ;
INFO  16:36:55,627 - #43 bodovi
INFO  16:36:55,627 - #19 =
INFO  16:36:55,627 - #43 bodovi
INFO  16:36:55,627 - #49 +
INFO  16:36:55,627 - #43 jedan
INFO  16:36:55,627 - #33 ;
INFO  16:36:55,628 - #43 bodovi
INFO  16:36:55,628 - #19 =
INFO  16:36:55,628 - #43 bodovi
INFO  16:36:55,628 - #46 *
INFO  16:36:55,628 - #43 pet
INFO  16:36:55,628 - #33 ;
INFO  16:36:55,628 - #43 bodovi
INFO  16:36:55,628 - #29 --
INFO  16:36:55,628 - #33 ;
INFO  16:36:55,628 - #18 print
INFO  16:36:55,629 - #37 (
INFO  16:36:55,629 - #43 bodovi
INFO  16:36:55,629 - #38 )
INFO  16:36:55,629 - #33 ;
INFO  16:36:55,629 - #43 niz
INFO  16:36:55,630 - #19 =
INFO  16:36:55,630 - #16 new
INFO  16:36:55,630 - #43 int
INFO  16:36:55,630 - #39 [
INFO  16:36:55,630 - #42 3
INFO  16:36:55,630 - #40 ]
INFO  16:36:55,630 - #33 ;
INFO  16:36:55,630 - #43 niz
INFO  16:36:55,631 - #39 [
INFO  16:36:55,632 - #43 nula
INFO  16:36:55,633 - #40 ]
INFO  16:36:55,633 - #19 =
INFO  16:36:55,633 - #43 jedan
INFO  16:36:55,633 - #33 ;
INFO  16:36:55,634 - #43 niz
INFO  16:36:55,634 - #39 [
INFO  16:36:55,634 - #42 1
INFO  16:36:55,634 - #40 ]
INFO  16:36:55,634 - #19 =
INFO  16:36:55,634 - #42 2
INFO  16:36:55,634 - #33 ;
INFO  16:36:55,634 - #43 niz
INFO  16:36:55,634 - #39 [
INFO  16:36:55,634 - #43 niz
INFO  16:36:55,634 - #39 [
INFO  16:36:55,634 - #43 jedan
INFO  16:36:55,634 - #40 ]
INFO  16:36:55,634 - #40 ]
INFO  16:36:55,634 - #19 =
INFO  16:36:55,635 - #43 niz
INFO  16:36:55,635 - #39 [
INFO  16:36:55,635 - #43 niz
INFO  16:36:55,635 - #39 [
INFO  16:36:55,635 - #42 0
INFO  16:36:55,635 - #40 ]
INFO  16:36:55,635 - #40 ]
INFO  16:36:55,635 - #46 *
INFO  16:36:55,635 - #42 3
INFO  16:36:55,636 - #33 ;
INFO  16:36:55,636 - #43 bodovi
INFO  16:36:55,636 - #19 =
INFO  16:36:55,636 - #43 niz
INFO  16:36:55,636 - #39 [
INFO  16:36:55,636 - #42 2
INFO  16:36:55,636 - #40 ]
INFO  16:36:55,636 - #47 /
INFO  16:36:55,636 - #43 niz
INFO  16:36:55,636 - #39 [
INFO  16:36:55,637 - #42 0
INFO  16:36:55,637 - #40 ]
INFO  16:36:55,637 - #33 ;
INFO  16:36:55,637 - #18 print
INFO  16:36:55,637 - #37 (
INFO  16:36:55,637 - #43 bodovi
INFO  16:36:55,637 - #38 )
INFO  16:36:55,637 - #33 ;
INFO  16:36:55,637 - #18 print
INFO  16:36:55,637 - #37 (
INFO  16:36:55,637 - #43 niz
INFO  16:36:55,637 - #39 [
INFO  16:36:55,637 - #42 2
INFO  16:36:55,638 - #40 ]
INFO  16:36:55,638 - #38 )
INFO  16:36:55,638 - #33 ;
INFO  16:36:55,638 - #43 nizch
INFO  16:36:55,638 - #19 =
INFO  16:36:55,638 - #16 new
INFO  16:36:55,638 - #43 char
INFO  16:36:55,638 - #39 [
INFO  16:36:55,638 - #42 3
INFO  16:36:55,638 - #40 ]
INFO  16:36:55,638 - #33 ;
INFO  16:36:55,638 - #43 nizch
INFO  16:36:55,638 - #39 [
INFO  16:36:55,639 - #42 0
INFO  16:36:55,639 - #40 ]
INFO  16:36:55,639 - #19 =
INFO  16:36:55,639 - #44 a
INFO  16:36:55,639 - #33 ;
INFO  16:36:55,639 - #43 nizch
INFO  16:36:55,639 - #39 [
INFO  16:36:55,639 - #43 jedan
INFO  16:36:55,639 - #40 ]
INFO  16:36:55,639 - #19 =
INFO  16:36:55,639 - #44 b
INFO  16:36:55,640 - #33 ;
INFO  16:36:55,640 - #43 nizch
INFO  16:36:55,640 - #39 [
INFO  16:36:55,640 - #43 pet
INFO  16:36:55,640 - #50 -
INFO  16:36:55,640 - #42 3
INFO  16:36:55,640 - #40 ]
INFO  16:36:55,640 - #19 =
INFO  16:36:55,640 - #44 c
INFO  16:36:55,640 - #33 ;
INFO  16:36:55,640 - #18 print
INFO  16:36:55,640 - #37 (
INFO  16:36:55,640 - #43 nizch
INFO  16:36:55,640 - #39 [
INFO  16:36:55,640 - #42 1
INFO  16:36:55,641 - #40 ]
INFO  16:36:55,641 - #38 )
INFO  16:36:55,641 - #33 ;
INFO  16:36:55,641 - #18 print
INFO  16:36:55,641 - #37 (
INFO  16:36:55,642 - #43 nizch
INFO  16:36:55,642 - #39 [
INFO  16:36:55,642 - #43 jedan
INFO  16:36:55,642 - #46 *
INFO  16:36:55,642 - #42 2
INFO  16:36:55,642 - #40 ]
INFO  16:36:55,642 - #38 )
INFO  16:36:55,642 - #33 ;
INFO  16:36:55,642 - #36 }
INFO  16:36:55,642 - #36 }
INFO  16:36:55,655 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            NoGroupDecl(
            ) [NoGroupDecl]
            GroupDeclarationsConsts(
              ConstDeclClass(
                Type(
                 int
                ) [Type]
                ConstListSingle(
                  ConstListNoArray(
                   nula
                    ValuesNumber(
                     0
                    ) [ValuesNumber]
                  ) [ConstListNoArray]
                ) [ConstListSingle]
              ) [ConstDeclClass]
            ) [GroupDeclarationsConsts]
          ) [GroupDeclarations]
          GroupDeclarationsConsts(
            ConstDeclClass(
              Type(
               int
              ) [Type]
              ConstListSingle(
                ConstListNoArray(
                 jedan
                  ValuesNumber(
                   1
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListSingle]
            ) [ConstDeclClass]
          ) [GroupDeclarationsConsts]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListSingle(
              ConstListNoArray(
               pet
                ValuesNumber(
                 5
                ) [ValuesNumber]
              ) [ConstListNoArray]
            ) [ConstListSingle]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             niz
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         char
        ) [Type]
        VarListSingle(
          VarClassArray(
           nizch
          ) [VarClassArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               bodovi
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             bt
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            NoStmt(
                                            ) [NoStmt]
                                            Assignment(
                                              DesignatorStatementOptionsClassAssignExpression(
                                                Designator(
                                                  DesigIdent(
                                                   bodovi
                                                  ) [DesigIdent]
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                                AssignOpClass(
                                                  AssignOperationClass(
                                                  ) [AssignOperationClass]
                                                ) [AssignOpClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         0
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [DesignatorStatementOptionsClassAssignExpression]
                                            ) [Assignment]
                                          ) [Statements]
                                          Assignment(
                                            DesignatorStatementPlusPlus(
                                              Designator(
                                                DesigIdent(
                                                 bodovi
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorStatementPlusPlus]
                                          ) [Assignment]
                                        ) [Statements]
                                        Assignment(
                                          DesignatorStatementOptionsClassAssignExpression(
                                            Designator(
                                              DesigIdent(
                                               bodovi
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                            AssignOpClass(
                                              AssignOperationClass(
                                              ) [AssignOperationClass]
                                            ) [AssignOpClass]
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      Designator(
                                                        DesigIdent(
                                                         bodovi
                                                        ) [DesigIdent]
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  ExprOptionalListClass(
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                    PlusOperation(
                                                     +
                                                    ) [PlusOperation]
                                                    TermClass(
                                                      DesignatorClass(
                                                        Designator(
                                                          DesigIdent(
                                                           jedan
                                                          ) [DesigIdent]
                                                          NoOptionalDesignatorClass(
                                                          ) [NoOptionalDesignatorClass]
                                                        ) [Designator]
                                                      ) [DesignatorClass]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                  ) [ExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                          ) [DesignatorStatementOptionsClassAssignExpression]
                                        ) [Assignment]
                                      ) [Statements]
                                      Assignment(
                                        DesignatorStatementOptionsClassAssignExpression(
                                          Designator(
                                            DesigIdent(
                                             bodovi
                                            ) [DesigIdent]
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                          AssignOpClass(
                                            AssignOperationClass(
                                            ) [AssignOperationClass]
                                          ) [AssignOpClass]
                                          ClassOneClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  DesignatorClass(
                                                    Designator(
                                                      DesigIdent(
                                                       bodovi
                                                      ) [DesigIdent]
                                                      NoOptionalDesignatorClass(
                                                      ) [NoOptionalDesignatorClass]
                                                    ) [Designator]
                                                  ) [DesignatorClass]
                                                  TermOptionalListClass(
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                    MultiplyOperationClass(
                                                     *
                                                    ) [MultiplyOperationClass]
                                                    DesignatorClass(
                                                      Designator(
                                                        DesigIdent(
                                                         pet
                                                        ) [DesigIdent]
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                  ) [TermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                          ) [ClassOneClass]
                                        ) [DesignatorStatementOptionsClassAssignExpression]
                                      ) [Assignment]
                                    ) [Statements]
                                    Assignment(
                                      DesignatorStatementMinusMinus(
                                        Designator(
                                          DesigIdent(
                                           bodovi
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorStatementMinusMinus]
                                    ) [Assignment]
                                  ) [Statements]
                                  PrintStmt(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 bodovi
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                    NoCommaNumberClass(
                                    ) [NoCommaNumberClass]
                                  ) [PrintStmt]
                                ) [Statements]
                                Assignment(
                                  DesignatorStatementOptionsClassAssignExpression(
                                    Designator(
                                      DesigIdent(
                                       niz
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    AssignOpClass(
                                      AssignOperationClass(
                                      ) [AssignOperationClass]
                                    ) [AssignOpClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NewFactorClass(
                                              Type(
                                               int
                                              ) [Type]
                                              FactorOptionalSecondClass(
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         3
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [FactorOptionalSecondClass]
                                            ) [NewFactorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                ) [Assignment]
                              ) [Statements]
                              Assignment(
                                DesignatorStatementOptionsClassAssignExpression(
                                  Designator(
                                    DesigIdent(
                                     niz
                                    ) [DesigIdent]
                                    OptionalDesignatorArray(
                                      HelperClass(
                                      ) [HelperClass]
                                      LSquareClass(
                                      ) [LSquareClass]
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   nula
                                                  ) [DesigIdent]
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                    ) [OptionalDesignatorArray]
                                  ) [Designator]
                                  AssignOpClass(
                                    AssignOperationClass(
                                    ) [AssignOperationClass]
                                  ) [AssignOpClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               jedan
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [DesignatorStatementOptionsClassAssignExpression]
                              ) [Assignment]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementOptionsClassAssignExpression(
                                Designator(
                                  DesigIdent(
                                   niz
                                  ) [DesigIdent]
                                  OptionalDesignatorArray(
                                    HelperClass(
                                    ) [HelperClass]
                                    LSquareClass(
                                    ) [LSquareClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             1
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [OptionalDesignatorArray]
                                ) [Designator]
                                AssignOpClass(
                                  AssignOperationClass(
                                  ) [AssignOperationClass]
                                ) [AssignOpClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         2
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [DesignatorStatementOptionsClassAssignExpression]
                            ) [Assignment]
                          ) [Statements]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 niz
                                ) [DesigIdent]
                                OptionalDesignatorArray(
                                  HelperClass(
                                  ) [HelperClass]
                                  LSquareClass(
                                  ) [LSquareClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               niz
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        DesignatorClass(
                                                          Designator(
                                                            DesigIdent(
                                                             jedan
                                                            ) [DesigIdent]
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                        ) [DesignatorClass]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [OptionalDesignatorArray]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           niz
                                          ) [DesigIdent]
                                          OptionalDesignatorArray(
                                            HelperClass(
                                            ) [HelperClass]
                                            LSquareClass(
                                            ) [LSquareClass]
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      Designator(
                                                        DesigIdent(
                                                         niz
                                                        ) [DesigIdent]
                                                        OptionalDesignatorArray(
                                                          HelperClass(
                                                          ) [HelperClass]
                                                          LSquareClass(
                                                          ) [LSquareClass]
                                                          ClassOneClass(
                                                            NormalExpressionClass(
                                                              ExprFirstOptionClassWithMinus(
                                                                TermClass(
                                                                  NumberConst(
                                                                   0
                                                                  ) [NumberConst]
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                ) [TermClass]
                                                                NoExprOptionalListClass(
                                                                ) [NoExprOptionalListClass]
                                                              ) [ExprFirstOptionClassWithMinus]
                                                            ) [NormalExpressionClass]
                                                          ) [ClassOneClass]
                                                        ) [OptionalDesignatorArray]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                          ) [OptionalDesignatorArray]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      TermOptionalListClass(
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                        MultiplyOperationClass(
                                         *
                                        ) [MultiplyOperationClass]
                                        NumberConst(
                                         3
                                        ) [NumberConst]
                                      ) [TermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               bodovi
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    DesignatorClass(
                                      Designator(
                                        DesigIdent(
                                         niz
                                        ) [DesigIdent]
                                        OptionalDesignatorArray(
                                          HelperClass(
                                          ) [HelperClass]
                                          LSquareClass(
                                          ) [LSquareClass]
                                          ClassOneClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  NumberConst(
                                                   2
                                                  ) [NumberConst]
                                                  NoTermOptionalListClass(
                                                  ) [NoTermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                          ) [ClassOneClass]
                                        ) [OptionalDesignatorArray]
                                      ) [Designator]
                                    ) [DesignatorClass]
                                    TermOptionalListClass(
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                      DivideOperationClass(
                                       /
                                      ) [DivideOperationClass]
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           niz
                                          ) [DesigIdent]
                                          OptionalDesignatorArray(
                                            HelperClass(
                                            ) [HelperClass]
                                            LSquareClass(
                                            ) [LSquareClass]
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    NumberConst(
                                                     0
                                                    ) [NumberConst]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                          ) [OptionalDesignatorArray]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                    ) [TermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     bodovi
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   niz
                                  ) [DesigIdent]
                                  OptionalDesignatorArray(
                                    HelperClass(
                                    ) [HelperClass]
                                    LSquareClass(
                                    ) [LSquareClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             2
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [OptionalDesignatorArray]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         nizch
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              NewFactorClass(
                                Type(
                                 char
                                ) [Type]
                                FactorOptionalSecondClass(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           3
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [FactorOptionalSecondClass]
                              ) [NewFactorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       nizch
                      ) [DesigIdent]
                      OptionalDesignatorArray(
                        HelperClass(
                        ) [HelperClass]
                        LSquareClass(
                        ) [LSquareClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 0
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [OptionalDesignatorArray]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            CharConst(
                             a
                            ) [CharConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     nizch
                    ) [DesigIdent]
                    OptionalDesignatorArray(
                      HelperClass(
                      ) [HelperClass]
                      LSquareClass(
                      ) [LSquareClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   jedan
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [OptionalDesignatorArray]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          CharConst(
                           b
                          ) [CharConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                  DesigIdent(
                   nizch
                  ) [DesigIdent]
                  OptionalDesignatorArray(
                    HelperClass(
                    ) [HelperClass]
                    LSquareClass(
                    ) [LSquareClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 pet
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          ExprOptionalListClass(
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                            MinusOperation(
                             -
                            ) [MinusOperation]
                            TermClass(
                              NumberConst(
                               3
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                          ) [ExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [OptionalDesignatorArray]
                ) [Designator]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        CharConst(
                         c
                        ) [CharConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         nizch
                        ) [DesigIdent]
                        OptionalDesignatorArray(
                          HelperClass(
                          ) [HelperClass]
                          LSquareClass(
                          ) [LSquareClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   1
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [OptionalDesignatorArray]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                      DesigIdent(
                       nizch
                      ) [DesigIdent]
                      OptionalDesignatorArray(
                        HelperClass(
                        ) [HelperClass]
                        LSquareClass(
                        ) [LSquareClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     jedan
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                TermOptionalListClass(
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                  MultiplyOperationClass(
                                   *
                                  ) [MultiplyOperationClass]
                                  NumberConst(
                                   2
                                  ) [NumberConst]
                                ) [TermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [OptionalDesignatorArray]
                    ) [Designator]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:36:55,657 - ===================================
INFO  16:36:55,662 - PROGRAM NAME DETECTED => test301 ON LINE 3
INFO  16:36:55,662 - CONST VALUE 0 IS BEING USED! ON LINE 5
INFO  16:36:55,662 - CONST VARIABLE nula IS BEING DEFINED! ON LINE 5
INFO  16:36:55,662 - CONST VALUE 1 IS BEING USED! ON LINE 6
INFO  16:36:55,662 - CONST VARIABLE jedan IS BEING DEFINED! ON LINE 6
INFO  16:36:55,662 - CONST VALUE 5 IS BEING USED! ON LINE 7
INFO  16:36:55,662 - CONST VARIABLE pet IS BEING DEFINED! ON LINE 7
INFO  16:36:55,663 - ARRAY VARIABLE niz IS BEING DEFINED! ON LINE 9
INFO  16:36:55,663 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  16:36:55,663 - ARRAY VARIABLE nizch IS BEING DEFINED! ON LINE 10
INFO  16:36:55,663 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 10
INFO  16:36:55,663 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 13
INFO  16:36:55,663 - VARIABLE bodovi IS BEING DEFINED! ON LINE 14
INFO  16:36:55,663 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 14
INFO  16:36:55,663 - VARIABLE bt IS BEING DEFINED! ON LINE 15
INFO  16:36:55,663 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 15
INFO  16:36:55,663 - METHOD BODY STARTING!
INFO  16:36:55,663 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,663 - BEGINNING OF AN ASSIGNEMENT! ON LINE 17
INFO  16:36:55,663 - CONST NUMBER 0 ON LINE 17
INFO  16:36:55,663 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  16:36:55,664 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  16:36:55,664 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 17
INFO  16:36:55,664 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,664 - USING ++ ON bodovi ON LINE 18
INFO  16:36:55,664 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,664 - BEGINNING OF AN ASSIGNEMENT! ON LINE 19
INFO  16:36:55,664 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,664 - WE ARE USING A VARIABLE OF TYPE int ON LINE 19
INFO  16:36:55,664 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  16:36:55,664 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  16:36:55,664 - WE ARE USING A VARIABLE OF TYPE int ON LINE 19
INFO  16:36:55,664 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  16:36:55,664 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  16:36:55,664 - USING INTEGERS IN TERM! ON LINE 19
INFO  16:36:55,664 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 19
INFO  16:36:55,664 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,664 - BEGINNING OF AN ASSIGNEMENT! ON LINE 20
INFO  16:36:55,664 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,664 - WE ARE USING A VARIABLE OF TYPE int ON LINE 20
INFO  16:36:55,664 - CURRENT VARIABLE IN USE IS pet AND IT IS OF TYPE int
INFO  16:36:55,665 - WE ARE USING A VARIABLE OF TYPE int ON LINE 20
INFO  16:36:55,665 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  16:36:55,665 - USING INTEGERS IN TERM! ON LINE 20
INFO  16:36:55,666 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  16:36:55,666 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 20
INFO  16:36:55,666 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,666 - USING -- ON bodovi ON LINE 21
INFO  16:36:55,666 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,666 - WE ARE USING A VARIABLE OF TYPE int ON LINE 22
INFO  16:36:55,666 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  16:36:55,666 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  16:36:55,666 - PRINT FUNCTION CALL IN USE! ON LINE 22
INFO  16:36:55,666 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,666 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  16:36:55,666 - CONST NUMBER 3 ON LINE 25
INFO  16:36:55,666 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  16:36:55,666 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  16:36:55,666 - USAGE OF KEYWORD NEW! ON LINE 25
INFO  16:36:55,666 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  16:36:55,666 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  16:36:55,666 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  16:36:55,667 - CURRENT VARIABLE IN USE IS nula AND IT IS OF TYPE int
INFO  16:36:55,667 - WE ARE USING A VARIABLE OF TYPE int ON LINE 26
INFO  16:36:55,667 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:36:55,667 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:36:55,667 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,667 - BEGINNING OF AN ASSIGNEMENT! ON LINE 26
INFO  16:36:55,668 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  16:36:55,668 - WE ARE USING A VARIABLE OF TYPE int ON LINE 26
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:36:55,668 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 26
INFO  16:36:55,668 - CONST NUMBER 1 ON LINE 27
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  16:36:55,668 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,668 - BEGINNING OF AN ASSIGNEMENT! ON LINE 27
INFO  16:36:55,668 - CONST NUMBER 2 ON LINE 27
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  16:36:55,668 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 27
INFO  16:36:55,668 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  16:36:55,668 - WE ARE USING A VARIABLE OF TYPE int ON LINE 28
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,668 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,668 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,668 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,669 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,669 - BEGINNING OF AN ASSIGNEMENT! ON LINE 28
INFO  16:36:55,669 - CONST NUMBER 0 ON LINE 28
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,669 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,669 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,669 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,669 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  16:36:55,669 - CONST NUMBER 3 ON LINE 28
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  16:36:55,669 - USING INTEGERS IN TERM! ON LINE 28
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:55,669 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 28
INFO  16:36:55,669 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,669 - BEGINNING OF AN ASSIGNEMENT! ON LINE 29
INFO  16:36:55,669 - CONST NUMBER 2 ON LINE 29
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:55,669 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,669 - WE ARE USING AN ARRAY OF TYPE int ON LINE 29
INFO  16:36:55,669 - CONST NUMBER 0 ON LINE 29
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:55,669 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,669 - WE ARE USING AN ARRAY OF TYPE int ON LINE 29
INFO  16:36:55,669 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  16:36:55,669 - USING INTEGERS IN TERM! ON LINE 29
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:55,670 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 29
INFO  16:36:55,670 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:55,670 - WE ARE USING A VARIABLE OF TYPE int ON LINE 30
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  16:36:55,670 - PRINT FUNCTION CALL IN USE! ON LINE 30
INFO  16:36:55,670 - CONST NUMBER 2 ON LINE 31
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  16:36:55,670 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:55,670 - WE ARE USING AN ARRAY OF TYPE int ON LINE 31
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  16:36:55,670 - PRINT FUNCTION CALL IN USE! ON LINE 31
INFO  16:36:55,670 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  16:36:55,670 - BEGINNING OF AN ASSIGNEMENT! ON LINE 34
INFO  16:36:55,670 - CONST NUMBER 3 ON LINE 34
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  16:36:55,670 - USAGE OF KEYWORD NEW! ON LINE 34
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  16:36:55,670 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 34
INFO  16:36:55,670 - CONST NUMBER 0 ON LINE 35
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  16:36:55,670 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  16:36:55,671 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  16:36:55,671 - BEGINNING OF AN ASSIGNEMENT! ON LINE 35
INFO  16:36:55,671 - CONST CHAR a ON LINE 35
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  16:36:55,671 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 35
INFO  16:36:55,671 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  16:36:55,671 - WE ARE USING A VARIABLE OF TYPE int ON LINE 36
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  16:36:55,671 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  16:36:55,671 - BEGINNING OF AN ASSIGNEMENT! ON LINE 36
INFO  16:36:55,671 - CONST CHAR b ON LINE 36
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  16:36:55,671 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 36
INFO  16:36:55,671 - CURRENT VARIABLE IN USE IS pet AND IT IS OF TYPE int
INFO  16:36:55,671 - WE ARE USING A VARIABLE OF TYPE int ON LINE 37
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  16:36:55,671 - CONST NUMBER 3 ON LINE 37
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  16:36:55,671 - USING INTEGERS IN TERM! ON LINE 37
INFO  16:36:55,671 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  16:36:55,671 - BEGINNING OF AN ASSIGNEMENT! ON LINE 37
INFO  16:36:55,671 - CONST CHAR c ON LINE 37
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  16:36:55,671 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  16:36:55,672 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 37
INFO  16:36:55,672 - CONST NUMBER 1 ON LINE 38
INFO  16:36:55,672 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  16:36:55,672 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  16:36:55,672 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  16:36:55,672 - WE ARE USING AN ARRAY OF TYPE char ON LINE 38
INFO  16:36:55,672 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  16:36:55,672 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  16:36:55,672 - PRINT FUNCTION CALL IN USE! ON LINE 38
INFO  16:36:55,672 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  16:36:55,672 - WE ARE USING A VARIABLE OF TYPE int ON LINE 39
INFO  16:36:55,672 - CONST NUMBER 2 ON LINE 39
INFO  16:36:55,672 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  16:36:55,672 - USING INTEGERS IN TERM! ON LINE 39
INFO  16:36:55,672 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  16:36:55,672 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  16:36:55,672 - WE ARE USING AN ARRAY OF TYPE char ON LINE 39
INFO  16:36:55,672 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  16:36:55,672 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  16:36:55,672 - PRINT FUNCTION CALL IN USE! ON LINE 39
INFO  16:36:55,672 - METHOD BODY ENDING!
INFO  16:36:55,672 - END OF DEFINING FUNCTION main
INFO  16:36:55,673 - PROGRAM ENDED => test301 ON LINE 3
INFO  16:36:55,673 -  Deklarisanih promenljivih ima = 4
INFO  16:36:55,673 - ===================================
INFO  16:36:55,677 - Parsiranje uspesno zavrseno!
