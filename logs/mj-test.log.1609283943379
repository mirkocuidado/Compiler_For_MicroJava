INFO  00:15:43,283 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  00:15:43,357 - #34 program
INFO  00:15:43,357 - #48 MJProgram
INFO  00:15:43,357 - #48 int
INFO  00:15:43,358 - #48 x
INFO  00:15:43,359 - #42 ,
INFO  00:15:43,360 - #48 y
INFO  00:15:43,360 - #37 ;
INFO  00:15:43,360 - #48 int
INFO  00:15:43,360 - #48 bla
INFO  00:15:43,361 - #45 [
INFO  00:15:43,361 - #46 ]
INFO  00:15:43,361 - #42 ,
INFO  00:15:43,361 - #48 zz
INFO  00:15:43,361 - #42 ,
INFO  00:15:43,361 - #48 cc
INFO  00:15:43,361 - #45 [
INFO  00:15:43,362 - #46 ]
INFO  00:15:43,362 - #37 ;
INFO  00:15:43,362 - #7 const
INFO  00:15:43,362 - #48 int
INFO  00:15:43,362 - #48 aa
INFO  00:15:43,372 - #33 =
INFO  00:15:43,372 - #47 5
INFO  00:15:43,372 - #42 ,
INFO  00:15:43,372 - #48 bb
INFO  00:15:43,373 - #33 =
INFO  00:15:43,373 - #47 6
INFO  00:15:43,373 - #37 ;
INFO  00:15:43,373 - #7 const
INFO  00:15:43,374 - #48 char
INFO  00:15:43,374 - #48 cc
INFO  00:15:43,374 - #33 =
INFO  00:15:43,374 - #2 c
INFO  00:15:43,374 - #42 ,
INFO  00:15:43,376 - #48 dd
INFO  00:15:43,376 - #33 =
INFO  00:15:43,376 - #2 d
INFO  00:15:43,376 - #37 ;
INFO  00:15:43,376 - #7 const
INFO  00:15:43,376 - #48 bool
INFO  00:15:43,377 - #48 ee
INFO  00:15:43,377 - #33 =
INFO  00:15:43,377 - #3 true
INFO  00:15:43,377 - #42 ,
INFO  00:15:43,378 - #48 ff
INFO  00:15:43,378 - #33 =
INFO  00:15:43,378 - #3 false
INFO  00:15:43,378 - #37 ;
INFO  00:15:43,379 - #5 class
INFO  00:15:43,379 - #48 Klasa
INFO  00:15:43,379 - #35 {
INFO  00:15:43,380 - #48 int
INFO  00:15:43,381 - #48 duca1
INFO  00:15:43,381 - #42 ,
INFO  00:15:43,381 - #48 duca2
INFO  00:15:43,381 - #42 ,
INFO  00:15:43,381 - #48 duca3
INFO  00:15:43,381 - #37 ;
INFO  00:15:43,381 - #36 }
INFO  00:15:43,382 - #5 class
INFO  00:15:43,383 - #48 KlasaDva
INFO  00:15:43,383 - #13 extends
INFO  00:15:43,383 - #48 Klasa
INFO  00:15:43,383 - #35 {
INFO  00:15:43,383 - #48 int
INFO  00:15:43,383 - #48 aa
INFO  00:15:43,383 - #37 ;
INFO  00:15:43,383 - #35 {
INFO  00:15:43,383 - #48 int
INFO  00:15:43,384 - #48 f
INFO  00:15:43,385 - #38 (
INFO  00:15:43,385 - #39 )
INFO  00:15:43,386 - #35 {
INFO  00:15:43,386 - #36 }
INFO  00:15:43,387 - #36 }
INFO  00:15:43,388 - #36 }
INFO  00:15:43,388 - #5 class
INFO  00:15:43,388 - #48 Klasa3
INFO  00:15:43,388 - #35 {
INFO  00:15:43,389 - #36 }
INFO  00:15:43,389 - #5 class
INFO  00:15:43,389 - #48 Klasa4
INFO  00:15:43,389 - #35 {
INFO  00:15:43,389 - #35 {
INFO  00:15:43,389 - #44 void
INFO  00:15:43,389 - #48 bla
INFO  00:15:43,390 - #38 (
INFO  00:15:43,390 - #39 )
INFO  00:15:43,390 - #35 {
INFO  00:15:43,390 - #36 }
INFO  00:15:43,390 - #36 }
INFO  00:15:43,390 - #36 }
INFO  00:15:43,390 - #35 {
INFO  00:15:43,390 - #48 int
INFO  00:15:43,390 - #48 f
INFO  00:15:43,390 - #38 (
INFO  00:15:43,390 - #39 )
INFO  00:15:43,391 - #35 {
INFO  00:15:43,391 - #36 }
INFO  00:15:43,391 - #44 void
INFO  00:15:43,391 - #48 f
INFO  00:15:43,391 - #38 (
INFO  00:15:43,391 - #39 )
INFO  00:15:43,391 - #35 {
INFO  00:15:43,391 - #36 }
INFO  00:15:43,391 - #48 int
INFO  00:15:43,391 - #48 f
INFO  00:15:43,391 - #38 (
INFO  00:15:43,391 - #48 int
INFO  00:15:43,392 - #48 a
INFO  00:15:43,392 - #39 )
INFO  00:15:43,392 - #35 {
INFO  00:15:43,392 - #36 }
INFO  00:15:43,393 - #48 int
INFO  00:15:43,393 - #48 f
INFO  00:15:43,393 - #38 (
INFO  00:15:43,393 - #48 int
INFO  00:15:43,393 - #48 b
INFO  00:15:43,393 - #42 ,
INFO  00:15:43,393 - #48 int
INFO  00:15:43,393 - #48 c
INFO  00:15:43,393 - #45 [
INFO  00:15:43,393 - #46 ]
INFO  00:15:43,393 - #39 )
INFO  00:15:43,393 - #35 {
INFO  00:15:43,394 - #36 }
INFO  00:15:43,394 - #44 void
INFO  00:15:43,394 - #48 main
INFO  00:15:43,394 - #38 (
INFO  00:15:43,394 - #39 )
INFO  00:15:43,394 - #48 int
INFO  00:15:43,394 - #48 x
INFO  00:15:43,394 - #42 ,
INFO  00:15:43,394 - #48 i
INFO  00:15:43,394 - #37 ;
INFO  00:15:43,394 - #48 char
INFO  00:15:43,394 - #48 c
INFO  00:15:43,394 - #37 ;
INFO  00:15:43,394 - #35 {
INFO  00:15:43,395 - #48 val
INFO  00:15:43,395 - #33 =
INFO  00:15:43,396 - #11 new
INFO  00:15:43,397 - #48 Table
INFO  00:15:43,397 - #37 ;
INFO  00:15:43,400 - #48 val
INFO  00:15:43,400 - #30 .
INFO  00:15:43,400 - #48 pos
INFO  00:15:43,400 - #33 =
INFO  00:15:43,400 - #11 new
INFO  00:15:43,400 - #48 int
INFO  00:15:43,401 - #45 [
INFO  00:15:43,401 - #48 size
INFO  00:15:43,401 - #46 ]
INFO  00:15:43,402 - #37 ;
INFO  00:15:43,402 - #48 val
INFO  00:15:43,402 - #30 .
INFO  00:15:43,402 - #48 neg
INFO  00:15:43,402 - #33 =
INFO  00:15:43,402 - #11 new
INFO  00:15:43,402 - #48 int
INFO  00:15:43,402 - #45 [
INFO  00:15:43,402 - #48 size
INFO  00:15:43,402 - #46 ]
INFO  00:15:43,402 - #37 ;
INFO  00:15:43,403 - #48 i
INFO  00:15:43,403 - #33 =
INFO  00:15:43,403 - #47 0
INFO  00:15:43,403 - #37 ;
INFO  00:15:43,403 - #9 do
INFO  00:15:43,403 - #35 {
ERROR 00:15:43,403 - 
Sintaksna greska na liniji 47
INFO  00:15:43,404 - #48 val
INFO  00:15:43,404 - #30 .
INFO  00:15:43,404 - #48 putp
INFO  00:15:43,404 - #38 (
INFO  00:15:43,404 - #47 0
INFO  00:15:43,404 - #42 ,
INFO  00:15:43,404 - #48 i
INFO  00:15:43,404 - #39 )
INFO  00:15:43,404 - #37 ;
INFO  00:15:43,405 - #48 val
INFO  00:15:43,405 - #30 .
INFO  00:15:43,405 - #48 putn
INFO  00:15:43,405 - #38 (
INFO  00:15:43,405 - #47 0
INFO  00:15:43,405 - #42 ,
INFO  00:15:43,405 - #48 i
INFO  00:15:43,405 - #39 )
INFO  00:15:43,405 - #37 ;
INFO  00:15:43,405 - #48 i
INFO  00:15:43,405 - #28 ++
INFO  00:15:43,405 - #37 ;
INFO  00:15:43,405 - #36 }
INFO  00:15:43,405 - #10 while
INFO  00:15:43,405 - #38 (
INFO  00:15:43,405 - #48 i
INFO  00:15:43,405 - #24 <
INFO  00:15:43,405 - #48 size
INFO  00:15:43,405 - #39 )
INFO  00:15:43,405 - #37 ;
INFO  00:15:43,405 - #48 f
INFO  00:15:43,406 - #38 (
INFO  00:15:43,406 - #48 c
INFO  00:15:43,406 - #42 ,
INFO  00:15:43,406 - #48 x
INFO  00:15:43,406 - #42 ,
INFO  00:15:43,406 - #48 i
INFO  00:15:43,406 - #39 )
INFO  00:15:43,406 - #37 ;
INFO  00:15:43,406 - #12 read
INFO  00:15:43,406 - #38 (
INFO  00:15:43,406 - #48 x
INFO  00:15:43,406 - #39 )
INFO  00:15:43,406 - #37 ;
INFO  00:15:43,406 - #9 do
INFO  00:15:43,406 - #35 {
INFO  00:15:43,406 - #49 if
INFO  00:15:43,406 - #38 (
INFO  00:15:43,406 - #48 x
INFO  00:15:43,406 - #25 <=
INFO  00:15:43,406 - #47 0
INFO  00:15:43,406 - #39 )
INFO  00:15:43,406 - #4 break
INFO  00:15:43,406 - #37 ;
INFO  00:15:43,406 - #49 if
INFO  00:15:43,407 - #38 (
INFO  00:15:43,407 - #47 0
INFO  00:15:43,407 - #25 <=
INFO  00:15:43,407 - #48 x
INFO  00:15:43,407 - #26 &&
INFO  00:15:43,407 - #48 x
INFO  00:15:43,407 - #24 <
INFO  00:15:43,407 - #48 size
INFO  00:15:43,407 - #39 )
INFO  00:15:43,407 - #35 {
INFO  00:15:43,407 - #48 val
INFO  00:15:43,407 - #30 .
INFO  00:15:43,407 - #48 putp
INFO  00:15:43,407 - #38 (
INFO  00:15:43,407 - #48 val
INFO  00:15:43,407 - #30 .
INFO  00:15:43,407 - #48 getp
INFO  00:15:43,407 - #38 (
INFO  00:15:43,407 - #48 x
INFO  00:15:43,407 - #39 )
INFO  00:15:43,408 - #41 +
INFO  00:15:43,408 - #47 1
INFO  00:15:43,408 - #39 )
INFO  00:15:43,408 - #37 ;
INFO  00:15:43,408 - #36 }
INFO  00:15:43,408 - #50 else
INFO  00:15:43,408 - #49 if
INFO  00:15:43,408 - #38 (
INFO  00:15:43,408 - #16 -
INFO  00:15:43,408 - #48 size
INFO  00:15:43,408 - #24 <
INFO  00:15:43,408 - #48 x
INFO  00:15:43,409 - #26 &&
INFO  00:15:43,409 - #48 x
INFO  00:15:43,409 - #24 <
INFO  00:15:43,409 - #47 0
INFO  00:15:43,409 - #39 )
INFO  00:15:43,409 - #35 {
INFO  00:15:43,409 - #48 val
INFO  00:15:43,409 - #30 .
INFO  00:15:43,409 - #48 putn
INFO  00:15:43,409 - #38 (
INFO  00:15:43,409 - #48 val
INFO  00:15:43,409 - #30 .
INFO  00:15:43,409 - #48 getn
INFO  00:15:43,409 - #38 (
INFO  00:15:43,409 - #16 -
INFO  00:15:43,409 - #48 x
INFO  00:15:43,409 - #39 )
INFO  00:15:43,409 - #41 +
INFO  00:15:43,409 - #47 1
INFO  00:15:43,409 - #39 )
INFO  00:15:43,409 - #37 ;
INFO  00:15:43,409 - #36 }
INFO  00:15:43,409 - #12 read
INFO  00:15:43,410 - #38 (
INFO  00:15:43,410 - #48 x
INFO  00:15:43,410 - #39 )
INFO  00:15:43,410 - #37 ;
INFO  00:15:43,410 - #36 }
INFO  00:15:43,410 - #10 while
INFO  00:15:43,410 - #38 (
INFO  00:15:43,410 - #3 true
INFO  00:15:43,410 - #39 )
INFO  00:15:43,410 - #37 ;
INFO  00:15:43,410 - #36 }
INFO  00:15:43,410 - #36 }
ERROR 00:15:43,410 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 73
