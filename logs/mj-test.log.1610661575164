INFO  22:59:10,498 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  22:59:10,578 - #2 program
INFO  22:59:10,578 - #43 MJProgram
INFO  22:59:10,578 - #43 int
INFO  22:59:10,580 - #43 q
INFO  22:59:10,580 - #33 ;
INFO  22:59:10,581 - #35 {
INFO  22:59:10,581 - #43 bool
INFO  22:59:10,581 - #43 f
INFO  22:59:10,582 - #37 (
INFO  22:59:10,582 - #38 )
INFO  22:59:10,582 - #35 {
INFO  22:59:10,583 - #43 q
INFO  22:59:10,584 - #28 ++
INFO  22:59:10,586 - #33 ;
INFO  22:59:10,587 - #41 return
INFO  22:59:10,587 - #45 true
INFO  22:59:10,588 - #33 ;
INFO  22:59:10,589 - #36 }
INFO  22:59:10,589 - #5 void
INFO  22:59:10,591 - #43 main
INFO  22:59:10,591 - #37 (
INFO  22:59:10,601 - #38 )
INFO  22:59:10,601 - #43 bool
INFO  22:59:10,601 - #43 e
INFO  22:59:10,601 - #33 ;
INFO  22:59:10,601 - #43 char
INFO  22:59:10,601 - #43 pr
INFO  22:59:10,602 - #33 ;
INFO  22:59:10,602 - #43 bool
INFO  22:59:10,602 - #43 k
INFO  22:59:10,602 - #33 ;
INFO  22:59:10,602 - #43 bool
INFO  22:59:10,602 - #43 prr
INFO  22:59:10,602 - #33 ;
INFO  22:59:10,602 - #43 int
INFO  22:59:10,602 - #43 c
INFO  22:59:10,602 - #33 ;
INFO  22:59:10,602 - #43 int
INFO  22:59:10,603 - #43 r
INFO  22:59:10,603 - #33 ;
INFO  22:59:10,603 - #43 int
INFO  22:59:10,603 - #43 a
INFO  22:59:10,603 - #31 ,
INFO  22:59:10,603 - #43 b
INFO  22:59:10,603 - #33 ;
INFO  22:59:10,603 - #35 {
INFO  22:59:10,603 - #43 e
INFO  22:59:10,603 - #19 =
INFO  22:59:10,604 - #45 true
INFO  22:59:10,605 - #33 ;
INFO  22:59:10,605 - #43 pr
INFO  22:59:10,605 - #19 =
INFO  22:59:10,605 - #45 true
INFO  22:59:10,605 - #34 ?
INFO  22:59:10,606 - #37 (
INFO  22:59:10,607 - #43 e
INFO  22:59:10,607 - #34 ?
INFO  22:59:10,607 - #44 k
INFO  22:59:10,607 - #32 :
INFO  22:59:10,608 - #44 a
INFO  22:59:10,609 - #38 )
INFO  22:59:10,609 - #32 :
INFO  22:59:10,609 - #44 b
INFO  22:59:10,609 - #33 ;
INFO  22:59:10,609 - #18 print
INFO  22:59:10,609 - #37 (
INFO  22:59:10,609 - #43 pr
INFO  22:59:10,609 - #38 )
INFO  22:59:10,610 - #33 ;
INFO  22:59:10,610 - #43 k
INFO  22:59:10,610 - #19 =
INFO  22:59:10,610 - #45 true
INFO  22:59:10,610 - #33 ;
INFO  22:59:10,610 - #43 prr
INFO  22:59:10,610 - #19 =
INFO  22:59:10,610 - #45 false
INFO  22:59:10,610 - #33 ;
INFO  22:59:10,611 - #43 c
INFO  22:59:10,611 - #19 =
INFO  22:59:10,611 - #42 2
INFO  22:59:10,611 - #33 ;
INFO  22:59:10,611 - #43 r
INFO  22:59:10,611 - #19 =
INFO  22:59:10,611 - #42 4
INFO  22:59:10,611 - #33 ;
INFO  22:59:10,611 - #14 if
INFO  22:59:10,611 - #37 (
INFO  22:59:10,611 - #43 a
INFO  22:59:10,611 - #24 >=
INFO  22:59:10,611 - #43 b
INFO  22:59:10,612 - #26 &&
INFO  22:59:10,613 - #43 k
INFO  22:59:10,614 - #26 &&
INFO  22:59:10,615 - #43 f
INFO  22:59:10,615 - #37 (
INFO  22:59:10,616 - #38 )
INFO  22:59:10,618 - #27 ||
INFO  22:59:10,620 - #43 e
INFO  22:59:10,623 - #26 &&
INFO  22:59:10,623 - #43 k
INFO  22:59:10,624 - #38 )
INFO  22:59:10,625 - #35 {
INFO  22:59:10,626 - #43 c
INFO  22:59:10,626 - #19 =
INFO  22:59:10,626 - #42 5
INFO  22:59:10,626 - #33 ;
INFO  22:59:10,626 - #14 if
INFO  22:59:10,626 - #37 (
INFO  22:59:10,626 - #43 prr
INFO  22:59:10,626 - #38 )
INFO  22:59:10,627 - #35 {
INFO  22:59:10,627 - #43 c
INFO  22:59:10,627 - #19 =
INFO  22:59:10,627 - #42 4
INFO  22:59:10,627 - #33 ;
INFO  22:59:10,627 - #36 }
INFO  22:59:10,627 - #15 else
INFO  22:59:10,628 - #35 {
INFO  22:59:10,629 - #43 c
INFO  22:59:10,629 - #19 =
INFO  22:59:10,629 - #42 3
INFO  22:59:10,629 - #33 ;
INFO  22:59:10,629 - #36 }
INFO  22:59:10,629 - #36 }
INFO  22:59:10,629 - #15 else
INFO  22:59:10,629 - #35 {
INFO  22:59:10,629 - #43 c
INFO  22:59:10,629 - #19 =
INFO  22:59:10,629 - #42 9
INFO  22:59:10,630 - #33 ;
INFO  22:59:10,630 - #36 }
INFO  22:59:10,630 - #18 print
INFO  22:59:10,630 - #37 (
INFO  22:59:10,630 - #43 c
INFO  22:59:10,630 - #38 )
INFO  22:59:10,630 - #33 ;
INFO  22:59:10,630 - #18 print
INFO  22:59:10,630 - #37 (
INFO  22:59:10,630 - #43 q
INFO  22:59:10,630 - #38 )
INFO  22:59:10,630 - #33 ;
INFO  22:59:10,630 - #36 }
INFO  22:59:10,630 - #36 }
INFO  22:59:10,640 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    NoGroupDecl(
    ) [NoGroupDecl]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListSingle(
          VarClassNoArray(
           q
          ) [VarClassNoArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           bool
          ) [Type]
         f
        ) [ReturnValueClassNoVoid]
        NoFormParam(
        ) [NoFormParam]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            Assignment(
              DesignatorStatementPlusPlus(
                Designator(
                  DesigIdent(
                   q
                  ) [DesigIdent]
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
              ) [DesignatorStatementPlusPlus]
            ) [Assignment]
          ) [Statements]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    BooleanClassConstFactor(
                     true
                    ) [BooleanClassConstFactor]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  VarDeclListClass(
                    NoVarDeclList(
                    ) [NoVarDeclList]
                    VarDeclClass(
                      Type(
                       bool
                      ) [Type]
                      VarListSingle(
                        VarClassNoArray(
                         e
                        ) [VarClassNoArray]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [VarDeclListClass]
                  VarDeclClass(
                    Type(
                     char
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       pr
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   bool
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     k
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 bool
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   prr
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               r
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListSingle(
              VarClassNoArray(
               a
              ) [VarClassNoArray]
            ) [VarListSingle]
            VarClassNoArray(
             b
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 e
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      BooleanClassConstFactor(
                                       true
                                      ) [BooleanClassConstFactor]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               pr
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassTwoClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    BooleanClassConstFactor(
                                     true
                                    ) [BooleanClassConstFactor]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                              TernaryClass(
                              ) [TernaryClass]
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    ParenFactorClass(
                                      ClassTwoClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   e
                                                  ) [DesigIdent]
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                        TernaryClass(
                                        ) [TernaryClass]
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              CharConst(
                                               k
                                              ) [CharConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                        ColonClass(
                                        ) [ColonClass]
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              CharConst(
                                               a
                                              ) [CharConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassTwoClass]
                                    ) [ParenFactorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                              ColonClass(
                              ) [ColonClass]
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    CharConst(
                                     b
                                    ) [CharConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassTwoClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     pr
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           k
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                BooleanClassConstFactor(
                                 true
                                ) [BooleanClassConstFactor]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         prr
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              BooleanClassConstFactor(
                               false
                              ) [BooleanClassConstFactor]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       c
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             2
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     r
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           4
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            IfStatement(
              IfConditionNoError(
                ConditionClass(
                  CondTermClass(
                    CondFactClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 a
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                      CondFactOptionalClass(
                        GreaterOrEqualOperationClass(
                        ) [GreaterOrEqualOperationClass]
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   b
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [CondFactOptionalClass]
                    ) [CondFactClass]
                    CondTermOptionalClass(
                      CondTermOptionalClass(
                        NoCondTermOptionalClass(
                        ) [NoCondTermOptionalClass]
                        FakeAndClass(
                        ) [FakeAndClass]
                        CondFactClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     k
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                          NoCondFactOptionalClass(
                          ) [NoCondFactOptionalClass]
                        ) [CondFactClass]
                      ) [CondTermOptionalClass]
                      FakeAndClass(
                      ) [FakeAndClass]
                      CondFactClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              FactorOptionalParams(
                                Designator(
                                  DesigIdent(
                                   f
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                NoActuals(
                                ) [NoActuals]
                              ) [FactorOptionalParams]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                        NoCondFactOptionalClass(
                        ) [NoCondFactOptionalClass]
                      ) [CondFactClass]
                    ) [CondTermOptionalClass]
                  ) [CondTermClass]
                  ConditionOptionalClass(
                    NoConditionOptionalClass(
                    ) [NoConditionOptionalClass]
                    FakeOrClass(
                    ) [FakeOrClass]
                    CondTermClass(
                      CondFactClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   e
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                        NoCondFactOptionalClass(
                        ) [NoCondFactOptionalClass]
                      ) [CondFactClass]
                      CondTermOptionalClass(
                        NoCondTermOptionalClass(
                        ) [NoCondTermOptionalClass]
                        FakeAndClass(
                        ) [FakeAndClass]
                        CondFactClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     k
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                          NoCondFactOptionalClass(
                          ) [NoCondFactOptionalClass]
                        ) [CondFactClass]
                      ) [CondTermOptionalClass]
                    ) [CondTermClass]
                  ) [ConditionOptionalClass]
                ) [ConditionClass]
              ) [IfConditionNoError]
              StatementStatement(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           c
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 5
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  IfStatement(
                    IfConditionNoError(
                      ConditionClass(
                        CondTermClass(
                          CondFactClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       prr
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                            NoCondFactOptionalClass(
                            ) [NoCondFactOptionalClass]
                          ) [CondFactClass]
                          NoCondTermOptionalClass(
                          ) [NoCondTermOptionalClass]
                        ) [CondTermClass]
                        NoConditionOptionalClass(
                        ) [NoConditionOptionalClass]
                      ) [ConditionClass]
                    ) [IfConditionNoError]
                    StatementStatement(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               c
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     4
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                    ) [StatementStatement]
                    Empty(
                    ) [Empty]
                    YesOptionalStatement(
                      StatementStatement(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 c
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                      ) [StatementStatement]
                    ) [YesOptionalStatement]
                  ) [IfStatement]
                ) [Statements]
              ) [StatementStatement]
              Empty(
              ) [Empty]
              YesOptionalStatement(
                StatementStatement(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           c
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 9
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                ) [StatementStatement]
              ) [YesOptionalStatement]
            ) [IfStatement]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         c
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                      DesigIdent(
                       q
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:59:10,642 - ===================================
INFO  22:59:10,645 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  22:59:10,645 - VARIABLE q IS BEING DEFINED! ON LINE 3
INFO  22:59:10,645 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 3
INFO  22:59:10,646 - FUNCTION f WITH RETURN VALUE OF TYPE boolean ON LINE 6
INFO  22:59:10,646 - METHOD BODY STARTING!
INFO  22:59:10,646 - CURRENT VARIABLE IN USE IS q AND IT IS OF TYPE int
INFO  22:59:10,646 - USING ++ ON q ON LINE 7
INFO  22:59:10,646 - CONST CHAR true ON LINE 8
INFO  22:59:10,646 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  22:59:10,646 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  22:59:10,646 - SUCCESSFUL RETURN! TYPES: boolean AND boolean ! ON LINE 8
INFO  22:59:10,646 - METHOD BODY ENDING!
INFO  22:59:10,646 - END OF DEFINING FUNCTION f
INFO  22:59:10,646 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 11
INFO  22:59:10,647 - VARIABLE e IS BEING DEFINED! ON LINE 12
INFO  22:59:10,647 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 12
INFO  22:59:10,647 - VARIABLE pr IS BEING DEFINED! ON LINE 13
INFO  22:59:10,647 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 13
INFO  22:59:10,647 - VARIABLE k IS BEING DEFINED! ON LINE 14
INFO  22:59:10,647 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 14
INFO  22:59:10,647 - VARIABLE prr IS BEING DEFINED! ON LINE 15
INFO  22:59:10,647 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 15
INFO  22:59:10,647 - VARIABLE c IS BEING DEFINED! ON LINE 16
INFO  22:59:10,647 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 16
INFO  22:59:10,647 - VARIABLE r IS BEING DEFINED! ON LINE 17
INFO  22:59:10,647 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 17
INFO  22:59:10,647 - VARIABLE a IS BEING DEFINED! ON LINE 18
INFO  22:59:10,647 - VARIABLE b IS BEING DEFINED! ON LINE 18
INFO  22:59:10,647 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 18
INFO  22:59:10,647 - METHOD BODY STARTING!
INFO  22:59:10,647 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:59:10,648 - BEGINNING OF AN ASSIGNEMENT! ON LINE 21
INFO  22:59:10,648 - CONST CHAR true ON LINE 21
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  22:59:10,648 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 21
INFO  22:59:10,648 - CURRENT VARIABLE IN USE IS pr AND IT IS OF TYPE char
INFO  22:59:10,648 - BEGINNING OF AN ASSIGNEMENT! ON LINE 22
INFO  22:59:10,648 - CONST CHAR true ON LINE 22
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,648 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:59:10,648 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 22
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,648 - CONST CHAR k ON LINE 22
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,648 - CONST CHAR a ON LINE 22
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,648 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,649 - SUCCESSFUL TERNARY! TYPES: char AND char ! ON LINE 22
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,649 - CONST CHAR b ON LINE 22
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:59:10,649 - SUCCESSFUL TERNARY! TYPES: char AND char ! ON LINE 22
INFO  22:59:10,649 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 22
INFO  22:59:10,649 - CURRENT VARIABLE IN USE IS pr AND IT IS OF TYPE char
INFO  22:59:10,649 - WE ARE USING A VARIABLE OF TYPE char ON LINE 23
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:59:10,649 - PRINT FUNCTION CALL IN USE! ON LINE 23
INFO  22:59:10,649 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:59:10,649 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  22:59:10,649 - CONST CHAR true ON LINE 25
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  22:59:10,649 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 25
INFO  22:59:10,649 - CURRENT VARIABLE IN USE IS prr AND IT IS OF TYPE boolean
INFO  22:59:10,649 - BEGINNING OF AN ASSIGNEMENT! ON LINE 26
INFO  22:59:10,649 - CONST CHAR false ON LINE 26
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  22:59:10,649 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  22:59:10,650 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 26
INFO  22:59:10,650 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:59:10,650 - BEGINNING OF AN ASSIGNEMENT! ON LINE 27
INFO  22:59:10,650 - CONST NUMBER 2 ON LINE 27
INFO  22:59:10,650 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  22:59:10,650 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  22:59:10,650 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 27
INFO  22:59:10,650 - CURRENT VARIABLE IN USE IS r AND IT IS OF TYPE int
INFO  22:59:10,650 - BEGINNING OF AN ASSIGNEMENT! ON LINE 28
INFO  22:59:10,650 - CONST NUMBER 4 ON LINE 28
INFO  22:59:10,650 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  22:59:10,650 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  22:59:10,650 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 28
INFO  22:59:10,650 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  22:59:10,650 - WE ARE USING A VARIABLE OF TYPE int ON LINE 29
INFO  22:59:10,650 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,650 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,650 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  22:59:10,650 - WE ARE USING A VARIABLE OF TYPE int ON LINE 29
INFO  22:59:10,650 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,650 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,650 - USING TWO EXPRESSIONS OF TYPE int ON LINE 29
INFO  22:59:10,650 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:59:10,650 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 29
INFO  22:59:10,651 - CURRENT VARIABLE IN USE IS f AND IT IS OF TYPE boolean
INFO  22:59:10,651 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 29
INFO  22:59:10,651 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:59:10,651 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 29
INFO  22:59:10,651 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:59:10,651 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:59:10,651 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 29
INFO  22:59:10,651 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:59:10,651 - BEGINNING OF AN ASSIGNEMENT! ON LINE 30
INFO  22:59:10,651 - CONST NUMBER 5 ON LINE 30
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  22:59:10,652 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 30
INFO  22:59:10,652 - CURRENT VARIABLE IN USE IS prr AND IT IS OF TYPE boolean
INFO  22:59:10,652 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 31
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  22:59:10,652 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 31
INFO  22:59:10,652 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:59:10,652 - BEGINNING OF AN ASSIGNEMENT! ON LINE 32
INFO  22:59:10,652 - CONST NUMBER 4 ON LINE 32
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  22:59:10,652 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 32
INFO  22:59:10,652 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:59:10,652 - BEGINNING OF AN ASSIGNEMENT! ON LINE 34
INFO  22:59:10,652 - CONST NUMBER 3 ON LINE 34
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  22:59:10,652 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 34
INFO  22:59:10,652 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:59:10,652 - BEGINNING OF AN ASSIGNEMENT! ON LINE 37
INFO  22:59:10,652 - CONST NUMBER 9 ON LINE 37
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  22:59:10,652 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  22:59:10,652 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 37
INFO  22:59:10,653 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:59:10,653 - WE ARE USING A VARIABLE OF TYPE int ON LINE 41
INFO  22:59:10,653 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  22:59:10,653 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  22:59:10,653 - PRINT FUNCTION CALL IN USE! ON LINE 41
INFO  22:59:10,653 - CURRENT VARIABLE IN USE IS q AND IT IS OF TYPE int
INFO  22:59:10,653 - WE ARE USING A VARIABLE OF TYPE int ON LINE 42
INFO  22:59:10,653 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  22:59:10,653 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  22:59:10,653 - PRINT FUNCTION CALL IN USE! ON LINE 42
INFO  22:59:10,653 - METHOD BODY ENDING!
INFO  22:59:10,653 - END OF DEFINING FUNCTION main
INFO  22:59:10,653 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  22:59:10,653 -  Deklarisanih promenljivih ima = 9
INFO  22:59:10,653 - ===================================
INFO  22:59:10,663 - Parsiranje uspesno zavrseno!
