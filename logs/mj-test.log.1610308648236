INFO  20:56:59,464 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  20:56:59,535 - #2 program
INFO  20:56:59,535 - #48 MJProgram
INFO  20:56:59,536 - #48 int
INFO  20:56:59,537 - #48 a
INFO  20:56:59,538 - #36 ,
INFO  20:56:59,538 - #48 b
INFO  20:56:59,538 - #36 ,
INFO  20:56:59,538 - #48 c
INFO  20:56:59,538 - #36 ,
INFO  20:56:59,539 - #48 d
INFO  20:56:59,539 - #38 ;
INFO  20:56:59,539 - #40 {
INFO  20:56:59,539 - #48 int
INFO  20:56:59,541 - #48 k
INFO  20:56:59,541 - #42 (
INFO  20:56:59,541 - #43 )
INFO  20:56:59,542 - #48 int
INFO  20:56:59,543 - #48 mm
INFO  20:56:59,543 - #38 ;
INFO  20:56:59,543 - #40 {
INFO  20:56:59,543 - #46 return
INFO  20:56:59,545 - #47 2
INFO  20:56:59,546 - #38 ;
INFO  20:56:59,548 - #41 }
INFO  20:56:59,548 - #5 void
INFO  20:56:59,550 - #48 main
INFO  20:56:59,550 - #42 (
INFO  20:56:59,550 - #43 )
INFO  20:56:59,550 - #48 int
INFO  20:56:59,550 - #48 x
INFO  20:56:59,550 - #36 ,
INFO  20:56:59,550 - #48 y
INFO  20:56:59,550 - #38 ;
INFO  20:56:59,550 - #48 char
INFO  20:56:59,550 - #48 z
INFO  20:56:59,551 - #38 ;
INFO  20:56:59,551 - #48 bool
INFO  20:56:59,551 - #48 p
INFO  20:56:59,551 - #38 ;
INFO  20:56:59,551 - #40 {
INFO  20:56:59,551 - #48 x
INFO  20:56:59,551 - #24 =
INFO  20:56:59,552 - #48 k
INFO  20:56:59,553 - #42 (
INFO  20:56:59,553 - #43 )
INFO  20:56:59,554 - #38 ;
INFO  20:56:59,554 - #41 }
INFO  20:56:59,555 - #41 }
INFO  20:56:59,562 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    NoGroupDecl(
    ) [NoGroupDecl]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListClass(
          VarListClass(
            VarListClass(
              VarListSingle(
                VarClassNoArray(
                 a
                ) [VarClassNoArray]
              ) [VarListSingle]
              VarClassNoArray(
               b
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             c
            ) [VarClassNoArray]
          ) [VarListClass]
          VarClassNoArray(
           d
          ) [VarClassNoArray]
        ) [VarListClass]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  ProgramLBraceClass(
  ) [ProgramLBraceClass]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        NoFormParam(
        ) [NoFormParam]
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               mm
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    NumberConst(
                     2
                    ) [NumberConst]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            NoVarDeclList(
            ) [NoVarDeclList]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   x
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 y
                ) [VarClassNoArray]
              ) [VarListClass]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               z
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             p
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        NoStmt(
        ) [NoStmt]
        Assignment(
          DesignatorStatementClass(
            Designator(
             x
              NoOptionalDesignatorClass(
              ) [NoOptionalDesignatorClass]
            ) [Designator]
            DesignatorStatementOptionsClassAssignExpression(
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                         k
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        FactorOptionalParams(
                          NoActuals(
                          ) [NoActuals]
                        ) [FactorOptionalParams]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [DesignatorStatementClass]
        ) [Assignment]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:56:59,625 - ===================================
INFO  20:56:59,630 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  20:56:59,630 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  20:56:59,630 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  20:56:59,630 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  20:56:59,630 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  20:56:59,631 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  20:56:59,631 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 7
INFO  20:56:59,631 - VARIABLE mm IS BEING DEFINED! ON LINE 7
INFO  20:56:59,631 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 7
INFO  20:56:59,631 - METHOD BODY STARTING!
INFO  20:56:59,631 - CONST NUMBER 2 ON LINE 7
INFO  20:56:59,631 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  20:56:59,631 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  20:56:59,631 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 7
INFO  20:56:59,631 - METHOD BODY ENDING!
INFO  20:56:59,632 - END OF DEFINING FUNCTION k
INFO  20:56:59,632 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 9
INFO  20:56:59,632 - VARIABLE x IS BEING DEFINED! ON LINE 10
INFO  20:56:59,632 - VARIABLE y IS BEING DEFINED! ON LINE 10
INFO  20:56:59,632 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 10
INFO  20:56:59,632 - VARIABLE z IS BEING DEFINED! ON LINE 11
INFO  20:56:59,632 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 11
INFO  20:56:59,632 - VARIABLE p IS BEING DEFINED! ON LINE 12
INFO  20:56:59,632 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 12
INFO  20:56:59,632 - METHOD BODY STARTING!
INFO  20:56:59,632 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  20:56:59,632 - BEGINNING OF AN ASSIGNEMENT! ON LINE 15
INFO  20:56:59,633 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  20:56:59,633 - WE ARE USING A VARIABLE OF TYPE int ON LINE 15
INFO  20:56:59,633 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  20:56:59,633 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  20:56:59,633 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 15
INFO  20:56:59,633 - METHOD BODY ENDING!
INFO  20:56:59,633 - END OF DEFINING FUNCTION main
INFO  20:56:59,633 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  20:56:59,633 -  Deklarisanih promenljivih ima = 9
INFO  20:56:59,633 - ===================================
INFO  20:56:59,637 - Parsiranje uspesno zavrseno!
