INFO  14:38:21,432 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  14:38:21,541 - #2 program
INFO  14:38:21,542 - #48 MJProgram
INFO  14:38:21,542 - #48 int
INFO  14:38:21,544 - #48 a
INFO  14:38:21,545 - #36 ,
INFO  14:38:21,545 - #48 b
INFO  14:38:21,545 - #44 [
INFO  14:38:21,545 - #45 ]
INFO  14:38:21,545 - #36 ,
INFO  14:38:21,545 - #48 c
INFO  14:38:21,546 - #36 ,
INFO  14:38:21,546 - #48 d
INFO  14:38:21,546 - #38 ;
INFO  14:38:21,546 - #48 char
INFO  14:38:21,546 - #48 e
INFO  14:38:21,546 - #36 ,
INFO  14:38:21,547 - #48 f
INFO  14:38:21,547 - #44 [
INFO  14:38:21,547 - #45 ]
INFO  14:38:21,547 - #36 ,
INFO  14:38:21,547 - #48 g
INFO  14:38:21,547 - #38 ;
INFO  14:38:21,547 - #48 bool
INFO  14:38:21,548 - #48 h
INFO  14:38:21,548 - #36 ,
INFO  14:38:21,548 - #48 i
INFO  14:38:21,548 - #44 [
INFO  14:38:21,548 - #45 ]
INFO  14:38:21,548 - #38 ;
INFO  14:38:21,548 - #9 const
INFO  14:38:21,548 - #48 int
INFO  14:38:21,548 - #48 aa
INFO  14:38:21,548 - #24 =
INFO  14:38:21,548 - #47 2
INFO  14:38:21,549 - #36 ,
INFO  14:38:21,549 - #48 bb
INFO  14:38:21,549 - #24 =
INFO  14:38:21,549 - #47 6
INFO  14:38:21,549 - #38 ;
INFO  14:38:21,549 - #9 const
INFO  14:38:21,550 - #48 char
INFO  14:38:21,550 - #48 cc
INFO  14:38:21,550 - #24 =
INFO  14:38:21,550 - #49 c
INFO  14:38:21,550 - #36 ,
INFO  14:38:21,550 - #48 dd
INFO  14:38:21,550 - #24 =
INFO  14:38:21,550 - #49 d
INFO  14:38:21,550 - #38 ;
INFO  14:38:21,550 - #9 const
INFO  14:38:21,551 - #48 bool
INFO  14:38:21,551 - #48 ee
INFO  14:38:21,551 - #24 =
INFO  14:38:21,551 - #50 true
INFO  14:38:21,551 - #36 ,
INFO  14:38:21,551 - #48 ff
INFO  14:38:21,551 - #24 =
INFO  14:38:21,551 - #50 false
INFO  14:38:21,551 - #38 ;
INFO  14:38:21,551 - #40 {
INFO  14:38:21,551 - #48 int
INFO  14:38:21,552 - #48 func
INFO  14:38:21,552 - #42 (
INFO  14:38:21,553 - #48 bool
INFO  14:38:21,553 - #48 a
INFO  14:38:21,553 - #36 ,
INFO  14:38:21,553 - #48 int
INFO  14:38:21,553 - #48 b
INFO  14:38:21,553 - #43 )
INFO  14:38:21,553 - #40 {
INFO  14:38:21,554 - #46 return
INFO  14:38:21,555 - #47 0
INFO  14:38:21,556 - #38 ;
INFO  14:38:21,557 - #41 }
INFO  14:38:21,557 - #5 void
INFO  14:38:21,558 - #48 main
INFO  14:38:21,558 - #42 (
INFO  14:38:21,558 - #48 int
INFO  14:38:21,559 - #48 a
INFO  14:38:21,559 - #36 ,
INFO  14:38:21,559 - #48 int
INFO  14:38:21,559 - #48 b
INFO  14:38:21,559 - #44 [
INFO  14:38:21,559 - #45 ]
INFO  14:38:21,559 - #36 ,
INFO  14:38:21,559 - #48 char
INFO  14:38:21,559 - #48 c
INFO  14:38:21,559 - #36 ,
INFO  14:38:21,559 - #48 char
INFO  14:38:21,559 - #48 d
INFO  14:38:21,559 - #44 [
INFO  14:38:21,559 - #45 ]
INFO  14:38:21,559 - #36 ,
INFO  14:38:21,559 - #48 bool
INFO  14:38:21,559 - #48 e
INFO  14:38:21,559 - #36 ,
INFO  14:38:21,559 - #48 bool
INFO  14:38:21,560 - #48 f
INFO  14:38:21,560 - #44 [
INFO  14:38:21,560 - #45 ]
INFO  14:38:21,560 - #43 )
INFO  14:38:21,560 - #40 {
INFO  14:38:21,560 - #48 func
INFO  14:38:21,560 - #42 (
INFO  14:38:21,561 - #48 a
INFO  14:38:21,561 - #25 ==
ERROR 14:38:21,562 - 
 SYNTAX ERROR!  ON LINE 16
INFO  14:38:21,562 - #48 a
INFO  14:38:21,562 - #36 ,
INFO  14:38:21,562 - #48 func
INFO  14:38:21,563 - #42 (
INFO  14:38:21,563 - #48 a
INFO  14:38:21,563 - #36 ,
INFO  14:38:21,563 - #48 b
INFO  14:38:21,563 - #44 [
INFO  14:38:21,563 - #47 0
INFO  14:38:21,563 - #45 ]
INFO  14:38:21,563 - #43 )
INFO  14:38:21,563 - #43 )
INFO  14:38:21,563 - #38 ;
INFO  14:38:21,563 - #41 }
INFO  14:38:21,563 - #41 }
ERROR 14:38:21,564 - STATEMENT SUCCESSFULL RECOVERY ON LINE 16
INFO  14:38:21,573 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            GroupDeclarations(
              NoGroupDecl(
              ) [NoGroupDecl]
              GroupDeclarationVars(
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListClass(
                    VarListClass(
                      VarListClass(
                        VarListSingle(
                          VarClassNoArray(
                           a
                          ) [VarClassNoArray]
                        ) [VarListSingle]
                        VarClassArray(
                         b
                        ) [VarClassArray]
                      ) [VarListClass]
                      VarClassNoArray(
                       c
                      ) [VarClassNoArray]
                    ) [VarListClass]
                    VarClassNoArray(
                     d
                    ) [VarClassNoArray]
                  ) [VarListClass]
                ) [VarDeclClass]
              ) [GroupDeclarationVars]
            ) [GroupDeclarations]
            GroupDeclarationVars(
              VarDeclClass(
                Type(
                 char
                ) [Type]
                VarListClass(
                  VarListClass(
                    VarListSingle(
                      VarClassNoArray(
                       e
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                    VarClassArray(
                     f
                    ) [VarClassArray]
                  ) [VarListClass]
                  VarClassNoArray(
                   g
                  ) [VarClassNoArray]
                ) [VarListClass]
              ) [VarDeclClass]
            ) [GroupDeclarationVars]
          ) [GroupDeclarations]
          GroupDeclarationVars(
            VarDeclClass(
              Type(
               bool
              ) [Type]
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   h
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassArray(
                 i
                ) [VarClassArray]
              ) [VarListClass]
            ) [VarDeclClass]
          ) [GroupDeclarationVars]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListClass(
              ConstListSingle(
                ConstListNoArray(
                 aa
                  ValuesNumber(
                   2
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListSingle]
              ConstListNoArray(
               bb
                ValuesNumber(
                 6
                ) [ValuesNumber]
              ) [ConstListNoArray]
            ) [ConstListClass]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           char
          ) [Type]
          ConstListClass(
            ConstListSingle(
              ConstListNoArray(
               cc
                ValuesChar(
                 c
                ) [ValuesChar]
              ) [ConstListNoArray]
            ) [ConstListSingle]
            ConstListNoArray(
             dd
              ValuesChar(
               d
              ) [ValuesChar]
            ) [ConstListNoArray]
          ) [ConstListClass]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         bool
        ) [Type]
        ConstListClass(
          ConstListSingle(
            ConstListNoArray(
             ee
              ValuesBoolean(
               true
              ) [ValuesBoolean]
            ) [ConstListNoArray]
          ) [ConstListSingle]
          ConstListNoArray(
           ff
            ValuesBoolean(
             false
            ) [ValuesBoolean]
          ) [ConstListNoArray]
        ) [ConstListClass]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         func
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 bool
                ) [Type]
               a
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassNoArray(
              Type(
               int
              ) [Type]
             b
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    NumberConst(
                     0
                    ) [NumberConst]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      FormParams(
        FormalParamDecls(
          FormalParamDecls(
            FormalParamDecls(
              FormalParamDecls(
                FormalParamDecls(
                  SingleFormalParamDecl(
                    FormalParamDeclClassNoArray(
                      Type(
                       int
                      ) [Type]
                     a
                    ) [FormalParamDeclClassNoArray]
                  ) [SingleFormalParamDecl]
                  FormalParamDeclClassArray(
                    Type(
                     int
                    ) [Type]
                   b
                  ) [FormalParamDeclClassArray]
                ) [FormalParamDecls]
                FormalParamDeclClassNoArray(
                  Type(
                   char
                  ) [Type]
                 c
                ) [FormalParamDeclClassNoArray]
              ) [FormalParamDecls]
              FormalParamDeclClassArray(
                Type(
                 char
                ) [Type]
               d
              ) [FormalParamDeclClassArray]
            ) [FormalParamDecls]
            FormalParamDeclClassNoArray(
              Type(
               bool
              ) [Type]
             e
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
          FormalParamDeclClassArray(
            Type(
             bool
            ) [Type]
           f
          ) [FormalParamDeclClassArray]
        ) [FormalParamDecls]
      ) [FormParams]
      NoVarDeclList(
      ) [NoVarDeclList]
      Statements(
        NoStmt(
        ) [NoStmt]
        ErrorStmt(
        ) [ErrorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  14:38:21,573 - ===================================
INFO  14:38:21,604 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  14:38:21,604 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  14:38:21,604 - ARRAY VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  14:38:21,604 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  14:38:21,604 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  14:38:21,605 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  14:38:21,605 - VARIABLE e IS BEING DEFINED! ON LINE 3
INFO  14:38:21,605 - ARRAY VARIABLE f IS BEING DEFINED! ON LINE 3
INFO  14:38:21,605 - VARIABLE g IS BEING DEFINED! ON LINE 3
INFO  14:38:21,605 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 3
INFO  14:38:21,605 - VARIABLE h IS BEING DEFINED! ON LINE 4
INFO  14:38:21,605 - ARRAY VARIABLE i IS BEING DEFINED! ON LINE 4
INFO  14:38:21,605 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 4
INFO  14:38:21,605 - CONST VARIABLE aa IS BEING DEFINED! ON LINE 6
INFO  14:38:21,606 - CONST VARIABLE bb IS BEING DEFINED! ON LINE 6
INFO  14:38:21,606 - CONST VARIABLE cc IS BEING DEFINED! ON LINE 7
INFO  14:38:21,606 - CONST VARIABLE dd IS BEING DEFINED! ON LINE 7
INFO  14:38:21,606 - CONST VARIABLE ee IS BEING DEFINED! ON LINE 8
INFO  14:38:21,606 - CONST VARIABLE ff IS BEING DEFINED! ON LINE 8
INFO  14:38:21,606 - FUNCTION func WITH RETURN VALUE!  ON LINE 11
ERROR 14:38:21,606 - Semanticka greska na liniji 11: funkcija func nema return iskaz!
INFO  14:38:21,606 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 13
INFO  14:38:21,607 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  14:38:21,607 -  Deklarisanih promenljivih ima = 9
INFO  14:38:21,607 - ===================================
ERROR 14:38:21,608 - Parsiranje NIJE uspesno zavrseno!
