INFO  15:53:58,077 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  15:53:58,147 - #2 program
INFO  15:53:58,147 - #43 MJProgram
INFO  15:53:58,147 - #43 int
INFO  15:53:58,149 - #43 a
INFO  15:53:58,150 - #31 ,
INFO  15:53:58,150 - #43 b
INFO  15:53:58,150 - #31 ,
INFO  15:53:58,150 - #43 c
INFO  15:53:58,150 - #31 ,
INFO  15:53:58,151 - #43 d
INFO  15:53:58,151 - #33 ;
INFO  15:53:58,151 - #9 const
INFO  15:53:58,151 - #43 int
INFO  15:53:58,151 - #43 term
INFO  15:53:58,152 - #19 =
INFO  15:53:58,152 - #42 0
INFO  15:53:58,152 - #33 ;
INFO  15:53:58,152 - #9 const
INFO  15:53:58,153 - #43 int
INFO  15:53:58,153 - #43 y
INFO  15:53:58,153 - #19 =
INFO  15:53:58,162 - #42 3
INFO  15:53:58,162 - #33 ;
INFO  15:53:58,162 - #35 {
INFO  15:53:58,162 - #43 int
INFO  15:53:58,163 - #43 k
INFO  15:53:58,163 - #37 (
INFO  15:53:58,164 - #43 int
INFO  15:53:58,164 - #43 a
INFO  15:53:58,164 - #31 ,
INFO  15:53:58,164 - #43 int
INFO  15:53:58,164 - #43 b
INFO  15:53:58,164 - #38 )
INFO  15:53:58,165 - #35 {
INFO  15:53:58,165 - #41 return
INFO  15:53:58,168 - #43 b
INFO  15:53:58,169 - #33 ;
INFO  15:53:58,172 - #36 }
INFO  15:53:58,172 - #5 void
INFO  15:53:58,174 - #43 main
INFO  15:53:58,174 - #37 (
INFO  15:53:58,175 - #38 )
INFO  15:53:58,175 - #43 int
INFO  15:53:58,175 - #43 x
INFO  15:53:58,175 - #33 ;
INFO  15:53:58,175 - #43 bool
INFO  15:53:58,176 - #43 p
INFO  15:53:58,176 - #33 ;
INFO  15:53:58,176 - #43 bool
INFO  15:53:58,176 - #43 r
INFO  15:53:58,176 - #33 ;
INFO  15:53:58,176 - #43 bool
INFO  15:53:58,176 - #43 q
INFO  15:53:58,176 - #33 ;
INFO  15:53:58,176 - #43 int
INFO  15:53:58,176 - #43 dd
INFO  15:53:58,176 - #33 ;
INFO  15:53:58,176 - #43 int
INFO  15:53:58,177 - #43 ee
INFO  15:53:58,177 - #33 ;
INFO  15:53:58,177 - #43 int
INFO  15:53:58,177 - #43 ff
INFO  15:53:58,177 - #33 ;
INFO  15:53:58,177 - #43 int
INFO  15:53:58,177 - #43 gg
INFO  15:53:58,177 - #33 ;
INFO  15:53:58,177 - #43 char
INFO  15:53:58,177 - #43 hh
INFO  15:53:58,177 - #33 ;
INFO  15:53:58,177 - #43 int
INFO  15:53:58,178 - #43 ii
INFO  15:53:58,178 - #33 ;
INFO  15:53:58,178 - #35 {
INFO  15:53:58,178 - #43 x
INFO  15:53:58,178 - #19 =
INFO  15:53:58,178 - #42 3
INFO  15:53:58,179 - #33 ;
INFO  15:53:58,180 - #43 dd
INFO  15:53:58,180 - #19 =
INFO  15:53:58,180 - #42 6
INFO  15:53:58,180 - #33 ;
INFO  15:53:58,180 - #14 if
INFO  15:53:58,180 - #37 (
INFO  15:53:58,180 - #43 x
INFO  15:53:58,180 - #23 <
INFO  15:53:58,180 - #43 dd
INFO  15:53:58,182 - #38 )
INFO  15:53:58,184 - #35 {
INFO  15:53:58,184 - #14 if
INFO  15:53:58,184 - #37 (
INFO  15:53:58,184 - #43 x
INFO  15:53:58,184 - #20 ==
INFO  15:53:58,184 - #42 3
INFO  15:53:58,185 - #38 )
INFO  15:53:58,185 - #35 {
INFO  15:53:58,185 - #18 print
INFO  15:53:58,185 - #37 (
INFO  15:53:58,186 - #44 d
INFO  15:53:58,186 - #38 )
INFO  15:53:58,187 - #33 ;
INFO  15:53:58,187 - #18 print
INFO  15:53:58,188 - #37 (
INFO  15:53:58,188 - #44 a
INFO  15:53:58,188 - #38 )
INFO  15:53:58,188 - #33 ;
INFO  15:53:58,188 - #36 }
INFO  15:53:58,188 - #14 if
INFO  15:53:58,190 - #37 (
INFO  15:53:58,190 - #43 dd
INFO  15:53:58,190 - #21 !=
INFO  15:53:58,190 - #42 5
INFO  15:53:58,191 - #38 )
INFO  15:53:58,191 - #35 {
INFO  15:53:58,191 - #18 print
INFO  15:53:58,191 - #37 (
INFO  15:53:58,191 - #44 d
INFO  15:53:58,191 - #38 )
INFO  15:53:58,191 - #33 ;
INFO  15:53:58,191 - #18 print
INFO  15:53:58,191 - #37 (
INFO  15:53:58,191 - #44 a
INFO  15:53:58,191 - #38 )
INFO  15:53:58,192 - #33 ;
INFO  15:53:58,192 - #36 }
INFO  15:53:58,192 - #14 if
INFO  15:53:58,192 - #37 (
INFO  15:53:58,192 - #43 x
INFO  15:53:58,192 - #22 >
INFO  15:53:58,192 - #42 2
INFO  15:53:58,193 - #38 )
INFO  15:53:58,193 - #35 {
INFO  15:53:58,193 - #18 print
INFO  15:53:58,193 - #37 (
INFO  15:53:58,193 - #44 d
INFO  15:53:58,193 - #38 )
INFO  15:53:58,193 - #33 ;
INFO  15:53:58,193 - #18 print
INFO  15:53:58,193 - #37 (
INFO  15:53:58,193 - #44 a
INFO  15:53:58,193 - #38 )
INFO  15:53:58,193 - #33 ;
INFO  15:53:58,193 - #36 }
INFO  15:53:58,193 - #14 if
INFO  15:53:58,193 - #37 (
INFO  15:53:58,194 - #43 dd
INFO  15:53:58,194 - #23 <
INFO  15:53:58,194 - #42 7
INFO  15:53:58,194 - #38 )
INFO  15:53:58,194 - #35 {
INFO  15:53:58,194 - #18 print
INFO  15:53:58,194 - #37 (
INFO  15:53:58,194 - #44 d
INFO  15:53:58,194 - #38 )
INFO  15:53:58,194 - #33 ;
INFO  15:53:58,194 - #18 print
INFO  15:53:58,194 - #37 (
INFO  15:53:58,194 - #44 a
INFO  15:53:58,194 - #38 )
INFO  15:53:58,195 - #33 ;
INFO  15:53:58,195 - #36 }
INFO  15:53:58,195 - #14 if
INFO  15:53:58,195 - #37 (
INFO  15:53:58,195 - #43 dd
INFO  15:53:58,195 - #25 <=
INFO  15:53:58,195 - #42 6
INFO  15:53:58,196 - #38 )
INFO  15:53:58,196 - #35 {
INFO  15:53:58,196 - #18 print
INFO  15:53:58,196 - #37 (
INFO  15:53:58,196 - #44 d
INFO  15:53:58,196 - #38 )
INFO  15:53:58,196 - #33 ;
INFO  15:53:58,196 - #18 print
INFO  15:53:58,196 - #37 (
INFO  15:53:58,196 - #44 a
INFO  15:53:58,197 - #38 )
INFO  15:53:58,197 - #33 ;
INFO  15:53:58,197 - #36 }
INFO  15:53:58,197 - #14 if
INFO  15:53:58,197 - #37 (
INFO  15:53:58,197 - #43 x
INFO  15:53:58,197 - #24 >=
INFO  15:53:58,197 - #42 3
INFO  15:53:58,198 - #38 )
INFO  15:53:58,198 - #35 {
INFO  15:53:58,198 - #18 print
INFO  15:53:58,198 - #37 (
INFO  15:53:58,198 - #44 d
INFO  15:53:58,198 - #38 )
INFO  15:53:58,198 - #33 ;
INFO  15:53:58,198 - #18 print
INFO  15:53:58,198 - #37 (
INFO  15:53:58,199 - #44 a
INFO  15:53:58,199 - #38 )
INFO  15:53:58,199 - #33 ;
INFO  15:53:58,199 - #36 }
INFO  15:53:58,199 - #36 }
INFO  15:53:58,199 - #15 else
INFO  15:53:58,199 - #35 {
INFO  15:53:58,199 - #18 print
INFO  15:53:58,199 - #37 (
INFO  15:53:58,199 - #42 3
INFO  15:53:58,199 - #38 )
INFO  15:53:58,199 - #33 ;
INFO  15:53:58,199 - #36 }
INFO  15:53:58,200 - #36 }
INFO  15:53:58,201 - #36 }
INFO  15:53:58,214 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListSingle(
                    VarClassNoArray(
                     a
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                  VarClassNoArray(
                   b
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               d
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           int
          ) [Type]
          ConstListSingle(
            ConstListNoArray(
             term
              ValuesNumber(
               0
              ) [ValuesNumber]
            ) [ConstListNoArray]
          ) [ConstListSingle]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassNoArray(
              Type(
               int
              ) [Type]
             b
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         b
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  VarDeclListClass(
                    VarDeclListClass(
                      VarDeclListClass(
                        VarDeclListClass(
                          NoVarDeclList(
                          ) [NoVarDeclList]
                          VarDeclClass(
                            Type(
                             int
                            ) [Type]
                            VarListSingle(
                              VarClassNoArray(
                               x
                              ) [VarClassNoArray]
                            ) [VarListSingle]
                          ) [VarDeclClass]
                        ) [VarDeclListClass]
                        VarDeclClass(
                          Type(
                           bool
                          ) [Type]
                          VarListSingle(
                            VarClassNoArray(
                             p
                            ) [VarClassNoArray]
                          ) [VarListSingle]
                        ) [VarDeclClass]
                      ) [VarDeclListClass]
                      VarDeclClass(
                        Type(
                         bool
                        ) [Type]
                        VarListSingle(
                          VarClassNoArray(
                           r
                          ) [VarClassNoArray]
                        ) [VarListSingle]
                      ) [VarDeclClass]
                    ) [VarDeclListClass]
                    VarDeclClass(
                      Type(
                       bool
                      ) [Type]
                      VarListSingle(
                        VarClassNoArray(
                         q
                        ) [VarClassNoArray]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [VarDeclListClass]
                  VarDeclClass(
                    Type(
                     int
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       dd
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     ee
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   ff
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 gg
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               hh
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             ii
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                  DesigIdent(
                   x
                  ) [DesigIdent]
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        NumberConst(
                         3
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          Assignment(
            DesignatorStatementOptionsClassAssignExpression(
              Designator(
                DesigIdent(
                 dd
                ) [DesigIdent]
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       6
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [Assignment]
        ) [Statements]
        IfStatement(
          IfConditionNoError(
            ConditionClass(
              CondTermClass(
                CondFactClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                            DesigIdent(
                             x
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                  CondFactOptionalClass(
                    LessOperationClass(
                    ) [LessOperationClass]
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               dd
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [CondFactOptionalClass]
                ) [CondFactClass]
                NoCondTermOptionalClass(
                ) [NoCondTermOptionalClass]
              ) [CondTermClass]
              NoConditionOptionalClass(
              ) [NoConditionOptionalClass]
            ) [ConditionClass]
          ) [IfConditionNoError]
          StatementStatement(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        IfStatement(
                          IfConditionNoError(
                            ConditionClass(
                              CondTermClass(
                                CondFactClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        DesignatorClass(
                                          Designator(
                                            DesigIdent(
                                             x
                                            ) [DesigIdent]
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                  CondFactOptionalClass(
                                    RelationOperationClassEqualComparation(
                                    ) [RelationOperationClassEqualComparation]
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           3
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [CondFactOptionalClass]
                                ) [CondFactClass]
                                NoCondTermOptionalClass(
                                ) [NoCondTermOptionalClass]
                              ) [CondTermClass]
                              NoConditionOptionalClass(
                              ) [NoConditionOptionalClass]
                            ) [ConditionClass]
                          ) [IfConditionNoError]
                          StatementStatement(
                            Statements(
                              Statements(
                                NoStmt(
                                ) [NoStmt]
                                PrintStmt(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          CharConst(
                                           d
                                          ) [CharConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                  NoCommaNumberClass(
                                  ) [NoCommaNumberClass]
                                ) [PrintStmt]
                              ) [Statements]
                              PrintStmt(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        CharConst(
                                         a
                                        ) [CharConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                                NoCommaNumberClass(
                                ) [NoCommaNumberClass]
                              ) [PrintStmt]
                            ) [Statements]
                          ) [StatementStatement]
                          Empty(
                          ) [Empty]
                          NoOptionalStatement(
                          ) [NoOptionalStatement]
                        ) [IfStatement]
                      ) [Statements]
                      IfStatement(
                        IfConditionNoError(
                          ConditionClass(
                            CondTermClass(
                              CondFactClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           dd
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                                CondFactOptionalClass(
                                  RelationOperationClassNotEqualComparation(
                                  ) [RelationOperationClassNotEqualComparation]
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         5
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [CondFactOptionalClass]
                              ) [CondFactClass]
                              NoCondTermOptionalClass(
                              ) [NoCondTermOptionalClass]
                            ) [CondTermClass]
                            NoConditionOptionalClass(
                            ) [NoConditionOptionalClass]
                          ) [ConditionClass]
                        ) [IfConditionNoError]
                        StatementStatement(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              PrintStmt(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        CharConst(
                                         d
                                        ) [CharConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                                NoCommaNumberClass(
                                ) [NoCommaNumberClass]
                              ) [PrintStmt]
                            ) [Statements]
                            PrintStmt(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      CharConst(
                                       a
                                      ) [CharConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                              NoCommaNumberClass(
                              ) [NoCommaNumberClass]
                            ) [PrintStmt]
                          ) [Statements]
                        ) [StatementStatement]
                        Empty(
                        ) [Empty]
                        NoOptionalStatement(
                        ) [NoOptionalStatement]
                      ) [IfStatement]
                    ) [Statements]
                    IfStatement(
                      IfConditionNoError(
                        ConditionClass(
                          CondTermClass(
                            CondFactClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    DesignatorClass(
                                      Designator(
                                        DesigIdent(
                                         x
                                        ) [DesigIdent]
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                    ) [DesignatorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                              CondFactOptionalClass(
                                GreaterOperationClass(
                                ) [GreaterOperationClass]
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [CondFactOptionalClass]
                            ) [CondFactClass]
                            NoCondTermOptionalClass(
                            ) [NoCondTermOptionalClass]
                          ) [CondTermClass]
                          NoConditionOptionalClass(
                          ) [NoConditionOptionalClass]
                        ) [ConditionClass]
                      ) [IfConditionNoError]
                      StatementStatement(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            PrintStmt(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      CharConst(
                                       d
                                      ) [CharConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                              NoCommaNumberClass(
                              ) [NoCommaNumberClass]
                            ) [PrintStmt]
                          ) [Statements]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    CharConst(
                                     a
                                    ) [CharConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                      ) [StatementStatement]
                      Empty(
                      ) [Empty]
                      NoOptionalStatement(
                      ) [NoOptionalStatement]
                    ) [IfStatement]
                  ) [Statements]
                  IfStatement(
                    IfConditionNoError(
                      ConditionClass(
                        CondTermClass(
                          CondFactClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       dd
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                            CondFactOptionalClass(
                              LessOperationClass(
                              ) [LessOperationClass]
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     7
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [CondFactOptionalClass]
                          ) [CondFactClass]
                          NoCondTermOptionalClass(
                          ) [NoCondTermOptionalClass]
                        ) [CondTermClass]
                        NoConditionOptionalClass(
                        ) [NoConditionOptionalClass]
                      ) [ConditionClass]
                    ) [IfConditionNoError]
                    StatementStatement(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    CharConst(
                                     d
                                    ) [CharConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  CharConst(
                                   a
                                  ) [CharConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          NoCommaNumberClass(
                          ) [NoCommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                    ) [StatementStatement]
                    Empty(
                    ) [Empty]
                    NoOptionalStatement(
                    ) [NoOptionalStatement]
                  ) [IfStatement]
                ) [Statements]
                IfStatement(
                  IfConditionNoError(
                    ConditionClass(
                      CondTermClass(
                        CondFactClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     dd
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                          CondFactOptionalClass(
                            LessOrEqualOperationClass(
                            ) [LessOrEqualOperationClass]
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   6
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [CondFactOptionalClass]
                        ) [CondFactClass]
                        NoCondTermOptionalClass(
                        ) [NoCondTermOptionalClass]
                      ) [CondTermClass]
                      NoConditionOptionalClass(
                      ) [NoConditionOptionalClass]
                    ) [ConditionClass]
                  ) [IfConditionNoError]
                  StatementStatement(
                    Statements(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  CharConst(
                                   d
                                  ) [CharConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          NoCommaNumberClass(
                          ) [NoCommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                CharConst(
                                 a
                                ) [CharConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                  ) [StatementStatement]
                  Empty(
                  ) [Empty]
                  NoOptionalStatement(
                  ) [NoOptionalStatement]
                ) [IfStatement]
              ) [Statements]
              IfStatement(
                IfConditionNoError(
                  ConditionClass(
                    CondTermClass(
                      CondFactClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   x
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                        CondFactOptionalClass(
                          GreaterOrEqualOperationClass(
                          ) [GreaterOrEqualOperationClass]
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 3
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [CondFactOptionalClass]
                      ) [CondFactClass]
                      NoCondTermOptionalClass(
                      ) [NoCondTermOptionalClass]
                    ) [CondTermClass]
                    NoConditionOptionalClass(
                    ) [NoConditionOptionalClass]
                  ) [ConditionClass]
                ) [IfConditionNoError]
                StatementStatement(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                CharConst(
                                 d
                                ) [CharConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              CharConst(
                               a
                              ) [CharConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                ) [StatementStatement]
                Empty(
                ) [Empty]
                NoOptionalStatement(
                ) [NoOptionalStatement]
              ) [IfStatement]
            ) [Statements]
          ) [StatementStatement]
          Empty(
          ) [Empty]
          YesOptionalStatement(
            StatementStatement(
              Statements(
                NoStmt(
                ) [NoStmt]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           3
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
            ) [StatementStatement]
          ) [YesOptionalStatement]
        ) [IfStatement]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:53:58,216 - ===================================
INFO  15:53:58,221 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  15:53:58,221 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  15:53:58,221 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  15:53:58,221 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  15:53:58,221 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  15:53:58,221 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  15:53:58,222 - CONST VALUE 0 IS BEING USED! ON LINE 4
INFO  15:53:58,222 - CONST VARIABLE term IS BEING DEFINED! ON LINE 4
INFO  15:53:58,222 - CONST VALUE 3 IS BEING USED! ON LINE 5
INFO  15:53:58,222 - CONST VARIABLE y IS BEING DEFINED! ON LINE 5
INFO  15:53:58,222 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 9
INFO  15:53:58,222 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  15:53:58,222 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  15:53:58,222 - METHOD BODY STARTING!
INFO  15:53:58,222 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  15:53:58,222 - WE ARE USING A VARIABLE OF TYPE int ON LINE 9
INFO  15:53:58,222 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  15:53:58,222 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  15:53:58,222 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 9
INFO  15:53:58,223 - METHOD BODY ENDING!
INFO  15:53:58,223 - END OF DEFINING FUNCTION k
INFO  15:53:58,223 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 23
INFO  15:53:58,223 - VARIABLE x IS BEING DEFINED! ON LINE 24
INFO  15:53:58,223 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 24
INFO  15:53:58,223 - VARIABLE p IS BEING DEFINED! ON LINE 26
INFO  15:53:58,223 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 26
INFO  15:53:58,223 - VARIABLE r IS BEING DEFINED! ON LINE 27
INFO  15:53:58,223 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 27
INFO  15:53:58,223 - VARIABLE q IS BEING DEFINED! ON LINE 28
INFO  15:53:58,223 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 28
INFO  15:53:58,223 - VARIABLE dd IS BEING DEFINED! ON LINE 32
INFO  15:53:58,223 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 32
INFO  15:53:58,223 - VARIABLE ee IS BEING DEFINED! ON LINE 33
INFO  15:53:58,223 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 33
INFO  15:53:58,223 - VARIABLE ff IS BEING DEFINED! ON LINE 34
INFO  15:53:58,224 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 34
INFO  15:53:58,224 - VARIABLE gg IS BEING DEFINED! ON LINE 35
INFO  15:53:58,224 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 35
INFO  15:53:58,224 - VARIABLE hh IS BEING DEFINED! ON LINE 36
INFO  15:53:58,224 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 36
INFO  15:53:58,224 - VARIABLE ii IS BEING DEFINED! ON LINE 37
INFO  15:53:58,224 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 37
INFO  15:53:58,224 - METHOD BODY STARTING!
INFO  15:53:58,224 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:53:58,224 - BEGINNING OF AN ASSIGNEMENT! ON LINE 66
INFO  15:53:58,224 - CONST NUMBER 3 ON LINE 66
INFO  15:53:58,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 66
INFO  15:53:58,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 66
INFO  15:53:58,225 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 66
INFO  15:53:58,225 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:53:58,225 - BEGINNING OF AN ASSIGNEMENT! ON LINE 67
INFO  15:53:58,225 - CONST NUMBER 6 ON LINE 67
INFO  15:53:58,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 67
INFO  15:53:58,225 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 67
INFO  15:53:58,225 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 67
INFO  15:53:58,225 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:53:58,226 - WE ARE USING A VARIABLE OF TYPE int ON LINE 69
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  15:53:58,226 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:53:58,226 - WE ARE USING A VARIABLE OF TYPE int ON LINE 69
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  15:53:58,226 - USING TWO EXPRESSIONS OF TYPE int ON LINE 69
INFO  15:53:58,226 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:53:58,226 - WE ARE USING A VARIABLE OF TYPE int ON LINE 70
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  15:53:58,226 - CONST NUMBER 3 ON LINE 70
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  15:53:58,226 - USING TWO EXPRESSIONS OF TYPE int ON LINE 70
INFO  15:53:58,226 - CONST CHAR d ON LINE 71
INFO  15:53:58,226 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 71
INFO  15:53:58,227 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 71
INFO  15:53:58,227 - PRINT FUNCTION CALL IN USE! ON LINE 71
INFO  15:53:58,227 - CONST CHAR a ON LINE 72
INFO  15:53:58,227 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 72
INFO  15:53:58,227 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 72
INFO  15:53:58,227 - PRINT FUNCTION CALL IN USE! ON LINE 72
INFO  15:53:58,227 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:53:58,227 - WE ARE USING A VARIABLE OF TYPE int ON LINE 75
INFO  15:53:58,227 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  15:53:58,227 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  15:53:58,227 - CONST NUMBER 5 ON LINE 75
INFO  15:53:58,227 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  15:53:58,227 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  15:53:58,227 - USING TWO EXPRESSIONS OF TYPE int ON LINE 75
INFO  15:53:58,227 - CONST CHAR d ON LINE 76
INFO  15:53:58,227 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 76
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 76
INFO  15:53:58,228 - PRINT FUNCTION CALL IN USE! ON LINE 76
INFO  15:53:58,228 - CONST CHAR a ON LINE 77
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 77
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 77
INFO  15:53:58,228 - PRINT FUNCTION CALL IN USE! ON LINE 77
INFO  15:53:58,228 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:53:58,228 - WE ARE USING A VARIABLE OF TYPE int ON LINE 80
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  15:53:58,228 - CONST NUMBER 2 ON LINE 80
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  15:53:58,228 - USING TWO EXPRESSIONS OF TYPE int ON LINE 80
INFO  15:53:58,228 - CONST CHAR d ON LINE 81
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 81
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 81
INFO  15:53:58,228 - PRINT FUNCTION CALL IN USE! ON LINE 81
INFO  15:53:58,228 - CONST CHAR a ON LINE 82
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 82
INFO  15:53:58,228 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 82
INFO  15:53:58,229 - PRINT FUNCTION CALL IN USE! ON LINE 82
INFO  15:53:58,229 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:53:58,229 - WE ARE USING A VARIABLE OF TYPE int ON LINE 85
INFO  15:53:58,229 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  15:53:58,229 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  15:53:58,229 - CONST NUMBER 7 ON LINE 85
INFO  15:53:58,229 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  15:53:58,229 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  15:53:58,229 - USING TWO EXPRESSIONS OF TYPE int ON LINE 85
INFO  15:53:58,229 - CONST CHAR d ON LINE 86
INFO  15:53:58,229 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 86
INFO  15:53:58,229 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 86
INFO  15:53:58,229 - PRINT FUNCTION CALL IN USE! ON LINE 86
INFO  15:53:58,229 - CONST CHAR a ON LINE 87
INFO  15:53:58,229 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 87
INFO  15:53:58,229 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 87
INFO  15:53:58,229 - PRINT FUNCTION CALL IN USE! ON LINE 87
INFO  15:53:58,229 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:53:58,229 - WE ARE USING A VARIABLE OF TYPE int ON LINE 90
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  15:53:58,230 - CONST NUMBER 6 ON LINE 90
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  15:53:58,230 - USING TWO EXPRESSIONS OF TYPE int ON LINE 90
INFO  15:53:58,230 - CONST CHAR d ON LINE 91
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 91
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 91
INFO  15:53:58,230 - PRINT FUNCTION CALL IN USE! ON LINE 91
INFO  15:53:58,230 - CONST CHAR a ON LINE 92
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 92
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 92
INFO  15:53:58,230 - PRINT FUNCTION CALL IN USE! ON LINE 92
INFO  15:53:58,230 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:53:58,230 - WE ARE USING A VARIABLE OF TYPE int ON LINE 95
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 95
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 95
INFO  15:53:58,230 - CONST NUMBER 3 ON LINE 95
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 95
INFO  15:53:58,230 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 95
INFO  15:53:58,231 - USING TWO EXPRESSIONS OF TYPE int ON LINE 95
INFO  15:53:58,231 - CONST CHAR d ON LINE 96
INFO  15:53:58,231 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 96
INFO  15:53:58,231 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 96
INFO  15:53:58,231 - PRINT FUNCTION CALL IN USE! ON LINE 96
INFO  15:53:58,231 - CONST CHAR a ON LINE 97
INFO  15:53:58,231 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 97
INFO  15:53:58,231 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 97
INFO  15:53:58,231 - PRINT FUNCTION CALL IN USE! ON LINE 97
INFO  15:53:58,231 - CONST NUMBER 3 ON LINE 101
INFO  15:53:58,231 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 101
INFO  15:53:58,231 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 101
INFO  15:53:58,231 - PRINT FUNCTION CALL IN USE! ON LINE 101
INFO  15:53:58,231 - METHOD BODY ENDING!
INFO  15:53:58,231 - END OF DEFINING FUNCTION main
INFO  15:53:58,231 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  15:53:58,231 -  Deklarisanih promenljivih ima = 14
INFO  15:53:58,231 - ===================================
INFO  15:53:58,239 - Parsiranje uspesno zavrseno!
