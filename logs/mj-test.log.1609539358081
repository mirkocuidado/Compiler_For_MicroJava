INFO  23:15:43,463 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  23:15:43,520 - #34 program
INFO  23:15:43,520 - #48 MJProgram
INFO  23:15:43,520 - #48 int
INFO  23:15:43,521 - #37 ;
ERROR 23:15:43,521 - 
Sintaksna greska na liniji 2
INFO  23:15:43,521 - #48 int
INFO  23:15:43,521 - #48 t
INFO  23:15:43,522 - #48 a
ERROR 23:15:43,522 - Successful error recovery by parser on line 8 -> Variable Declaration Semi
ERROR 23:15:43,525 - 
Sintaksna greska na liniji 3
INFO  23:15:43,526 - #42 ,
INFO  23:15:43,526 - #48 b
INFO  23:15:43,526 - #42 ,
INFO  23:15:43,526 - #48 c
ERROR 23:15:43,526 - Successful error recovery by parser on line 3 -> Variable Declaration Comma
INFO  23:15:43,538 - #37 ;
INFO  23:15:43,539 - #48 int
INFO  23:15:43,539 - #48 a
INFO  23:15:43,539 - #42 ,
INFO  23:15:43,539 - #48 x
INFO  23:15:43,539 - #42 ,
INFO  23:15:43,539 - #48 dd
INFO  23:15:43,539 - #42 ,
INFO  23:15:43,539 - #48 b
INFO  23:15:43,540 - #42 ,
INFO  23:15:43,540 - #48 c
INFO  23:15:43,540 - #37 ;
INFO  23:15:43,540 - #35 {
INFO  23:15:43,540 - #44 void
INFO  23:15:43,541 - #48 main
INFO  23:15:43,541 - #38 (
INFO  23:15:43,541 - #39 )
INFO  23:15:43,542 - #35 {
INFO  23:15:43,542 - #49 if
INFO  23:15:43,543 - #38 (
INFO  23:15:43,543 - #48 a
INFO  23:15:43,543 - #20 ==
INFO  23:15:43,546 - #47 3
INFO  23:15:43,546 - #27 ||
INFO  23:15:43,548 - #48 b
INFO  23:15:43,548 - #20 ==
INFO  23:15:43,548 - #39 )
ERROR 23:15:43,548 - 
Sintaksna greska na liniji 10
INFO  23:15:43,548 - #35 {
INFO  23:15:43,548 - #48 z
INFO  23:15:43,548 - #33 =
ERROR 23:15:43,548 - Successful error recovery by parser on line 10 -> ConditionOptional
INFO  23:15:43,549 - #47 2
INFO  23:15:43,550 - #37 ;
INFO  23:15:43,550 - #36 }
INFO  23:15:43,550 - #36 }
INFO  23:15:43,553 - #36 }
INFO  23:15:43,556 - Program(
 MJProgram
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclYesError(
          ) [VarDeclYesError]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              ErrorVarList(
              ) [ErrorVarList]
              VarClassNoArray(
               b
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             c
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListClass(
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 x
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               dd
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             b
            ) [VarClassNoArray]
          ) [VarListClass]
          VarClassNoArray(
           c
          ) [VarClassNoArray]
        ) [VarListClass]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
      ) [ReturnValueClassVoid]
     main
      NoFormParam(
      ) [NoFormParam]
      NoVarDeclList(
      ) [NoVarDeclList]
      Statements(
        NoStmt(
        ) [NoStmt]
        IfStatement(
          IfConditionNoError(
            ConditionClass(
              CondTermClass(
                CondFactClass(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                             a
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            NoFactorOptional(
                            ) [NoFactorOptional]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  CondFactOptionalClass(
                    RelationOperationClassEqualComparation(
                    ) [RelationOperationClassEqualComparation]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             3
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [CondFactOptionalClass]
                ) [CondFactClass]
                NoCondTermOptionalClass(
                ) [NoCondTermOptionalClass]
              ) [CondTermClass]
              IfConditionYesError(
              ) [IfConditionYesError]
            ) [ConditionClass]
          ) [IfConditionNoError]
          StatementStatement(
            Statements(
              NoStmt(
              ) [NoStmt]
              Assignment(
                DesignatorStatementClass(
                  Designator(
                   z
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  DesignatorStatementOptionsClassAssignExpression(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             2
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [DesignatorStatementClass]
              ) [Assignment]
            ) [Statements]
          ) [StatementStatement]
          NoOptionalStatement(
          ) [NoOptionalStatement]
        ) [IfStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:15:43,557 - ===================================
