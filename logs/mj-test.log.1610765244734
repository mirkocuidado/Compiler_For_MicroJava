INFO  03:46:48,385 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  03:46:48,450 - #2 program
INFO  03:46:48,451 - #43 test301
INFO  03:46:48,451 - #9 const
INFO  03:46:48,452 - #43 int
INFO  03:46:48,452 - #43 nula
INFO  03:46:48,453 - #19 =
INFO  03:46:48,453 - #42 0
INFO  03:46:48,453 - #33 ;
INFO  03:46:48,453 - #9 const
INFO  03:46:48,454 - #43 int
INFO  03:46:48,454 - #43 jedan
INFO  03:46:48,454 - #19 =
INFO  03:46:48,454 - #42 1
INFO  03:46:48,454 - #33 ;
INFO  03:46:48,454 - #9 const
INFO  03:46:48,454 - #43 int
INFO  03:46:48,454 - #43 pet
INFO  03:46:48,454 - #19 =
INFO  03:46:48,454 - #42 5
INFO  03:46:48,454 - #33 ;
INFO  03:46:48,455 - #43 int
INFO  03:46:48,464 - #43 niz
INFO  03:46:48,464 - #39 [
INFO  03:46:48,464 - #40 ]
INFO  03:46:48,464 - #33 ;
INFO  03:46:48,465 - #43 char
INFO  03:46:48,465 - #43 nizch
INFO  03:46:48,465 - #39 [
INFO  03:46:48,465 - #40 ]
INFO  03:46:48,465 - #33 ;
INFO  03:46:48,465 - #35 {
INFO  03:46:48,466 - #5 void
INFO  03:46:48,467 - #43 main
INFO  03:46:48,467 - #37 (
INFO  03:46:48,467 - #38 )
INFO  03:46:48,468 - #43 int
INFO  03:46:48,468 - #43 bodovi
INFO  03:46:48,469 - #33 ;
INFO  03:46:48,469 - #43 bool
INFO  03:46:48,469 - #43 bt
INFO  03:46:48,469 - #33 ;
INFO  03:46:48,469 - #35 {
INFO  03:46:48,469 - #43 bodovi
INFO  03:46:48,471 - #19 =
INFO  03:46:48,473 - #42 0
INFO  03:46:48,474 - #33 ;
INFO  03:46:48,476 - #43 bodovi
INFO  03:46:48,476 - #28 ++
INFO  03:46:48,476 - #33 ;
INFO  03:46:48,476 - #43 bodovi
INFO  03:46:48,477 - #19 =
INFO  03:46:48,477 - #43 bodovi
INFO  03:46:48,477 - #49 +
INFO  03:46:48,477 - #43 jedan
INFO  03:46:48,477 - #33 ;
INFO  03:46:48,477 - #43 bodovi
INFO  03:46:48,477 - #19 =
INFO  03:46:48,477 - #43 bodovi
INFO  03:46:48,477 - #46 *
INFO  03:46:48,477 - #43 pet
INFO  03:46:48,477 - #33 ;
INFO  03:46:48,478 - #43 bodovi
INFO  03:46:48,478 - #29 --
INFO  03:46:48,478 - #33 ;
INFO  03:46:48,478 - #18 print
INFO  03:46:48,478 - #37 (
INFO  03:46:48,478 - #43 bodovi
INFO  03:46:48,478 - #38 )
INFO  03:46:48,479 - #33 ;
INFO  03:46:48,479 - #43 niz
INFO  03:46:48,479 - #19 =
INFO  03:46:48,479 - #16 new
INFO  03:46:48,479 - #43 int
INFO  03:46:48,479 - #39 [
INFO  03:46:48,479 - #42 3
INFO  03:46:48,479 - #40 ]
INFO  03:46:48,479 - #33 ;
INFO  03:46:48,480 - #43 niz
INFO  03:46:48,480 - #39 [
INFO  03:46:48,481 - #43 nula
INFO  03:46:48,482 - #40 ]
INFO  03:46:48,482 - #19 =
INFO  03:46:48,482 - #43 jedan
INFO  03:46:48,482 - #33 ;
INFO  03:46:48,482 - #43 niz
INFO  03:46:48,482 - #39 [
INFO  03:46:48,482 - #42 1
INFO  03:46:48,482 - #40 ]
INFO  03:46:48,482 - #19 =
INFO  03:46:48,483 - #42 2
INFO  03:46:48,483 - #33 ;
INFO  03:46:48,483 - #43 niz
INFO  03:46:48,483 - #39 [
INFO  03:46:48,483 - #43 niz
INFO  03:46:48,483 - #39 [
INFO  03:46:48,483 - #43 jedan
INFO  03:46:48,483 - #40 ]
INFO  03:46:48,483 - #40 ]
INFO  03:46:48,483 - #19 =
INFO  03:46:48,483 - #43 niz
INFO  03:46:48,483 - #39 [
INFO  03:46:48,483 - #43 niz
INFO  03:46:48,483 - #39 [
INFO  03:46:48,483 - #42 0
INFO  03:46:48,483 - #40 ]
INFO  03:46:48,483 - #40 ]
INFO  03:46:48,483 - #46 *
INFO  03:46:48,484 - #42 3
INFO  03:46:48,484 - #33 ;
INFO  03:46:48,484 - #43 bodovi
INFO  03:46:48,484 - #19 =
INFO  03:46:48,484 - #43 niz
INFO  03:46:48,484 - #39 [
INFO  03:46:48,484 - #42 2
INFO  03:46:48,484 - #40 ]
INFO  03:46:48,484 - #47 /
INFO  03:46:48,484 - #43 niz
INFO  03:46:48,484 - #39 [
INFO  03:46:48,484 - #42 0
INFO  03:46:48,484 - #40 ]
INFO  03:46:48,484 - #33 ;
INFO  03:46:48,484 - #18 print
INFO  03:46:48,484 - #37 (
INFO  03:46:48,484 - #43 bodovi
INFO  03:46:48,485 - #38 )
INFO  03:46:48,485 - #33 ;
INFO  03:46:48,485 - #18 print
INFO  03:46:48,485 - #37 (
INFO  03:46:48,485 - #43 niz
INFO  03:46:48,485 - #39 [
INFO  03:46:48,485 - #42 2
INFO  03:46:48,485 - #40 ]
INFO  03:46:48,485 - #38 )
INFO  03:46:48,485 - #33 ;
INFO  03:46:48,485 - #43 nizch
INFO  03:46:48,485 - #19 =
INFO  03:46:48,485 - #16 new
INFO  03:46:48,485 - #43 char
INFO  03:46:48,485 - #39 [
INFO  03:46:48,485 - #42 3
INFO  03:46:48,485 - #40 ]
INFO  03:46:48,508 - #33 ;
INFO  03:46:48,508 - #43 nizch
INFO  03:46:48,508 - #39 [
INFO  03:46:48,508 - #42 0
INFO  03:46:48,508 - #40 ]
INFO  03:46:48,508 - #19 =
INFO  03:46:48,509 - #44 a
INFO  03:46:48,509 - #33 ;
INFO  03:46:48,509 - #43 nizch
INFO  03:46:48,509 - #39 [
INFO  03:46:48,509 - #43 jedan
INFO  03:46:48,509 - #40 ]
INFO  03:46:48,509 - #19 =
INFO  03:46:48,510 - #44 b
INFO  03:46:48,510 - #33 ;
INFO  03:46:48,510 - #43 nizch
INFO  03:46:48,510 - #39 [
INFO  03:46:48,510 - #43 pet
INFO  03:46:48,510 - #50 -
INFO  03:46:48,510 - #42 3
INFO  03:46:48,510 - #40 ]
INFO  03:46:48,511 - #19 =
INFO  03:46:48,511 - #44 c
INFO  03:46:48,511 - #33 ;
INFO  03:46:48,511 - #18 print
INFO  03:46:48,511 - #37 (
INFO  03:46:48,511 - #43 nizch
INFO  03:46:48,511 - #39 [
INFO  03:46:48,511 - #42 1
INFO  03:46:48,511 - #40 ]
INFO  03:46:48,513 - #38 )
INFO  03:46:48,513 - #33 ;
INFO  03:46:48,513 - #18 print
INFO  03:46:48,514 - #37 (
INFO  03:46:48,514 - #43 nizch
INFO  03:46:48,514 - #39 [
INFO  03:46:48,514 - #43 jedan
INFO  03:46:48,514 - #46 *
INFO  03:46:48,514 - #42 2
INFO  03:46:48,514 - #40 ]
INFO  03:46:48,514 - #38 )
INFO  03:46:48,514 - #33 ;
INFO  03:46:48,514 - #43 bodovi
INFO  03:46:48,514 - #19 =
INFO  03:46:48,514 - #43 bodovi
INFO  03:46:48,515 - #49 +
INFO  03:46:48,515 - #37 (
INFO  03:46:48,515 - #43 pet
INFO  03:46:48,515 - #46 *
INFO  03:46:48,515 - #43 jedan
INFO  03:46:48,515 - #50 -
INFO  03:46:48,515 - #42 1
INFO  03:46:48,515 - #38 )
INFO  03:46:48,515 - #46 *
INFO  03:46:48,516 - #43 bodovi
INFO  03:46:48,516 - #50 -
INFO  03:46:48,516 - #37 (
INFO  03:46:48,516 - #42 3
INFO  03:46:48,516 - #48 %
INFO  03:46:48,516 - #42 2
INFO  03:46:48,516 - #49 +
INFO  03:46:48,516 - #42 3
INFO  03:46:48,516 - #46 *
INFO  03:46:48,516 - #42 2
INFO  03:46:48,516 - #50 -
INFO  03:46:48,517 - #42 3
INFO  03:46:48,517 - #38 )
INFO  03:46:48,517 - #33 ;
INFO  03:46:48,517 - #18 print
INFO  03:46:48,517 - #37 (
INFO  03:46:48,517 - #43 bodovi
INFO  03:46:48,517 - #38 )
INFO  03:46:48,517 - #33 ;
INFO  03:46:48,517 - #17 read
INFO  03:46:48,517 - #37 (
INFO  03:46:48,517 - #43 bodovi
INFO  03:46:48,517 - #38 )
INFO  03:46:48,517 - #33 ;
INFO  03:46:48,517 - #43 bt
INFO  03:46:48,518 - #19 =
INFO  03:46:48,518 - #45 true
INFO  03:46:48,518 - #33 ;
INFO  03:46:48,518 - #18 print
INFO  03:46:48,518 - #37 (
INFO  03:46:48,518 - #43 bt
INFO  03:46:48,518 - #34 ?
INFO  03:46:48,518 - #43 bodovi
INFO  03:46:48,520 - #32 :
INFO  03:46:48,520 - #43 bodovi
INFO  03:46:48,522 - #49 +
INFO  03:46:48,522 - #42 10
INFO  03:46:48,522 - #38 )
INFO  03:46:48,522 - #33 ;
INFO  03:46:48,522 - #18 print
INFO  03:46:48,522 - #37 (
INFO  03:46:48,522 - #45 false
INFO  03:46:48,522 - #34 ?
INFO  03:46:48,522 - #43 bodovi
INFO  03:46:48,522 - #49 +
INFO  03:46:48,522 - #42 20
INFO  03:46:48,523 - #32 :
INFO  03:46:48,523 - #43 bodovi
INFO  03:46:48,523 - #49 +
INFO  03:46:48,523 - #42 30
INFO  03:46:48,523 - #38 )
INFO  03:46:48,523 - #33 ;
INFO  03:46:48,523 - #18 print
INFO  03:46:48,523 - #37 (
INFO  03:46:48,523 - #45 false
INFO  03:46:48,523 - #34 ?
INFO  03:46:48,523 - #44 +
INFO  03:46:48,523 - #32 :
INFO  03:46:48,523 - #44 -
INFO  03:46:48,524 - #38 )
INFO  03:46:48,524 - #33 ;
INFO  03:46:48,524 - #36 }
INFO  03:46:48,524 - #36 }
INFO  03:46:48,538 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            NoGroupDecl(
            ) [NoGroupDecl]
            GroupDeclarationsConsts(
              ConstDeclClass(
                Type(
                 int
                ) [Type]
                ConstListSingle(
                  ConstListNoArray(
                   nula
                    ValuesNumber(
                     0
                    ) [ValuesNumber]
                  ) [ConstListNoArray]
                ) [ConstListSingle]
              ) [ConstDeclClass]
            ) [GroupDeclarationsConsts]
          ) [GroupDeclarations]
          GroupDeclarationsConsts(
            ConstDeclClass(
              Type(
               int
              ) [Type]
              ConstListSingle(
                ConstListNoArray(
                 jedan
                  ValuesNumber(
                   1
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListSingle]
            ) [ConstDeclClass]
          ) [GroupDeclarationsConsts]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListSingle(
              ConstListNoArray(
               pet
                ValuesNumber(
                 5
                ) [ValuesNumber]
              ) [ConstListNoArray]
            ) [ConstListSingle]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             niz
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         char
        ) [Type]
        VarListSingle(
          VarClassArray(
           nizch
          ) [VarClassArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               bodovi
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             bt
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        Statements(
                                                          NoStmt(
                                                          ) [NoStmt]
                                                          Assignment(
                                                            DesignatorStatementOptionsClassAssignExpression(
                                                              Designator(
                                                                DesigIdent(
                                                                 bodovi
                                                                ) [DesigIdent]
                                                                NoOptionalDesignatorClass(
                                                                ) [NoOptionalDesignatorClass]
                                                              ) [Designator]
                                                              AssignOpClass(
                                                                AssignOperationClass(
                                                                ) [AssignOperationClass]
                                                              ) [AssignOpClass]
                                                              ClassOneClass(
                                                                NormalExpressionClass(
                                                                  ExprFirstOptionClassWithMinus(
                                                                    TermClass(
                                                                      NumberConst(
                                                                       0
                                                                      ) [NumberConst]
                                                                      NoTermOptionalListClass(
                                                                      ) [NoTermOptionalListClass]
                                                                    ) [TermClass]
                                                                    NoExprOptionalListClass(
                                                                    ) [NoExprOptionalListClass]
                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                ) [NormalExpressionClass]
                                                              ) [ClassOneClass]
                                                            ) [DesignatorStatementOptionsClassAssignExpression]
                                                          ) [Assignment]
                                                        ) [Statements]
                                                        Assignment(
                                                          DesignatorStatementPlusPlus(
                                                            Designator(
                                                              DesigIdent(
                                                               bodovi
                                                              ) [DesigIdent]
                                                              NoOptionalDesignatorClass(
                                                              ) [NoOptionalDesignatorClass]
                                                            ) [Designator]
                                                          ) [DesignatorStatementPlusPlus]
                                                        ) [Assignment]
                                                      ) [Statements]
                                                      Assignment(
                                                        DesignatorStatementOptionsClassAssignExpression(
                                                          Designator(
                                                            DesigIdent(
                                                             bodovi
                                                            ) [DesigIdent]
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                          AssignOpClass(
                                                            AssignOperationClass(
                                                            ) [AssignOperationClass]
                                                          ) [AssignOpClass]
                                                          ClassOneClass(
                                                            NormalExpressionClass(
                                                              ExprFirstOptionClassWithMinus(
                                                                TermClass(
                                                                  DesignatorClass(
                                                                    Designator(
                                                                      DesigIdent(
                                                                       bodovi
                                                                      ) [DesigIdent]
                                                                      NoOptionalDesignatorClass(
                                                                      ) [NoOptionalDesignatorClass]
                                                                    ) [Designator]
                                                                  ) [DesignatorClass]
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                ) [TermClass]
                                                                ExprOptionalListClass(
                                                                  NoExprOptionalListClass(
                                                                  ) [NoExprOptionalListClass]
                                                                  PlusOperation(
                                                                   +
                                                                  ) [PlusOperation]
                                                                  TermClass(
                                                                    DesignatorClass(
                                                                      Designator(
                                                                        DesigIdent(
                                                                         jedan
                                                                        ) [DesigIdent]
                                                                        NoOptionalDesignatorClass(
                                                                        ) [NoOptionalDesignatorClass]
                                                                      ) [Designator]
                                                                    ) [DesignatorClass]
                                                                    NoTermOptionalListClass(
                                                                    ) [NoTermOptionalListClass]
                                                                  ) [TermClass]
                                                                ) [ExprOptionalListClass]
                                                              ) [ExprFirstOptionClassWithMinus]
                                                            ) [NormalExpressionClass]
                                                          ) [ClassOneClass]
                                                        ) [DesignatorStatementOptionsClassAssignExpression]
                                                      ) [Assignment]
                                                    ) [Statements]
                                                    Assignment(
                                                      DesignatorStatementOptionsClassAssignExpression(
                                                        Designator(
                                                          DesigIdent(
                                                           bodovi
                                                          ) [DesigIdent]
                                                          NoOptionalDesignatorClass(
                                                          ) [NoOptionalDesignatorClass]
                                                        ) [Designator]
                                                        AssignOpClass(
                                                          AssignOperationClass(
                                                          ) [AssignOperationClass]
                                                        ) [AssignOpClass]
                                                        ClassOneClass(
                                                          NormalExpressionClass(
                                                            ExprFirstOptionClassWithMinus(
                                                              TermClass(
                                                                DesignatorClass(
                                                                  Designator(
                                                                    DesigIdent(
                                                                     bodovi
                                                                    ) [DesigIdent]
                                                                    NoOptionalDesignatorClass(
                                                                    ) [NoOptionalDesignatorClass]
                                                                  ) [Designator]
                                                                ) [DesignatorClass]
                                                                TermOptionalListClass(
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                  MultiplyOperationClass(
                                                                   *
                                                                  ) [MultiplyOperationClass]
                                                                  DesignatorClass(
                                                                    Designator(
                                                                      DesigIdent(
                                                                       pet
                                                                      ) [DesigIdent]
                                                                      NoOptionalDesignatorClass(
                                                                      ) [NoOptionalDesignatorClass]
                                                                    ) [Designator]
                                                                  ) [DesignatorClass]
                                                                ) [TermOptionalListClass]
                                                              ) [TermClass]
                                                              NoExprOptionalListClass(
                                                              ) [NoExprOptionalListClass]
                                                            ) [ExprFirstOptionClassWithMinus]
                                                          ) [NormalExpressionClass]
                                                        ) [ClassOneClass]
                                                      ) [DesignatorStatementOptionsClassAssignExpression]
                                                    ) [Assignment]
                                                  ) [Statements]
                                                  Assignment(
                                                    DesignatorStatementMinusMinus(
                                                      Designator(
                                                        DesigIdent(
                                                         bodovi
                                                        ) [DesigIdent]
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorStatementMinusMinus]
                                                  ) [Assignment]
                                                ) [Statements]
                                                PrintStmt(
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          DesignatorClass(
                                                            Designator(
                                                              DesigIdent(
                                                               bodovi
                                                              ) [DesigIdent]
                                                              NoOptionalDesignatorClass(
                                                              ) [NoOptionalDesignatorClass]
                                                            ) [Designator]
                                                          ) [DesignatorClass]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                  NoCommaNumberClass(
                                                  ) [NoCommaNumberClass]
                                                ) [PrintStmt]
                                              ) [Statements]
                                              Assignment(
                                                DesignatorStatementOptionsClassAssignExpression(
                                                  Designator(
                                                    DesigIdent(
                                                     niz
                                                    ) [DesigIdent]
                                                    NoOptionalDesignatorClass(
                                                    ) [NoOptionalDesignatorClass]
                                                  ) [Designator]
                                                  AssignOpClass(
                                                    AssignOperationClass(
                                                    ) [AssignOperationClass]
                                                  ) [AssignOpClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NewFactorClass(
                                                            Type(
                                                             int
                                                            ) [Type]
                                                            FactorOptionalSecondClass(
                                                              ClassOneClass(
                                                                NormalExpressionClass(
                                                                  ExprFirstOptionClassWithMinus(
                                                                    TermClass(
                                                                      NumberConst(
                                                                       3
                                                                      ) [NumberConst]
                                                                      NoTermOptionalListClass(
                                                                      ) [NoTermOptionalListClass]
                                                                    ) [TermClass]
                                                                    NoExprOptionalListClass(
                                                                    ) [NoExprOptionalListClass]
                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                ) [NormalExpressionClass]
                                                              ) [ClassOneClass]
                                                            ) [FactorOptionalSecondClass]
                                                          ) [NewFactorClass]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [DesignatorStatementOptionsClassAssignExpression]
                                              ) [Assignment]
                                            ) [Statements]
                                            Assignment(
                                              DesignatorStatementOptionsClassAssignExpression(
                                                Designator(
                                                  DesigIdent(
                                                   niz
                                                  ) [DesigIdent]
                                                  OptionalDesignatorArray(
                                                    HelperClass(
                                                    ) [HelperClass]
                                                    LSquareClass(
                                                    ) [LSquareClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            DesignatorClass(
                                                              Designator(
                                                                DesigIdent(
                                                                 nula
                                                                ) [DesigIdent]
                                                                NoOptionalDesignatorClass(
                                                                ) [NoOptionalDesignatorClass]
                                                              ) [Designator]
                                                            ) [DesignatorClass]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [OptionalDesignatorArray]
                                                ) [Designator]
                                                AssignOpClass(
                                                  AssignOperationClass(
                                                  ) [AssignOperationClass]
                                                ) [AssignOpClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        DesignatorClass(
                                                          Designator(
                                                            DesigIdent(
                                                             jedan
                                                            ) [DesigIdent]
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                        ) [DesignatorClass]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [DesignatorStatementOptionsClassAssignExpression]
                                            ) [Assignment]
                                          ) [Statements]
                                          Assignment(
                                            DesignatorStatementOptionsClassAssignExpression(
                                              Designator(
                                                DesigIdent(
                                                 niz
                                                ) [DesigIdent]
                                                OptionalDesignatorArray(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  LSquareClass(
                                                  ) [LSquareClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           1
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [OptionalDesignatorArray]
                                              ) [Designator]
                                              AssignOpClass(
                                                AssignOperationClass(
                                                ) [AssignOperationClass]
                                              ) [AssignOpClass]
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      NumberConst(
                                                       2
                                                      ) [NumberConst]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                            ) [DesignatorStatementOptionsClassAssignExpression]
                                          ) [Assignment]
                                        ) [Statements]
                                        Assignment(
                                          DesignatorStatementOptionsClassAssignExpression(
                                            Designator(
                                              DesigIdent(
                                               niz
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        DesignatorClass(
                                                          Designator(
                                                            DesigIdent(
                                                             niz
                                                            ) [DesigIdent]
                                                            OptionalDesignatorArray(
                                                              HelperClass(
                                                              ) [HelperClass]
                                                              LSquareClass(
                                                              ) [LSquareClass]
                                                              ClassOneClass(
                                                                NormalExpressionClass(
                                                                  ExprFirstOptionClassWithMinus(
                                                                    TermClass(
                                                                      DesignatorClass(
                                                                        Designator(
                                                                          DesigIdent(
                                                                           jedan
                                                                          ) [DesigIdent]
                                                                          NoOptionalDesignatorClass(
                                                                          ) [NoOptionalDesignatorClass]
                                                                        ) [Designator]
                                                                      ) [DesignatorClass]
                                                                      NoTermOptionalListClass(
                                                                      ) [NoTermOptionalListClass]
                                                                    ) [TermClass]
                                                                    NoExprOptionalListClass(
                                                                    ) [NoExprOptionalListClass]
                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                ) [NormalExpressionClass]
                                                              ) [ClassOneClass]
                                                            ) [OptionalDesignatorArray]
                                                          ) [Designator]
                                                        ) [DesignatorClass]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                            AssignOpClass(
                                              AssignOperationClass(
                                              ) [AssignOperationClass]
                                            ) [AssignOpClass]
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      Designator(
                                                        DesigIdent(
                                                         niz
                                                        ) [DesigIdent]
                                                        OptionalDesignatorArray(
                                                          HelperClass(
                                                          ) [HelperClass]
                                                          LSquareClass(
                                                          ) [LSquareClass]
                                                          ClassOneClass(
                                                            NormalExpressionClass(
                                                              ExprFirstOptionClassWithMinus(
                                                                TermClass(
                                                                  DesignatorClass(
                                                                    Designator(
                                                                      DesigIdent(
                                                                       niz
                                                                      ) [DesigIdent]
                                                                      OptionalDesignatorArray(
                                                                        HelperClass(
                                                                        ) [HelperClass]
                                                                        LSquareClass(
                                                                        ) [LSquareClass]
                                                                        ClassOneClass(
                                                                          NormalExpressionClass(
                                                                            ExprFirstOptionClassWithMinus(
                                                                              TermClass(
                                                                                NumberConst(
                                                                                 0
                                                                                ) [NumberConst]
                                                                                NoTermOptionalListClass(
                                                                                ) [NoTermOptionalListClass]
                                                                              ) [TermClass]
                                                                              NoExprOptionalListClass(
                                                                              ) [NoExprOptionalListClass]
                                                                            ) [ExprFirstOptionClassWithMinus]
                                                                          ) [NormalExpressionClass]
                                                                        ) [ClassOneClass]
                                                                      ) [OptionalDesignatorArray]
                                                                    ) [Designator]
                                                                  ) [DesignatorClass]
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                ) [TermClass]
                                                                NoExprOptionalListClass(
                                                                ) [NoExprOptionalListClass]
                                                              ) [ExprFirstOptionClassWithMinus]
                                                            ) [NormalExpressionClass]
                                                          ) [ClassOneClass]
                                                        ) [OptionalDesignatorArray]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    TermOptionalListClass(
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                      MultiplyOperationClass(
                                                       *
                                                      ) [MultiplyOperationClass]
                                                      NumberConst(
                                                       3
                                                      ) [NumberConst]
                                                    ) [TermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                          ) [DesignatorStatementOptionsClassAssignExpression]
                                        ) [Assignment]
                                      ) [Statements]
                                      Assignment(
                                        DesignatorStatementOptionsClassAssignExpression(
                                          Designator(
                                            DesigIdent(
                                             bodovi
                                            ) [DesigIdent]
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                          AssignOpClass(
                                            AssignOperationClass(
                                            ) [AssignOperationClass]
                                          ) [AssignOpClass]
                                          ClassOneClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  DesignatorClass(
                                                    Designator(
                                                      DesigIdent(
                                                       niz
                                                      ) [DesigIdent]
                                                      OptionalDesignatorArray(
                                                        HelperClass(
                                                        ) [HelperClass]
                                                        LSquareClass(
                                                        ) [LSquareClass]
                                                        ClassOneClass(
                                                          NormalExpressionClass(
                                                            ExprFirstOptionClassWithMinus(
                                                              TermClass(
                                                                NumberConst(
                                                                 2
                                                                ) [NumberConst]
                                                                NoTermOptionalListClass(
                                                                ) [NoTermOptionalListClass]
                                                              ) [TermClass]
                                                              NoExprOptionalListClass(
                                                              ) [NoExprOptionalListClass]
                                                            ) [ExprFirstOptionClassWithMinus]
                                                          ) [NormalExpressionClass]
                                                        ) [ClassOneClass]
                                                      ) [OptionalDesignatorArray]
                                                    ) [Designator]
                                                  ) [DesignatorClass]
                                                  TermOptionalListClass(
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                    DivideOperationClass(
                                                     /
                                                    ) [DivideOperationClass]
                                                    DesignatorClass(
                                                      Designator(
                                                        DesigIdent(
                                                         niz
                                                        ) [DesigIdent]
                                                        OptionalDesignatorArray(
                                                          HelperClass(
                                                          ) [HelperClass]
                                                          LSquareClass(
                                                          ) [LSquareClass]
                                                          ClassOneClass(
                                                            NormalExpressionClass(
                                                              ExprFirstOptionClassWithMinus(
                                                                TermClass(
                                                                  NumberConst(
                                                                   0
                                                                  ) [NumberConst]
                                                                  NoTermOptionalListClass(
                                                                  ) [NoTermOptionalListClass]
                                                                ) [TermClass]
                                                                NoExprOptionalListClass(
                                                                ) [NoExprOptionalListClass]
                                                              ) [ExprFirstOptionClassWithMinus]
                                                            ) [NormalExpressionClass]
                                                          ) [ClassOneClass]
                                                        ) [OptionalDesignatorArray]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                  ) [TermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                          ) [ClassOneClass]
                                        ) [DesignatorStatementOptionsClassAssignExpression]
                                      ) [Assignment]
                                    ) [Statements]
                                    PrintStmt(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   bodovi
                                                  ) [DesigIdent]
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                      NoCommaNumberClass(
                                      ) [NoCommaNumberClass]
                                    ) [PrintStmt]
                                  ) [Statements]
                                  PrintStmt(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 niz
                                                ) [DesigIdent]
                                                OptionalDesignatorArray(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  LSquareClass(
                                                  ) [LSquareClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           2
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [OptionalDesignatorArray]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                    NoCommaNumberClass(
                                    ) [NoCommaNumberClass]
                                  ) [PrintStmt]
                                ) [Statements]
                                Assignment(
                                  DesignatorStatementOptionsClassAssignExpression(
                                    Designator(
                                      DesigIdent(
                                       nizch
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    AssignOpClass(
                                      AssignOperationClass(
                                      ) [AssignOperationClass]
                                    ) [AssignOpClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NewFactorClass(
                                              Type(
                                               char
                                              ) [Type]
                                              FactorOptionalSecondClass(
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         3
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [FactorOptionalSecondClass]
                                            ) [NewFactorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                ) [Assignment]
                              ) [Statements]
                              Assignment(
                                DesignatorStatementOptionsClassAssignExpression(
                                  Designator(
                                    DesigIdent(
                                     nizch
                                    ) [DesigIdent]
                                    OptionalDesignatorArray(
                                      HelperClass(
                                      ) [HelperClass]
                                      LSquareClass(
                                      ) [LSquareClass]
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              NumberConst(
                                               0
                                              ) [NumberConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                    ) [OptionalDesignatorArray]
                                  ) [Designator]
                                  AssignOpClass(
                                    AssignOperationClass(
                                    ) [AssignOperationClass]
                                  ) [AssignOpClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          CharConst(
                                           a
                                          ) [CharConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [DesignatorStatementOptionsClassAssignExpression]
                              ) [Assignment]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementOptionsClassAssignExpression(
                                Designator(
                                  DesigIdent(
                                   nizch
                                  ) [DesigIdent]
                                  OptionalDesignatorArray(
                                    HelperClass(
                                    ) [HelperClass]
                                    LSquareClass(
                                    ) [LSquareClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 jedan
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [OptionalDesignatorArray]
                                ) [Designator]
                                AssignOpClass(
                                  AssignOperationClass(
                                  ) [AssignOperationClass]
                                ) [AssignOpClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        CharConst(
                                         b
                                        ) [CharConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [DesignatorStatementOptionsClassAssignExpression]
                            ) [Assignment]
                          ) [Statements]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 nizch
                                ) [DesigIdent]
                                OptionalDesignatorArray(
                                  HelperClass(
                                  ) [HelperClass]
                                  LSquareClass(
                                  ) [LSquareClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               pet
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        ExprOptionalListClass(
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                          MinusOperation(
                                           -
                                          ) [MinusOperation]
                                          TermClass(
                                            NumberConst(
                                             3
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                        ) [ExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [OptionalDesignatorArray]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      CharConst(
                                       c
                                      ) [CharConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       nizch
                                      ) [DesigIdent]
                                      OptionalDesignatorArray(
                                        HelperClass(
                                        ) [HelperClass]
                                        LSquareClass(
                                        ) [LSquareClass]
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                NumberConst(
                                                 1
                                                ) [NumberConst]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                      ) [OptionalDesignatorArray]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          NoCommaNumberClass(
                          ) [NoCommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     nizch
                                    ) [DesigIdent]
                                    OptionalDesignatorArray(
                                      HelperClass(
                                      ) [HelperClass]
                                      LSquareClass(
                                      ) [LSquareClass]
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   jedan
                                                  ) [DesigIdent]
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              TermOptionalListClass(
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                                MultiplyOperationClass(
                                                 *
                                                ) [MultiplyOperationClass]
                                                NumberConst(
                                                 2
                                                ) [NumberConst]
                                              ) [TermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                    ) [OptionalDesignatorArray]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           bodovi
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     bodovi
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              ExprOptionalListClass(
                                ExprOptionalListClass(
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                  PlusOperation(
                                   +
                                  ) [PlusOperation]
                                  TermClass(
                                    ParenFactorClass(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   pet
                                                  ) [DesigIdent]
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              TermOptionalListClass(
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                                MultiplyOperationClass(
                                                 *
                                                ) [MultiplyOperationClass]
                                                DesignatorClass(
                                                  Designator(
                                                    DesigIdent(
                                                     jedan
                                                    ) [DesigIdent]
                                                    NoOptionalDesignatorClass(
                                                    ) [NoOptionalDesignatorClass]
                                                  ) [Designator]
                                                ) [DesignatorClass]
                                              ) [TermOptionalListClass]
                                            ) [TermClass]
                                            ExprOptionalListClass(
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                              MinusOperation(
                                               -
                                              ) [MinusOperation]
                                              TermClass(
                                                NumberConst(
                                                 1
                                                ) [NumberConst]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                            ) [ExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                    ) [ParenFactorClass]
                                    TermOptionalListClass(
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                      MultiplyOperationClass(
                                       *
                                      ) [MultiplyOperationClass]
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           bodovi
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                    ) [TermOptionalListClass]
                                  ) [TermClass]
                                ) [ExprOptionalListClass]
                                MinusOperation(
                                 -
                                ) [MinusOperation]
                                TermClass(
                                  ParenFactorClass(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             3
                                            ) [NumberConst]
                                            TermOptionalListClass(
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                              ModOperationClass(
                                               %
                                              ) [ModOperationClass]
                                              NumberConst(
                                               2
                                              ) [NumberConst]
                                            ) [TermOptionalListClass]
                                          ) [TermClass]
                                          ExprOptionalListClass(
                                            ExprOptionalListClass(
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                              PlusOperation(
                                               +
                                              ) [PlusOperation]
                                              TermClass(
                                                NumberConst(
                                                 3
                                                ) [NumberConst]
                                                TermOptionalListClass(
                                                  NoTermOptionalListClass(
                                                  ) [NoTermOptionalListClass]
                                                  MultiplyOperationClass(
                                                   *
                                                  ) [MultiplyOperationClass]
                                                  NumberConst(
                                                   2
                                                  ) [NumberConst]
                                                ) [TermOptionalListClass]
                                              ) [TermClass]
                                            ) [ExprOptionalListClass]
                                            MinusOperation(
                                             -
                                            ) [MinusOperation]
                                            TermClass(
                                              NumberConst(
                                               3
                                              ) [NumberConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                          ) [ExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [ParenFactorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                              ) [ExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 bodovi
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                ReadClass(
                  Designator(
                    DesigIdent(
                     bodovi
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                ) [ReadClass]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     bt
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          BooleanClassConstFactor(
                           true
                          ) [BooleanClassConstFactor]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            PrintStmt(
              ClassTwoClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           bt
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
                TernaryClass(
                ) [TernaryClass]
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           bodovi
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
                ColonClass(
                ) [ColonClass]
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           bodovi
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    ExprOptionalListClass(
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                      PlusOperation(
                       +
                      ) [PlusOperation]
                      TermClass(
                        NumberConst(
                         10
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                    ) [ExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassTwoClass]
              NoCommaNumberClass(
              ) [NoCommaNumberClass]
            ) [PrintStmt]
          ) [Statements]
          PrintStmt(
            ClassTwoClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    BooleanClassConstFactor(
                     false
                    ) [BooleanClassConstFactor]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
              TernaryClass(
              ) [TernaryClass]
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         bodovi
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  ExprOptionalListClass(
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                    PlusOperation(
                     +
                    ) [PlusOperation]
                    TermClass(
                      NumberConst(
                       20
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                  ) [ExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
              ColonClass(
              ) [ColonClass]
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         bodovi
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  ExprOptionalListClass(
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                    PlusOperation(
                     +
                    ) [PlusOperation]
                    TermClass(
                      NumberConst(
                       30
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                  ) [ExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassTwoClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        PrintStmt(
          ClassTwoClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  BooleanClassConstFactor(
                   false
                  ) [BooleanClassConstFactor]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
            TernaryClass(
            ) [TernaryClass]
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  CharConst(
                   +
                  ) [CharConst]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
            ColonClass(
            ) [ColonClass]
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  CharConst(
                   -
                  ) [CharConst]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassTwoClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:46:48,541 - ===================================
INFO  03:46:48,545 - PROGRAM NAME DETECTED => test301 ON LINE 3
INFO  03:46:48,545 - CONST VALUE 0 IS BEING USED! ON LINE 5
INFO  03:46:48,545 - CONST VARIABLE nula IS BEING DEFINED! ON LINE 5
INFO  03:46:48,545 - CONST VALUE 1 IS BEING USED! ON LINE 6
INFO  03:46:48,545 - CONST VARIABLE jedan IS BEING DEFINED! ON LINE 6
INFO  03:46:48,545 - CONST VALUE 5 IS BEING USED! ON LINE 7
INFO  03:46:48,545 - CONST VARIABLE pet IS BEING DEFINED! ON LINE 7
INFO  03:46:48,545 - ARRAY VARIABLE niz IS BEING DEFINED! ON LINE 9
INFO  03:46:48,545 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  03:46:48,545 - ARRAY VARIABLE nizch IS BEING DEFINED! ON LINE 10
INFO  03:46:48,545 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 10
INFO  03:46:48,546 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 13
INFO  03:46:48,546 - VARIABLE bodovi IS BEING DEFINED! ON LINE 14
INFO  03:46:48,546 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 14
INFO  03:46:48,546 - VARIABLE bt IS BEING DEFINED! ON LINE 15
INFO  03:46:48,546 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 15
INFO  03:46:48,546 - METHOD BODY STARTING!
INFO  03:46:48,546 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,546 - BEGINNING OF AN ASSIGNEMENT! ON LINE 17
INFO  03:46:48,546 - CONST NUMBER 0 ON LINE 17
INFO  03:46:48,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  03:46:48,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  03:46:48,546 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 17
INFO  03:46:48,546 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,546 - USING ++ ON bodovi ON LINE 18
INFO  03:46:48,546 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,546 - BEGINNING OF AN ASSIGNEMENT! ON LINE 19
INFO  03:46:48,546 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,546 - WE ARE USING A VARIABLE OF TYPE int ON LINE 19
INFO  03:46:48,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  03:46:48,546 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  03:46:48,546 - WE ARE USING A VARIABLE OF TYPE int ON LINE 19
INFO  03:46:48,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  03:46:48,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  03:46:48,547 - USING INTEGERS IN TERM! ON LINE 19
INFO  03:46:48,547 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 19
INFO  03:46:48,547 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,547 - BEGINNING OF AN ASSIGNEMENT! ON LINE 20
INFO  03:46:48,547 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,547 - WE ARE USING A VARIABLE OF TYPE int ON LINE 20
INFO  03:46:48,547 - CURRENT VARIABLE IN USE IS pet AND IT IS OF TYPE int
INFO  03:46:48,547 - WE ARE USING A VARIABLE OF TYPE int ON LINE 20
INFO  03:46:48,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  03:46:48,547 - USING INTEGERS IN TERM! ON LINE 20
INFO  03:46:48,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  03:46:48,547 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 20
INFO  03:46:48,547 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,547 - USING -- ON bodovi ON LINE 21
INFO  03:46:48,547 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,547 - WE ARE USING A VARIABLE OF TYPE int ON LINE 22
INFO  03:46:48,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  03:46:48,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  03:46:48,547 - PRINT FUNCTION CALL IN USE! ON LINE 22
INFO  03:46:48,547 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,548 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  03:46:48,548 - CONST NUMBER 3 ON LINE 25
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  03:46:48,548 - USAGE OF KEYWORD NEW! ON LINE 25
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  03:46:48,548 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  03:46:48,548 - CURRENT VARIABLE IN USE IS nula AND IT IS OF TYPE int
INFO  03:46:48,548 - WE ARE USING A VARIABLE OF TYPE int ON LINE 26
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  03:46:48,548 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,548 - BEGINNING OF AN ASSIGNEMENT! ON LINE 26
INFO  03:46:48,548 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  03:46:48,548 - WE ARE USING A VARIABLE OF TYPE int ON LINE 26
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  03:46:48,548 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 26
INFO  03:46:48,548 - CONST NUMBER 1 ON LINE 27
INFO  03:46:48,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:46:48,549 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 27
INFO  03:46:48,549 - CONST NUMBER 2 ON LINE 27
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:46:48,549 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 27
INFO  03:46:48,549 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  03:46:48,549 - WE ARE USING A VARIABLE OF TYPE int ON LINE 28
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,549 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,549 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,549 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 28
INFO  03:46:48,549 - CONST NUMBER 0 ON LINE 28
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,549 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,549 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,549 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,550 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  03:46:48,550 - CONST NUMBER 3 ON LINE 28
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:46:48,550 - USING INTEGERS IN TERM! ON LINE 28
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  03:46:48,550 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 28
INFO  03:46:48,550 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,550 - BEGINNING OF AN ASSIGNEMENT! ON LINE 29
INFO  03:46:48,550 - CONST NUMBER 2 ON LINE 29
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  03:46:48,550 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,550 - WE ARE USING AN ARRAY OF TYPE int ON LINE 29
INFO  03:46:48,550 - CONST NUMBER 0 ON LINE 29
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  03:46:48,550 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,550 - WE ARE USING AN ARRAY OF TYPE int ON LINE 29
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  03:46:48,550 - USING INTEGERS IN TERM! ON LINE 29
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  03:46:48,550 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 29
INFO  03:46:48,550 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,550 - WE ARE USING A VARIABLE OF TYPE int ON LINE 30
INFO  03:46:48,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:46:48,551 - PRINT FUNCTION CALL IN USE! ON LINE 30
INFO  03:46:48,551 - CONST NUMBER 2 ON LINE 31
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  03:46:48,551 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  03:46:48,551 - WE ARE USING AN ARRAY OF TYPE int ON LINE 31
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  03:46:48,551 - PRINT FUNCTION CALL IN USE! ON LINE 31
INFO  03:46:48,551 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  03:46:48,551 - BEGINNING OF AN ASSIGNEMENT! ON LINE 34
INFO  03:46:48,551 - CONST NUMBER 3 ON LINE 34
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  03:46:48,551 - USAGE OF KEYWORD NEW! ON LINE 34
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  03:46:48,551 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 34
INFO  03:46:48,551 - CONST NUMBER 0 ON LINE 35
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  03:46:48,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  03:46:48,551 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  03:46:48,551 - BEGINNING OF AN ASSIGNEMENT! ON LINE 35
INFO  03:46:48,552 - CONST CHAR a ON LINE 35
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  03:46:48,552 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 35
INFO  03:46:48,552 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  03:46:48,552 - WE ARE USING A VARIABLE OF TYPE int ON LINE 36
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  03:46:48,552 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  03:46:48,552 - BEGINNING OF AN ASSIGNEMENT! ON LINE 36
INFO  03:46:48,552 - CONST CHAR b ON LINE 36
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  03:46:48,552 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 36
INFO  03:46:48,552 - CURRENT VARIABLE IN USE IS pet AND IT IS OF TYPE int
INFO  03:46:48,552 - WE ARE USING A VARIABLE OF TYPE int ON LINE 37
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  03:46:48,552 - CONST NUMBER 3 ON LINE 37
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  03:46:48,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  03:46:48,552 - USING INTEGERS IN TERM! ON LINE 37
INFO  03:46:48,552 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  03:46:48,552 - BEGINNING OF AN ASSIGNEMENT! ON LINE 37
INFO  03:46:48,552 - CONST CHAR c ON LINE 37
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  03:46:48,553 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 37
INFO  03:46:48,553 - CONST NUMBER 1 ON LINE 38
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  03:46:48,553 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  03:46:48,553 - WE ARE USING AN ARRAY OF TYPE char ON LINE 38
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  03:46:48,553 - PRINT FUNCTION CALL IN USE! ON LINE 38
INFO  03:46:48,553 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  03:46:48,553 - WE ARE USING A VARIABLE OF TYPE int ON LINE 39
INFO  03:46:48,553 - CONST NUMBER 2 ON LINE 39
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  03:46:48,553 - USING INTEGERS IN TERM! ON LINE 39
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  03:46:48,553 - CURRENT VARIABLE IN USE IS nizch AND IT IS OF TYPE array
INFO  03:46:48,553 - WE ARE USING AN ARRAY OF TYPE char ON LINE 39
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  03:46:48,553 - PRINT FUNCTION CALL IN USE! ON LINE 39
INFO  03:46:48,553 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,553 - BEGINNING OF AN ASSIGNEMENT! ON LINE 42
INFO  03:46:48,553 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,553 - WE ARE USING A VARIABLE OF TYPE int ON LINE 42
INFO  03:46:48,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  03:46:48,554 - CURRENT VARIABLE IN USE IS pet AND IT IS OF TYPE int
INFO  03:46:48,554 - WE ARE USING A VARIABLE OF TYPE int ON LINE 42
INFO  03:46:48,554 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  03:46:48,554 - WE ARE USING A VARIABLE OF TYPE int ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 42
INFO  03:46:48,554 - CONST NUMBER 1 ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 42
INFO  03:46:48,554 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,554 - WE ARE USING A VARIABLE OF TYPE int ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  03:46:48,554 - CONST NUMBER 3 ON LINE 42
INFO  03:46:48,554 - CONST NUMBER 2 ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 42
INFO  03:46:48,554 - CONST NUMBER 3 ON LINE 42
INFO  03:46:48,554 - CONST NUMBER 2 ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 54
INFO  03:46:48,554 - CONST NUMBER 3 ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 54
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 42
INFO  03:46:48,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 11
INFO  03:46:48,554 - USING INTEGERS IN TERM! ON LINE 42
INFO  03:46:48,554 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 42
INFO  03:46:48,555 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,555 - WE ARE USING A VARIABLE OF TYPE int ON LINE 43
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  03:46:48,555 - PRINT FUNCTION CALL IN USE! ON LINE 43
INFO  03:46:48,555 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,555 - CURRENT VARIABLE IN USE IS bt AND IT IS OF TYPE boolean
INFO  03:46:48,555 - BEGINNING OF AN ASSIGNEMENT! ON LINE 46
INFO  03:46:48,555 - CONST CHAR true ON LINE 46
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  03:46:48,555 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 46
INFO  03:46:48,555 - CURRENT VARIABLE IN USE IS bt AND IT IS OF TYPE boolean
INFO  03:46:48,555 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 48
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:46:48,555 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,555 - WE ARE USING A VARIABLE OF TYPE int ON LINE 48
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:46:48,555 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,555 - WE ARE USING A VARIABLE OF TYPE int ON LINE 48
INFO  03:46:48,555 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:46:48,556 - CONST NUMBER 10 ON LINE 48
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  03:46:48,556 - USING INTEGERS IN TERM! ON LINE 48
INFO  03:46:48,556 - SUCCESSFUL TERNARY! TYPES: int AND int ! ON LINE 48
INFO  03:46:48,556 - PRINT FUNCTION CALL IN USE! ON LINE 48
INFO  03:46:48,556 - CONST CHAR false ON LINE 49
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  03:46:48,556 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,556 - WE ARE USING A VARIABLE OF TYPE int ON LINE 49
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  03:46:48,556 - CONST NUMBER 20 ON LINE 49
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  03:46:48,556 - USING INTEGERS IN TERM! ON LINE 49
INFO  03:46:48,556 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  03:46:48,556 - WE ARE USING A VARIABLE OF TYPE int ON LINE 49
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  03:46:48,556 - CONST NUMBER 30 ON LINE 49
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  03:46:48,556 - USING INTEGERS IN TERM! ON LINE 49
INFO  03:46:48,556 - SUCCESSFUL TERNARY! TYPES: int AND int ! ON LINE 49
INFO  03:46:48,556 - PRINT FUNCTION CALL IN USE! ON LINE 49
INFO  03:46:48,556 - CONST CHAR false ON LINE 50
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:46:48,556 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:46:48,557 - CONST CHAR + ON LINE 50
INFO  03:46:48,557 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:46:48,557 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:46:48,557 - CONST CHAR - ON LINE 50
INFO  03:46:48,557 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:46:48,557 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  03:46:48,557 - SUCCESSFUL TERNARY! TYPES: char AND char ! ON LINE 50
INFO  03:46:48,557 - PRINT FUNCTION CALL IN USE! ON LINE 50
INFO  03:46:48,557 - METHOD BODY ENDING!
INFO  03:46:48,557 - END OF DEFINING FUNCTION main
INFO  03:46:48,557 - PROGRAM ENDED => test301 ON LINE 3
INFO  03:46:48,557 -  Deklarisanih promenljivih ima = 4
INFO  03:46:48,557 - ===================================
INFO  03:46:48,562 - Parsiranje uspesno zavrseno!
