INFO  22:55:30,158 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  22:55:30,313 - #2 program
INFO  22:55:30,314 - #43 MJProgram
INFO  22:55:30,315 - #35 {
INFO  22:55:30,319 - #5 void
INFO  22:55:30,321 - #43 main
INFO  22:55:30,322 - #37 (
INFO  22:55:30,322 - #38 )
INFO  22:55:30,324 - #43 bool
INFO  22:55:30,329 - #43 e
INFO  22:55:30,331 - #33 ;
INFO  22:55:30,331 - #43 char
INFO  22:55:30,332 - #43 pr
INFO  22:55:30,333 - #33 ;
INFO  22:55:30,333 - #43 bool
INFO  22:55:30,333 - #43 k
INFO  22:55:30,334 - #33 ;
INFO  22:55:30,334 - #43 bool
INFO  22:55:30,334 - #43 prr
INFO  22:55:30,334 - #33 ;
INFO  22:55:30,334 - #43 int
INFO  22:55:30,334 - #43 c
INFO  22:55:30,344 - #33 ;
INFO  22:55:30,344 - #43 int
INFO  22:55:30,344 - #43 r
INFO  22:55:30,344 - #33 ;
INFO  22:55:30,344 - #43 int
INFO  22:55:30,344 - #43 a
INFO  22:55:30,345 - #31 ,
INFO  22:55:30,345 - #43 b
INFO  22:55:30,345 - #33 ;
INFO  22:55:30,345 - #35 {
INFO  22:55:30,345 - #43 e
INFO  22:55:30,347 - #19 =
INFO  22:55:30,349 - #45 false
INFO  22:55:30,351 - #33 ;
INFO  22:55:30,352 - #43 pr
INFO  22:55:30,353 - #19 =
INFO  22:55:30,353 - #45 true
INFO  22:55:30,353 - #34 ?
INFO  22:55:30,353 - #37 (
INFO  22:55:30,357 - #43 e
INFO  22:55:30,357 - #34 ?
INFO  22:55:30,358 - #44 k
INFO  22:55:30,358 - #32 :
INFO  22:55:30,358 - #44 a
INFO  22:55:30,362 - #38 )
INFO  22:55:30,362 - #32 :
INFO  22:55:30,363 - #44 b
INFO  22:55:30,363 - #33 ;
INFO  22:55:30,363 - #18 print
INFO  22:55:30,363 - #37 (
INFO  22:55:30,363 - #43 pr
INFO  22:55:30,364 - #38 )
INFO  22:55:30,365 - #33 ;
INFO  22:55:30,366 - #43 k
INFO  22:55:30,366 - #19 =
INFO  22:55:30,366 - #45 false
INFO  22:55:30,367 - #33 ;
INFO  22:55:30,367 - #43 prr
INFO  22:55:30,367 - #19 =
INFO  22:55:30,367 - #45 false
INFO  22:55:30,367 - #33 ;
INFO  22:55:30,367 - #43 c
INFO  22:55:30,367 - #19 =
INFO  22:55:30,367 - #42 2
INFO  22:55:30,367 - #33 ;
INFO  22:55:30,367 - #43 r
INFO  22:55:30,367 - #19 =
INFO  22:55:30,368 - #42 4
INFO  22:55:30,368 - #33 ;
INFO  22:55:30,368 - #14 if
INFO  22:55:30,368 - #37 (
INFO  22:55:30,368 - #43 a
INFO  22:55:30,368 - #24 >=
INFO  22:55:30,368 - #43 b
INFO  22:55:30,369 - #26 &&
INFO  22:55:30,370 - #43 k
INFO  22:55:30,373 - #27 ||
INFO  22:55:30,378 - #43 e
INFO  22:55:30,382 - #26 &&
INFO  22:55:30,383 - #43 k
INFO  22:55:30,383 - #38 )
INFO  22:55:30,384 - #35 {
INFO  22:55:30,384 - #43 c
INFO  22:55:30,384 - #19 =
INFO  22:55:30,384 - #42 5
INFO  22:55:30,384 - #33 ;
INFO  22:55:30,385 - #14 if
INFO  22:55:30,385 - #37 (
INFO  22:55:30,385 - #43 prr
INFO  22:55:30,385 - #38 )
INFO  22:55:30,385 - #35 {
INFO  22:55:30,385 - #43 c
INFO  22:55:30,385 - #19 =
INFO  22:55:30,385 - #42 4
INFO  22:55:30,385 - #33 ;
INFO  22:55:30,385 - #36 }
INFO  22:55:30,386 - #15 else
INFO  22:55:30,387 - #35 {
INFO  22:55:30,387 - #43 c
INFO  22:55:30,387 - #19 =
INFO  22:55:30,387 - #42 3
INFO  22:55:30,388 - #33 ;
INFO  22:55:30,388 - #36 }
INFO  22:55:30,388 - #36 }
INFO  22:55:30,388 - #15 else
INFO  22:55:30,388 - #35 {
INFO  22:55:30,388 - #43 c
INFO  22:55:30,388 - #19 =
INFO  22:55:30,388 - #42 9
INFO  22:55:30,388 - #33 ;
INFO  22:55:30,388 - #36 }
INFO  22:55:30,388 - #18 print
INFO  22:55:30,389 - #37 (
INFO  22:55:30,389 - #43 c
INFO  22:55:30,389 - #38 )
INFO  22:55:30,389 - #33 ;
INFO  22:55:30,389 - #36 }
INFO  22:55:30,389 - #36 }
INFO  22:55:30,402 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  NoGroupDecl(
  ) [NoGroupDecl]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  VarDeclListClass(
                    NoVarDeclList(
                    ) [NoVarDeclList]
                    VarDeclClass(
                      Type(
                       bool
                      ) [Type]
                      VarListSingle(
                        VarClassNoArray(
                         e
                        ) [VarClassNoArray]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [VarDeclListClass]
                  VarDeclClass(
                    Type(
                     char
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       pr
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   bool
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     k
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 bool
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   prr
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               r
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListSingle(
              VarClassNoArray(
               a
              ) [VarClassNoArray]
            ) [VarListSingle]
            VarClassNoArray(
             b
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               e
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    BooleanClassConstFactor(
                                     false
                                    ) [BooleanClassConstFactor]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      Assignment(
                        DesignatorStatementOptionsClassAssignExpression(
                          Designator(
                            DesigIdent(
                             pr
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassTwoClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  BooleanClassConstFactor(
                                   true
                                  ) [BooleanClassConstFactor]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                            TernaryClass(
                            ) [TernaryClass]
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  ParenFactorClass(
                                    ClassTwoClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 e
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                      TernaryClass(
                                      ) [TernaryClass]
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            CharConst(
                                             k
                                            ) [CharConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                      ColonClass(
                                      ) [ColonClass]
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            CharConst(
                                             a
                                            ) [CharConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassTwoClass]
                                  ) [ParenFactorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                            ColonClass(
                            ) [ColonClass]
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  CharConst(
                                   b
                                  ) [CharConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassTwoClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [Assignment]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   pr
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         k
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              BooleanClassConstFactor(
                               false
                              ) [BooleanClassConstFactor]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       prr
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            BooleanClassConstFactor(
                             false
                            ) [BooleanClassConstFactor]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     c
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           2
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                  DesigIdent(
                   r
                  ) [DesigIdent]
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        NumberConst(
                         4
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          IfStatement(
            IfConditionNoError(
              ConditionClass(
                CondTermClass(
                  CondFactClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               a
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                    CondFactOptionalClass(
                      GreaterOrEqualOperationClass(
                      ) [GreaterOrEqualOperationClass]
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 b
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [CondFactOptionalClass]
                  ) [CondFactClass]
                  CondTermOptionalClass(
                    NoCondTermOptionalClass(
                    ) [NoCondTermOptionalClass]
                    FakeAndClass(
                    ) [FakeAndClass]
                    CondFactClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 k
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                      NoCondFactOptionalClass(
                      ) [NoCondFactOptionalClass]
                    ) [CondFactClass]
                  ) [CondTermOptionalClass]
                ) [CondTermClass]
                ConditionOptionalClass(
                  NoConditionOptionalClass(
                  ) [NoConditionOptionalClass]
                  FakeOrClass(
                  ) [FakeOrClass]
                  CondTermClass(
                    CondFactClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 e
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                      NoCondFactOptionalClass(
                      ) [NoCondFactOptionalClass]
                    ) [CondFactClass]
                    CondTermOptionalClass(
                      NoCondTermOptionalClass(
                      ) [NoCondTermOptionalClass]
                      FakeAndClass(
                      ) [FakeAndClass]
                      CondFactClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   k
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                        NoCondFactOptionalClass(
                        ) [NoCondFactOptionalClass]
                      ) [CondFactClass]
                    ) [CondTermOptionalClass]
                  ) [CondTermClass]
                ) [ConditionOptionalClass]
              ) [ConditionClass]
            ) [IfConditionNoError]
            StatementStatement(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         c
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              NumberConst(
                               5
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
                IfStatement(
                  IfConditionNoError(
                    ConditionClass(
                      CondTermClass(
                        CondFactClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     prr
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                          NoCondFactOptionalClass(
                          ) [NoCondFactOptionalClass]
                        ) [CondFactClass]
                        NoCondTermOptionalClass(
                        ) [NoCondTermOptionalClass]
                      ) [CondTermClass]
                      NoConditionOptionalClass(
                      ) [NoConditionOptionalClass]
                    ) [ConditionClass]
                  ) [IfConditionNoError]
                  StatementStatement(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      Assignment(
                        DesignatorStatementOptionsClassAssignExpression(
                          Designator(
                            DesigIdent(
                             c
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   4
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [Assignment]
                    ) [Statements]
                  ) [StatementStatement]
                  Empty(
                  ) [Empty]
                  YesOptionalStatement(
                    StatementStatement(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               c
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     3
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                    ) [StatementStatement]
                  ) [YesOptionalStatement]
                ) [IfStatement]
              ) [Statements]
            ) [StatementStatement]
            Empty(
            ) [Empty]
            YesOptionalStatement(
              StatementStatement(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         c
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              NumberConst(
                               9
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
              ) [StatementStatement]
            ) [YesOptionalStatement]
          ) [IfStatement]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                      DesigIdent(
                       c
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:55:30,405 - ===================================
INFO  22:55:30,414 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  22:55:30,414 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 4
INFO  22:55:30,414 - VARIABLE e IS BEING DEFINED! ON LINE 5
INFO  22:55:30,414 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 5
INFO  22:55:30,414 - VARIABLE pr IS BEING DEFINED! ON LINE 6
INFO  22:55:30,414 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 6
INFO  22:55:30,414 - VARIABLE k IS BEING DEFINED! ON LINE 7
INFO  22:55:30,414 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 7
INFO  22:55:30,414 - VARIABLE prr IS BEING DEFINED! ON LINE 8
INFO  22:55:30,415 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 8
INFO  22:55:30,415 - VARIABLE c IS BEING DEFINED! ON LINE 9
INFO  22:55:30,415 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  22:55:30,415 - VARIABLE r IS BEING DEFINED! ON LINE 10
INFO  22:55:30,415 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 10
INFO  22:55:30,415 - VARIABLE a IS BEING DEFINED! ON LINE 11
INFO  22:55:30,415 - VARIABLE b IS BEING DEFINED! ON LINE 11
INFO  22:55:30,415 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 11
INFO  22:55:30,415 - METHOD BODY STARTING!
INFO  22:55:30,415 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:55:30,416 - BEGINNING OF AN ASSIGNEMENT! ON LINE 14
INFO  22:55:30,416 - CONST CHAR false ON LINE 14
INFO  22:55:30,416 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  22:55:30,416 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  22:55:30,416 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 14
INFO  22:55:30,416 - CURRENT VARIABLE IN USE IS pr AND IT IS OF TYPE char
INFO  22:55:30,416 - BEGINNING OF AN ASSIGNEMENT! ON LINE 15
INFO  22:55:30,416 - CONST CHAR true ON LINE 15
INFO  22:55:30,416 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,416 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,417 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:55:30,417 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 15
INFO  22:55:30,417 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,417 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,417 - CONST CHAR k ON LINE 15
INFO  22:55:30,417 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,417 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,417 - CONST CHAR a ON LINE 15
INFO  22:55:30,417 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,417 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,418 - SUCCESSFUL TERNARY! TYPES: char AND char ! ON LINE 15
INFO  22:55:30,418 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,418 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,418 - CONST CHAR b ON LINE 15
INFO  22:55:30,419 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,419 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:55:30,419 - SUCCESSFUL TERNARY! TYPES: char AND char ! ON LINE 15
INFO  22:55:30,419 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 15
INFO  22:55:30,419 - CURRENT VARIABLE IN USE IS pr AND IT IS OF TYPE char
INFO  22:55:30,419 - WE ARE USING A VARIABLE OF TYPE char ON LINE 16
INFO  22:55:30,419 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  22:55:30,419 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  22:55:30,420 - PRINT FUNCTION CALL IN USE! ON LINE 16
INFO  22:55:30,420 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:55:30,420 - BEGINNING OF AN ASSIGNEMENT! ON LINE 18
INFO  22:55:30,420 - CONST CHAR false ON LINE 18
INFO  22:55:30,420 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  22:55:30,420 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  22:55:30,420 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 18
INFO  22:55:30,420 - CURRENT VARIABLE IN USE IS prr AND IT IS OF TYPE boolean
INFO  22:55:30,420 - BEGINNING OF AN ASSIGNEMENT! ON LINE 19
INFO  22:55:30,420 - CONST CHAR false ON LINE 19
INFO  22:55:30,420 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:55:30,420 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:55:30,420 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 19
INFO  22:55:30,420 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:55:30,420 - BEGINNING OF AN ASSIGNEMENT! ON LINE 20
INFO  22:55:30,420 - CONST NUMBER 2 ON LINE 20
INFO  22:55:30,420 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:55:30,420 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:55:30,420 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 20
INFO  22:55:30,420 - CURRENT VARIABLE IN USE IS r AND IT IS OF TYPE int
INFO  22:55:30,420 - BEGINNING OF AN ASSIGNEMENT! ON LINE 21
INFO  22:55:30,420 - CONST NUMBER 4 ON LINE 21
INFO  22:55:30,420 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  22:55:30,421 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 21
INFO  22:55:30,421 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  22:55:30,421 - WE ARE USING A VARIABLE OF TYPE int ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,421 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  22:55:30,421 - WE ARE USING A VARIABLE OF TYPE int ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,421 - USING TWO EXPRESSIONS OF TYPE int ON LINE 22
INFO  22:55:30,421 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:55:30,421 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 22
INFO  22:55:30,421 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:55:30,421 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,421 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,422 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 22
INFO  22:55:30,422 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:55:30,422 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 22
INFO  22:55:30,422 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,422 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:55:30,422 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 22
INFO  22:55:30,422 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:55:30,422 - BEGINNING OF AN ASSIGNEMENT! ON LINE 23
INFO  22:55:30,422 - CONST NUMBER 5 ON LINE 23
INFO  22:55:30,422 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:55:30,422 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:55:30,422 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 23
INFO  22:55:30,422 - CURRENT VARIABLE IN USE IS prr AND IT IS OF TYPE boolean
INFO  22:55:30,424 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 24
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 24
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 24
INFO  22:55:30,424 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 24
INFO  22:55:30,424 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:55:30,424 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  22:55:30,424 - CONST NUMBER 4 ON LINE 25
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  22:55:30,424 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  22:55:30,424 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:55:30,424 - BEGINNING OF AN ASSIGNEMENT! ON LINE 27
INFO  22:55:30,424 - CONST NUMBER 3 ON LINE 27
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  22:55:30,424 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 27
INFO  22:55:30,424 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:55:30,424 - BEGINNING OF AN ASSIGNEMENT! ON LINE 30
INFO  22:55:30,424 - CONST NUMBER 9 ON LINE 30
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  22:55:30,424 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 30
INFO  22:55:30,424 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:55:30,424 - WE ARE USING A VARIABLE OF TYPE int ON LINE 34
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  22:55:30,424 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  22:55:30,424 - PRINT FUNCTION CALL IN USE! ON LINE 34
INFO  22:55:30,426 - METHOD BODY ENDING!
INFO  22:55:30,426 - END OF DEFINING FUNCTION main
INFO  22:55:30,427 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  22:55:30,427 -  Deklarisanih promenljivih ima = 8
INFO  22:55:30,427 - ===================================
INFO  22:55:30,442 - Parsiranje uspesno zavrseno!
