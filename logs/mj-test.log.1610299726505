INFO  18:15:09,209 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  18:15:09,273 - #2 program
INFO  18:15:09,273 - #48 MJProgram
INFO  18:15:09,273 - #48 int
INFO  18:15:09,274 - #48 a
INFO  18:15:09,275 - #38 ;
INFO  18:15:09,275 - #40 {
INFO  18:15:09,275 - #5 void
INFO  18:15:09,277 - #48 main
INFO  18:15:09,277 - #42 (
INFO  18:15:09,277 - #43 )
INFO  18:15:09,278 - #48 int
INFO  18:15:09,279 - #48 x
INFO  18:15:09,279 - #36 ,
INFO  18:15:09,279 - #48 y
INFO  18:15:09,279 - #38 ;
INFO  18:15:09,279 - #48 char
INFO  18:15:09,279 - #48 z
INFO  18:15:09,279 - #38 ;
INFO  18:15:09,279 - #48 bool
INFO  18:15:09,280 - #48 p
INFO  18:15:09,280 - #38 ;
INFO  18:15:09,289 - #40 {
INFO  18:15:09,289 - #18 print
INFO  18:15:09,290 - #42 (
INFO  18:15:09,290 - #47 2
INFO  18:15:09,291 - #43 )
INFO  18:15:09,292 - #38 ;
INFO  18:15:09,293 - #48 z
INFO  18:15:09,293 - #24 =
INFO  18:15:09,294 - #49 a
INFO  18:15:09,295 - #38 ;
INFO  18:15:09,295 - #48 p
INFO  18:15:09,296 - #24 =
INFO  18:15:09,296 - #50 true
INFO  18:15:09,296 - #38 ;
INFO  18:15:09,296 - #18 print
INFO  18:15:09,296 - #42 (
INFO  18:15:09,296 - #48 z
INFO  18:15:09,296 - #43 )
INFO  18:15:09,297 - #38 ;
INFO  18:15:09,297 - #18 print
INFO  18:15:09,297 - #42 (
INFO  18:15:09,297 - #48 p
INFO  18:15:09,297 - #43 )
INFO  18:15:09,297 - #38 ;
INFO  18:15:09,297 - #48 y
INFO  18:15:09,297 - #34 --
INFO  18:15:09,297 - #38 ;
INFO  18:15:09,298 - #18 print
INFO  18:15:09,298 - #42 (
INFO  18:15:09,299 - #48 y
INFO  18:15:09,299 - #43 )
INFO  18:15:09,299 - #38 ;
INFO  18:15:09,299 - #48 y
INFO  18:15:09,299 - #24 =
INFO  18:15:09,299 - #47 5
INFO  18:15:09,299 - #38 ;
INFO  18:15:09,299 - #48 x
INFO  18:15:09,299 - #24 =
INFO  18:15:09,299 - #47 4
INFO  18:15:09,300 - #38 ;
INFO  18:15:09,300 - #48 y
INFO  18:15:09,300 - #33 ++
INFO  18:15:09,300 - #38 ;
INFO  18:15:09,301 - #18 print
INFO  18:15:09,301 - #42 (
INFO  18:15:09,301 - #48 y
INFO  18:15:09,301 - #43 )
INFO  18:15:09,301 - #38 ;
INFO  18:15:09,301 - #46 return
INFO  18:15:09,301 - #38 ;
INFO  18:15:09,301 - #41 }
INFO  18:15:09,302 - #41 }
INFO  18:15:09,311 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    NoGroupDecl(
    ) [NoGroupDecl]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListSingle(
          VarClassNoArray(
           a
          ) [VarClassNoArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  ProgramLBraceClass(
  ) [ProgramLBraceClass]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            NoVarDeclList(
            ) [NoVarDeclList]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   x
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 y
                ) [VarClassNoArray]
              ) [VarListClass]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               z
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             p
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              PrintStmt(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         2
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                                NoCommaNumberClass(
                                ) [NoCommaNumberClass]
                              ) [PrintStmt]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementClass(
                                Designator(
                                 z
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                DesignatorStatementOptionsClassAssignExpression(
                                  AssignOpClass(
                                    AssignOperationClass(
                                    ) [AssignOperationClass]
                                  ) [AssignOpClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          CharConst(
                                           a
                                          ) [CharConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [DesignatorStatementOptionsClassAssignExpression]
                              ) [DesignatorStatementClass]
                            ) [Assignment]
                          ) [Statements]
                          Assignment(
                            DesignatorStatementClass(
                              Designator(
                               p
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              DesignatorStatementOptionsClassAssignExpression(
                                AssignOpClass(
                                  AssignOperationClass(
                                  ) [AssignOperationClass]
                                ) [AssignOpClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        BooleanClassConstFactor(
                                         true
                                        ) [BooleanClassConstFactor]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [DesignatorStatementOptionsClassAssignExpression]
                            ) [DesignatorStatementClass]
                          ) [Assignment]
                        ) [Statements]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                     z
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    NoFactorOptional(
                                    ) [NoFactorOptional]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          NoCommaNumberClass(
                          ) [NoCommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                   p
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                  NoFactorOptional(
                                  ) [NoFactorOptional]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementClass(
                        Designator(
                         y
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        DesignatorStatementMinusMinus(
                        ) [DesignatorStatementMinusMinus]
                      ) [DesignatorStatementClass]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                               y
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              NoFactorOptional(
                              ) [NoFactorOptional]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                Assignment(
                  DesignatorStatementClass(
                    Designator(
                     y
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    DesignatorStatementOptionsClassAssignExpression(
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              NumberConst(
                               5
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [DesignatorStatementClass]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementClass(
                  Designator(
                   x
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  DesignatorStatementOptionsClassAssignExpression(
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             4
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [DesignatorStatementClass]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementClass(
                Designator(
                 y
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                DesignatorStatementPlusPlus(
                ) [DesignatorStatementPlusPlus]
              ) [DesignatorStatementClass]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                       y
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      NoFactorOptional(
                      ) [NoFactorOptional]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        ReturnNoExpr(
        ) [ReturnNoExpr]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:15:09,312 - ===================================
INFO  18:15:09,315 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  18:15:09,315 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  18:15:09,316 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  18:15:09,316 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 4
INFO  18:15:09,316 - VARIABLE x IS BEING DEFINED! ON LINE 5
INFO  18:15:09,316 - VARIABLE y IS BEING DEFINED! ON LINE 5
INFO  18:15:09,316 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 5
INFO  18:15:09,316 - VARIABLE z IS BEING DEFINED! ON LINE 6
INFO  18:15:09,316 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 6
INFO  18:15:09,316 - VARIABLE p IS BEING DEFINED! ON LINE 7
INFO  18:15:09,316 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 7
INFO  18:15:09,316 - METHOD BODY STARTING!
INFO  18:15:09,316 - CONST NUMBER 2 ON LINE 10
INFO  18:15:09,316 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  18:15:09,316 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  18:15:09,316 - PRINT FUNCTION CALL IN USE! ON LINE 10
INFO  18:15:09,316 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  18:15:09,317 - BEGINNING OF AN ASSIGNEMENT! ON LINE 12
INFO  18:15:09,317 - CONST CHAR a ON LINE 12
INFO  18:15:09,317 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  18:15:09,317 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  18:15:09,317 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 12
INFO  18:15:09,317 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  18:15:09,317 - BEGINNING OF AN ASSIGNEMENT! ON LINE 13
INFO  18:15:09,317 - CONST CHAR true ON LINE 13
INFO  18:15:09,317 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  18:15:09,317 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  18:15:09,317 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 13
INFO  18:15:09,317 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  18:15:09,317 - WE ARE USING A VARIABLE OF TYPE char ON LINE 15
INFO  18:15:09,317 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  18:15:09,317 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  18:15:09,317 - PRINT FUNCTION CALL IN USE! ON LINE 15
INFO  18:15:09,317 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  18:15:09,317 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 16
INFO  18:15:09,318 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  18:15:09,318 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  18:15:09,318 - PRINT FUNCTION CALL IN USE! ON LINE 16
INFO  18:15:09,318 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  18:15:09,318 - USING -- ON y
INFO  18:15:09,318 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  18:15:09,318 - WE ARE USING A VARIABLE OF TYPE int ON LINE 19
INFO  18:15:09,318 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  18:15:09,318 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  18:15:09,318 - PRINT FUNCTION CALL IN USE! ON LINE 19
INFO  18:15:09,318 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  18:15:09,318 - BEGINNING OF AN ASSIGNEMENT! ON LINE 21
INFO  18:15:09,318 - CONST NUMBER 5 ON LINE 21
INFO  18:15:09,318 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  18:15:09,318 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  18:15:09,318 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 21
INFO  18:15:09,318 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  18:15:09,318 - BEGINNING OF AN ASSIGNEMENT! ON LINE 22
INFO  18:15:09,318 - CONST NUMBER 4 ON LINE 22
INFO  18:15:09,318 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  18:15:09,319 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  18:15:09,319 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 22
INFO  18:15:09,319 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  18:15:09,319 - USING ++ ON y
INFO  18:15:09,319 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  18:15:09,319 - WE ARE USING A VARIABLE OF TYPE int ON LINE 24
INFO  18:15:09,319 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 24
INFO  18:15:09,319 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 24
INFO  18:15:09,319 - PRINT FUNCTION CALL IN USE! ON LINE 24
INFO  18:15:09,319 - return; AND THE FUNCTION IS VOID!
INFO  18:15:09,319 - METHOD BODY ENDING!
INFO  18:15:09,319 - END OF DEFINING FUNCTION main
INFO  18:15:09,319 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  18:15:09,319 -  Deklarisanih promenljivih ima = 5
INFO  18:15:09,319 - ===================================
INFO  18:15:09,323 - Parsiranje uspesno zavrseno!
