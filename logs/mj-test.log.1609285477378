INFO  00:42:58,228 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  00:42:58,297 - #34 program
INFO  00:42:58,298 - #48 MJProgram
INFO  00:42:58,298 - #48 int
INFO  00:42:58,298 - #48 x
INFO  00:42:58,299 - #42 ,
INFO  00:42:58,300 - #48 y
INFO  00:42:58,300 - #37 ;
INFO  00:42:58,300 - #48 int
INFO  00:42:58,300 - #48 bla
INFO  00:42:58,300 - #45 [
INFO  00:42:58,301 - #46 ]
INFO  00:42:58,301 - #42 ,
INFO  00:42:58,301 - #48 zz
INFO  00:42:58,301 - #42 ,
INFO  00:42:58,301 - #48 cc
INFO  00:42:58,301 - #45 [
INFO  00:42:58,301 - #46 ]
INFO  00:42:58,302 - #37 ;
INFO  00:42:58,302 - #7 const
INFO  00:42:58,302 - #48 int
INFO  00:42:58,302 - #48 aa
INFO  00:42:58,310 - #33 =
INFO  00:42:58,310 - #47 5
INFO  00:42:58,310 - #42 ,
INFO  00:42:58,310 - #48 bb
INFO  00:42:58,310 - #33 =
INFO  00:42:58,310 - #47 6
INFO  00:42:58,311 - #37 ;
INFO  00:42:58,311 - #7 const
INFO  00:42:58,311 - #48 char
INFO  00:42:58,311 - #48 cc
INFO  00:42:58,311 - #33 =
INFO  00:42:58,311 - #2 c
INFO  00:42:58,311 - #42 ,
INFO  00:42:58,312 - #48 dd
INFO  00:42:58,313 - #33 =
INFO  00:42:58,313 - #2 d
INFO  00:42:58,313 - #37 ;
INFO  00:42:58,313 - #7 const
INFO  00:42:58,313 - #48 bool
INFO  00:42:58,313 - #48 ee
INFO  00:42:58,313 - #33 =
INFO  00:42:58,313 - #3 true
INFO  00:42:58,313 - #42 ,
INFO  00:42:58,314 - #48 ff
INFO  00:42:58,315 - #33 =
INFO  00:42:58,315 - #3 false
INFO  00:42:58,315 - #37 ;
INFO  00:42:58,315 - #5 class
INFO  00:42:58,315 - #48 Klasa
INFO  00:42:58,315 - #35 {
INFO  00:42:58,316 - #48 int
INFO  00:42:58,317 - #48 duca1
INFO  00:42:58,318 - #42 ,
INFO  00:42:58,318 - #48 duca2
INFO  00:42:58,318 - #42 ,
INFO  00:42:58,318 - #48 duca3
INFO  00:42:58,318 - #37 ;
INFO  00:42:58,318 - #36 }
INFO  00:42:58,319 - #5 class
INFO  00:42:58,319 - #48 KlasaDva
INFO  00:42:58,320 - #13 extends
INFO  00:42:58,320 - #48 Klasa
INFO  00:42:58,320 - #35 {
INFO  00:42:58,320 - #48 int
INFO  00:42:58,320 - #48 aa
INFO  00:42:58,320 - #37 ;
INFO  00:42:58,320 - #35 {
INFO  00:42:58,320 - #48 int
INFO  00:42:58,321 - #48 f
INFO  00:42:58,321 - #38 (
INFO  00:42:58,321 - #39 )
INFO  00:42:58,322 - #35 {
INFO  00:42:58,323 - #36 }
INFO  00:42:58,323 - #36 }
INFO  00:42:58,325 - #36 }
INFO  00:42:58,325 - #5 class
INFO  00:42:58,325 - #48 Klasa3
INFO  00:42:58,325 - #35 {
INFO  00:42:58,325 - #36 }
INFO  00:42:58,325 - #5 class
INFO  00:42:58,325 - #48 Klasa4
INFO  00:42:58,325 - #35 {
INFO  00:42:58,325 - #35 {
INFO  00:42:58,325 - #44 void
INFO  00:42:58,325 - #48 bla
INFO  00:42:58,326 - #38 (
INFO  00:42:58,326 - #39 )
INFO  00:42:58,327 - #35 {
INFO  00:42:58,327 - #36 }
INFO  00:42:58,327 - #36 }
INFO  00:42:58,327 - #36 }
INFO  00:42:58,327 - #35 {
INFO  00:42:58,327 - #48 int
INFO  00:42:58,327 - #48 f
INFO  00:42:58,327 - #38 (
INFO  00:42:58,327 - #39 )
INFO  00:42:58,327 - #35 {
INFO  00:42:58,327 - #36 }
INFO  00:42:58,327 - #44 void
INFO  00:42:58,328 - #48 f
INFO  00:42:58,328 - #38 (
INFO  00:42:58,328 - #39 )
INFO  00:42:58,328 - #35 {
INFO  00:42:58,328 - #36 }
INFO  00:42:58,328 - #48 int
INFO  00:42:58,328 - #48 f
INFO  00:42:58,328 - #38 (
INFO  00:42:58,328 - #48 int
INFO  00:42:58,328 - #48 a
INFO  00:42:58,328 - #39 )
INFO  00:42:58,328 - #35 {
INFO  00:42:58,329 - #36 }
INFO  00:42:58,329 - #48 int
INFO  00:42:58,329 - #48 f
INFO  00:42:58,329 - #38 (
INFO  00:42:58,329 - #48 int
INFO  00:42:58,329 - #48 b
INFO  00:42:58,329 - #42 ,
INFO  00:42:58,329 - #48 int
INFO  00:42:58,329 - #48 c
INFO  00:42:58,329 - #45 [
INFO  00:42:58,329 - #46 ]
INFO  00:42:58,329 - #39 )
INFO  00:42:58,329 - #35 {
INFO  00:42:58,329 - #36 }
INFO  00:42:58,330 - #44 void
INFO  00:42:58,330 - #48 main
INFO  00:42:58,330 - #38 (
INFO  00:42:58,330 - #39 )
INFO  00:42:58,330 - #48 int
INFO  00:42:58,330 - #48 x
INFO  00:42:58,330 - #42 ,
INFO  00:42:58,330 - #48 i
INFO  00:42:58,330 - #37 ;
INFO  00:42:58,330 - #48 char
INFO  00:42:58,330 - #48 c
INFO  00:42:58,330 - #37 ;
INFO  00:42:58,330 - #35 {
INFO  00:42:58,330 - #48 val
INFO  00:42:58,330 - #33 =
INFO  00:42:58,332 - #11 new
INFO  00:42:58,333 - #48 Table
INFO  00:42:58,333 - #37 ;
INFO  00:42:58,335 - #48 val
INFO  00:42:58,336 - #30 .
INFO  00:42:58,336 - #48 pos
INFO  00:42:58,336 - #33 =
INFO  00:42:58,336 - #11 new
INFO  00:42:58,336 - #48 int
INFO  00:42:58,336 - #45 [
INFO  00:42:58,336 - #48 size
INFO  00:42:58,336 - #46 ]
INFO  00:42:58,337 - #37 ;
INFO  00:42:58,337 - #48 val
INFO  00:42:58,337 - #30 .
INFO  00:42:58,337 - #48 neg
INFO  00:42:58,337 - #33 =
INFO  00:42:58,337 - #11 new
INFO  00:42:58,337 - #48 int
INFO  00:42:58,337 - #45 [
INFO  00:42:58,337 - #48 size
INFO  00:42:58,337 - #46 ]
INFO  00:42:58,337 - #37 ;
INFO  00:42:58,338 - #48 i
INFO  00:42:58,338 - #33 =
INFO  00:42:58,338 - #47 0
INFO  00:42:58,338 - #37 ;
INFO  00:42:58,338 - #9 do
INFO  00:42:58,338 - #35 {
INFO  00:42:58,339 - #48 val
INFO  00:42:58,339 - #30 .
INFO  00:42:58,339 - #48 putp
INFO  00:42:58,339 - #38 (
ERROR 00:42:58,339 - 
Sintaksna greska na liniji 48
INFO  00:42:58,339 - #47 0
INFO  00:42:58,339 - #42 ,
INFO  00:42:58,339 - #48 i
INFO  00:42:58,340 - #39 )
INFO  00:42:58,340 - #37 ;
INFO  00:42:58,340 - #48 val
INFO  00:42:58,340 - #30 .
INFO  00:42:58,340 - #48 putn
INFO  00:42:58,340 - #38 (
INFO  00:42:58,340 - #47 0
INFO  00:42:58,340 - #42 ,
INFO  00:42:58,340 - #48 i
INFO  00:42:58,340 - #39 )
INFO  00:42:58,340 - #37 ;
INFO  00:42:58,340 - #48 i
INFO  00:42:58,340 - #28 ++
INFO  00:42:58,340 - #37 ;
INFO  00:42:58,341 - #36 }
INFO  00:42:58,341 - #10 while
INFO  00:42:58,341 - #38 (
ERROR 00:42:58,341 - Izvrsen oporavak do ; u liniji 48
INFO  00:42:58,341 - #48 i
INFO  00:42:58,341 - #24 <
INFO  00:42:58,341 - #48 size
INFO  00:42:58,343 - #39 )
INFO  00:42:58,344 - #37 ;
INFO  00:42:58,344 - #36 }
INFO  00:42:58,344 - #36 }
INFO  00:42:58,347 - Program(
 MJProgram
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            GroupDeclarations(
              GroupDeclarations(
                GroupDeclarations(
                  GroupDeclarations(
                    NoGroupDecl(
                    ) [NoGroupDecl]
                    GroupDeclarationVars(
                      VarDeclClass(
                        Type(
                         int
                        ) [Type]
                        VarListClass(
                          VarListSingle(
                            VarClassNoArray(
                             x
                            ) [VarClassNoArray]
                          ) [VarListSingle]
                          VarClassNoArray(
                           y
                          ) [VarClassNoArray]
                        ) [VarListClass]
                      ) [VarDeclClass]
                    ) [GroupDeclarationVars]
                  ) [GroupDeclarations]
                  GroupDeclarationVars(
                    VarDeclClass(
                      Type(
                       int
                      ) [Type]
                      VarListClass(
                        VarListClass(
                          VarListSingle(
                            VarClassArray(
                             bla
                            ) [VarClassArray]
                          ) [VarListSingle]
                          VarClassNoArray(
                           zz
                          ) [VarClassNoArray]
                        ) [VarListClass]
                        VarClassArray(
                         cc
                        ) [VarClassArray]
                      ) [VarListClass]
                    ) [VarDeclClass]
                  ) [GroupDeclarationVars]
                ) [GroupDeclarations]
                GroupDeclarationsConsts(
                  ConstDeclClass(
                    Type(
                     int
                    ) [Type]
                    ConstListClass(
                      ConstListSingle(
                        ConstListNoArray(
                         aa
                          ValuesNumber(
                           5
                          ) [ValuesNumber]
                        ) [ConstListNoArray]
                      ) [ConstListSingle]
                      ConstListNoArray(
                       bb
                        ValuesNumber(
                         6
                        ) [ValuesNumber]
                      ) [ConstListNoArray]
                    ) [ConstListClass]
                  ) [ConstDeclClass]
                ) [GroupDeclarationsConsts]
              ) [GroupDeclarations]
              GroupDeclarationsConsts(
                ConstDeclClass(
                  Type(
                   char
                  ) [Type]
                  ConstListClass(
                    ConstListSingle(
                      ConstListNoArray(
                       cc
                        ValuesChar(
                        ) [ValuesChar]
                      ) [ConstListNoArray]
                    ) [ConstListSingle]
                    ConstListNoArray(
                     dd
                      ValuesChar(
                      ) [ValuesChar]
                    ) [ConstListNoArray]
                  ) [ConstListClass]
                ) [ConstDeclClass]
              ) [GroupDeclarationsConsts]
            ) [GroupDeclarations]
            GroupDeclarationsConsts(
              ConstDeclClass(
                Type(
                 bool
                ) [Type]
                ConstListClass(
                  ConstListSingle(
                    ConstListNoArray(
                     ee
                      ValuesBoolean(
                      ) [ValuesBoolean]
                    ) [ConstListNoArray]
                  ) [ConstListSingle]
                  ConstListNoArray(
                   ff
                    ValuesBoolean(
                    ) [ValuesBoolean]
                  ) [ConstListNoArray]
                ) [ConstListClass]
              ) [ConstDeclClass]
            ) [GroupDeclarationsConsts]
          ) [GroupDeclarations]
          GroupDeclarationClasses(
            ClassDeclClass(
             Klasa
              NoExtendsOption(
              ) [NoExtendsOption]
              VarDeclListClass(
                NoVarDeclList(
                ) [NoVarDeclList]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListClass(
                    VarListClass(
                      VarListSingle(
                        VarClassNoArray(
                         duca1
                        ) [VarClassNoArray]
                      ) [VarListSingle]
                      VarClassNoArray(
                       duca2
                      ) [VarClassNoArray]
                    ) [VarListClass]
                    VarClassNoArray(
                     duca3
                    ) [VarClassNoArray]
                  ) [VarListClass]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              NoMethodsOption(
              ) [NoMethodsOption]
            ) [ClassDeclClass]
          ) [GroupDeclarationClasses]
        ) [GroupDeclarations]
        GroupDeclarationClasses(
          ClassDeclClass(
           KlasaDva
            ExtendsClassName(
              Type(
               Klasa
              ) [Type]
            ) [ExtendsClassName]
            VarDeclListClass(
              NoVarDeclList(
              ) [NoVarDeclList]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   aa
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            MethodsClassName(
              MethodDeclarations(
                NoMethodDecl(
                ) [NoMethodDecl]
                MethodDecl(
                  ReturnValueClassNoVoid(
                    Type(
                     int
                    ) [Type]
                  ) [ReturnValueClassNoVoid]
                 f
                  NoFormParam(
                  ) [NoFormParam]
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  NoStmt(
                  ) [NoStmt]
                ) [MethodDecl]
              ) [MethodDeclarations]
            ) [MethodsClassName]
          ) [ClassDeclClass]
        ) [GroupDeclarationClasses]
      ) [GroupDeclarations]
      GroupDeclarationClasses(
        ClassDeclClass(
         Klasa3
          NoExtendsOption(
          ) [NoExtendsOption]
          NoVarDeclList(
          ) [NoVarDeclList]
          NoMethodsOption(
          ) [NoMethodsOption]
        ) [ClassDeclClass]
      ) [GroupDeclarationClasses]
    ) [GroupDeclarations]
    GroupDeclarationClasses(
      ClassDeclClass(
       Klasa4
        NoExtendsOption(
        ) [NoExtendsOption]
        NoVarDeclList(
        ) [NoVarDeclList]
        MethodsClassName(
          MethodDeclarations(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              ReturnValueClassVoid(
              ) [ReturnValueClassVoid]
             bla
              NoFormParam(
              ) [NoFormParam]
              NoVarDeclList(
              ) [NoVarDeclList]
              NoStmt(
              ) [NoStmt]
            ) [MethodDecl]
          ) [MethodDeclarations]
        ) [MethodsClassName]
      ) [ClassDeclClass]
    ) [GroupDeclarationClasses]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          MethodDeclarations(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              ReturnValueClassNoVoid(
                Type(
                 int
                ) [Type]
              ) [ReturnValueClassNoVoid]
             f
              NoFormParam(
              ) [NoFormParam]
              NoVarDeclList(
              ) [NoVarDeclList]
              NoStmt(
              ) [NoStmt]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            ReturnValueClassVoid(
            ) [ReturnValueClassVoid]
           f
            NoFormParam(
            ) [NoFormParam]
            NoVarDeclList(
            ) [NoVarDeclList]
            NoStmt(
            ) [NoStmt]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
          ) [ReturnValueClassNoVoid]
         f
          FormParams(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
          ) [FormParams]
          NoVarDeclList(
          ) [NoVarDeclList]
          NoStmt(
          ) [NoStmt]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
        ) [ReturnValueClassNoVoid]
       f
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               b
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassArray(
              Type(
               int
              ) [Type]
             c
            ) [FormalParamDeclClassArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        NoStmt(
        ) [NoStmt]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
      ) [ReturnValueClassVoid]
     main
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListSingle(
                VarClassNoArray(
                 x
                ) [VarClassNoArray]
              ) [VarListSingle]
              VarClassNoArray(
               i
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           char
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             c
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                MatchedStmt(
                  Assignment(
                    DesignatorStatementClass(
                      Designator(
                       val
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      DesignatorStatementOptionsClassAssignExpression(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                        ExprSecondOptionClassNoMinus(
                          TermClass(
                            NewFactorClass(
                             Table
                              NoFactorOptionalSecondClass(
                              ) [NoFactorOptionalSecondClass]
                            ) [NewFactorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprSecondOptionClassNoMinus]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [DesignatorStatementClass]
                  ) [Assignment]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                Assignment(
                  DesignatorStatementClass(
                    Designator(
                     val
                      OptionalDesignatorClass(
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                       pos
                      ) [OptionalDesignatorClass]
                    ) [Designator]
                    DesignatorStatementOptionsClassAssignExpression(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                      ExprSecondOptionClassNoMinus(
                        TermClass(
                          NewFactorClass(
                           int
                            FactorOptionalSecondClass(
                              ExprSecondOptionClassNoMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                     size
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    NoFactorOptional(
                                    ) [NoFactorOptional]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprSecondOptionClassNoMinus]
                            ) [FactorOptionalSecondClass]
                          ) [NewFactorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprSecondOptionClassNoMinus]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [DesignatorStatementClass]
                ) [Assignment]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              Assignment(
                DesignatorStatementClass(
                  Designator(
                   val
                    OptionalDesignatorClass(
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                     neg
                    ) [OptionalDesignatorClass]
                  ) [Designator]
                  DesignatorStatementOptionsClassAssignExpression(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                    ExprSecondOptionClassNoMinus(
                      TermClass(
                        NewFactorClass(
                         int
                          FactorOptionalSecondClass(
                            ExprSecondOptionClassNoMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                   size
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                  NoFactorOptional(
                                  ) [NoFactorOptional]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprSecondOptionClassNoMinus]
                          ) [FactorOptionalSecondClass]
                        ) [NewFactorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprSecondOptionClassNoMinus]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [DesignatorStatementClass]
              ) [Assignment]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            Assignment(
              DesignatorStatementClass(
                Designator(
                 i
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                DesignatorStatementOptionsClassAssignExpression(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                  ExprSecondOptionClassNoMinus(
                    TermClass(
                      NumberConst(
                       0
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprSecondOptionClassNoMinus]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [DesignatorStatementClass]
            ) [Assignment]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DoWhileStatement(
            MatchedStmt(
              StatementStatement(
                MatchedStmt(
                  ErrorStmt(
                  ) [ErrorStmt]
                ) [MatchedStmt]
              ) [StatementStatement]
            ) [MatchedStmt]
            ConditionClass(
              CondTermClass(
                CondFactClass(
                  ExprSecondOptionClassNoMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                         i
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        NoFactorOptional(
                        ) [NoFactorOptional]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprSecondOptionClassNoMinus]
                  CondFactOptionalClass(
                    LessOperationClass(
                    ) [LessOperationClass]
                    ExprSecondOptionClassNoMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                           size
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          NoFactorOptional(
                          ) [NoFactorOptional]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprSecondOptionClassNoMinus]
                  ) [CondFactOptionalClass]
                ) [CondFactClass]
                NoCondTermOptionalClass(
                ) [NoCondTermOptionalClass]
              ) [CondTermClass]
              NoConditionOptionalClass(
              ) [NoConditionOptionalClass]
            ) [ConditionClass]
          ) [DoWhileStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:42:58,348 - ===================================
INFO  00:42:58,351 -  Print count calls = 0
INFO  00:42:58,351 -  Deklarisanih promenljivih ima = 0
