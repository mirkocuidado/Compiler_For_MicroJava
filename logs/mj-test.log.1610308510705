INFO  20:54:42,011 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  20:54:42,082 - #2 program
INFO  20:54:42,082 - #48 MJProgram
INFO  20:54:42,082 - #48 int
INFO  20:54:42,084 - #48 a
INFO  20:54:42,085 - #36 ,
INFO  20:54:42,085 - #48 b
INFO  20:54:42,085 - #36 ,
INFO  20:54:42,086 - #48 c
INFO  20:54:42,086 - #36 ,
INFO  20:54:42,086 - #48 d
INFO  20:54:42,086 - #38 ;
INFO  20:54:42,086 - #40 {
INFO  20:54:42,086 - #48 int
INFO  20:54:42,088 - #48 k
INFO  20:54:42,089 - #42 (
INFO  20:54:42,089 - #43 )
INFO  20:54:42,089 - #48 int
INFO  20:54:42,090 - #48 mm
INFO  20:54:42,090 - #38 ;
INFO  20:54:42,091 - #40 {
INFO  20:54:42,091 - #46 return
INFO  20:54:42,093 - #47 2
INFO  20:54:42,094 - #38 ;
INFO  20:54:42,096 - #41 }
INFO  20:54:42,096 - #5 void
INFO  20:54:42,098 - #48 main
INFO  20:54:42,098 - #42 (
INFO  20:54:42,098 - #43 )
INFO  20:54:42,098 - #48 int
INFO  20:54:42,098 - #48 x
INFO  20:54:42,098 - #36 ,
INFO  20:54:42,098 - #48 y
INFO  20:54:42,099 - #38 ;
INFO  20:54:42,099 - #48 char
INFO  20:54:42,099 - #48 z
INFO  20:54:42,099 - #38 ;
INFO  20:54:42,099 - #48 bool
INFO  20:54:42,099 - #48 p
INFO  20:54:42,099 - #38 ;
INFO  20:54:42,099 - #40 {
INFO  20:54:42,099 - #48 x
INFO  20:54:42,099 - #24 =
INFO  20:54:42,101 - #48 k
INFO  20:54:42,102 - #42 (
INFO  20:54:42,102 - #43 )
INFO  20:54:42,103 - #38 ;
INFO  20:54:42,103 - #46 return
INFO  20:54:42,103 - #38 ;
INFO  20:54:42,103 - #41 }
INFO  20:54:42,104 - #41 }
INFO  20:54:42,112 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    NoGroupDecl(
    ) [NoGroupDecl]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListClass(
          VarListClass(
            VarListClass(
              VarListSingle(
                VarClassNoArray(
                 a
                ) [VarClassNoArray]
              ) [VarListSingle]
              VarClassNoArray(
               b
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             c
            ) [VarClassNoArray]
          ) [VarListClass]
          VarClassNoArray(
           d
          ) [VarClassNoArray]
        ) [VarListClass]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  ProgramLBraceClass(
  ) [ProgramLBraceClass]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        NoFormParam(
        ) [NoFormParam]
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               mm
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    NumberConst(
                     2
                    ) [NumberConst]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            NoVarDeclList(
            ) [NoVarDeclList]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   x
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 y
                ) [VarClassNoArray]
              ) [VarListClass]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               z
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             p
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          Assignment(
            DesignatorStatementClass(
              Designator(
               x
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              DesignatorStatementOptionsClassAssignExpression(
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                           k
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          FactorOptionalParams(
                            NoActuals(
                            ) [NoActuals]
                          ) [FactorOptionalParams]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [DesignatorStatementClass]
          ) [Assignment]
        ) [Statements]
        ReturnNoExpr(
        ) [ReturnNoExpr]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:54:42,133 - ===================================
INFO  20:54:42,139 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  20:54:42,139 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  20:54:42,139 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  20:54:42,139 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  20:54:42,139 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  20:54:42,140 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  20:54:42,140 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 7
INFO  20:54:42,140 - VARIABLE mm IS BEING DEFINED! ON LINE 7
INFO  20:54:42,140 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 7
INFO  20:54:42,140 - METHOD BODY STARTING!
INFO  20:54:42,140 - CONST NUMBER 2 ON LINE 7
INFO  20:54:42,140 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  20:54:42,140 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  20:54:42,140 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 7
INFO  20:54:42,141 - METHOD BODY ENDING!
INFO  20:54:42,141 - END OF DEFINING FUNCTION k
INFO  20:54:42,141 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 9
INFO  20:54:42,141 - VARIABLE x IS BEING DEFINED! ON LINE 10
INFO  20:54:42,141 - VARIABLE y IS BEING DEFINED! ON LINE 10
INFO  20:54:42,141 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 10
INFO  20:54:42,141 - VARIABLE z IS BEING DEFINED! ON LINE 11
INFO  20:54:42,141 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 11
INFO  20:54:42,141 - VARIABLE p IS BEING DEFINED! ON LINE 12
INFO  20:54:42,141 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 12
INFO  20:54:42,141 - METHOD BODY STARTING!
INFO  20:54:42,142 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  20:54:42,142 - BEGINNING OF AN ASSIGNEMENT! ON LINE 15
INFO  20:54:42,142 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  20:54:42,142 - WE ARE USING A VARIABLE OF TYPE int ON LINE 15
INFO  20:54:42,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  20:54:42,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  20:54:42,142 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 15
INFO  20:54:42,142 - return; AND THE FUNCTION IS VOID!
INFO  20:54:42,142 - METHOD BODY ENDING!
INFO  20:54:42,142 - END OF DEFINING FUNCTION main
INFO  20:54:42,142 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  20:54:42,142 -  Deklarisanih promenljivih ima = 9
INFO  20:54:42,143 - ===================================
INFO  20:54:42,147 - Parsiranje uspesno zavrseno!
