INFO  00:19:46,405 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  00:19:46,469 - #2 program
INFO  00:19:46,470 - #44 p
INFO  00:19:46,470 - #44 int
INFO  00:19:46,476 - #44 buffer
INFO  00:19:46,478 - #39 [
INFO  00:19:46,478 - #40 ]
INFO  00:19:46,478 - #33 ;
INFO  00:19:46,478 - #44 int
INFO  00:19:46,479 - #44 niz
INFO  00:19:46,479 - #39 [
INFO  00:19:46,479 - #40 ]
INFO  00:19:46,479 - #33 ;
INFO  00:19:46,479 - #35 {
INFO  00:19:46,479 - #5 void
INFO  00:19:46,480 - #44 main
INFO  00:19:46,481 - #37 (
INFO  00:19:46,481 - #38 )
INFO  00:19:46,481 - #44 int
INFO  00:19:46,482 - #44 index
INFO  00:19:46,482 - #33 ;
INFO  00:19:46,482 - #44 int
INFO  00:19:46,492 - #44 sum
INFO  00:19:46,492 - #33 ;
INFO  00:19:46,492 - #44 int
INFO  00:19:46,492 - #44 buffer_Fake
INFO  00:19:46,492 - #39 [
INFO  00:19:46,493 - #40 ]
INFO  00:19:46,493 - #33 ;
INFO  00:19:46,493 - #44 int
INFO  00:19:46,493 - #44 aaa
INFO  00:19:46,493 - #39 [
INFO  00:19:46,493 - #40 ]
INFO  00:19:46,493 - #33 ;
INFO  00:19:46,493 - #44 int
INFO  00:19:46,493 - #44 niz
INFO  00:19:46,493 - #39 [
INFO  00:19:46,493 - #40 ]
INFO  00:19:46,493 - #33 ;
INFO  00:19:46,493 - #44 int
INFO  00:19:46,494 - #44 modif_one
INFO  00:19:46,494 - #33 ;
INFO  00:19:46,494 - #44 char
INFO  00:19:46,494 - #44 modif_two
INFO  00:19:46,494 - #39 [
INFO  00:19:46,494 - #40 ]
INFO  00:19:46,494 - #33 ;
INFO  00:19:46,494 - #44 char
INFO  00:19:46,494 - #44 modif_three
INFO  00:19:46,494 - #33 ;
INFO  00:19:46,494 - #44 char
INFO  00:19:46,494 - #44 modif_three_array
INFO  00:19:46,494 - #39 [
INFO  00:19:46,494 - #40 ]
INFO  00:19:46,495 - #33 ;
INFO  00:19:46,495 - #35 {
INFO  00:19:46,495 - #44 modif_three
INFO  00:19:46,498 - #19 =
INFO  00:19:46,501 - #45 a
INFO  00:19:46,502 - #33 ;
INFO  00:19:46,504 - #18 print
INFO  00:19:46,504 - #37 (
INFO  00:19:46,504 - #44 modif_three
INFO  00:19:46,504 - #38 )
INFO  00:19:46,505 - #33 ;
INFO  00:19:46,505 - #44 modif_three
INFO  00:19:46,505 - #19 =
INFO  00:19:46,505 - #42 #
INFO  00:19:46,505 - #43 3
INFO  00:19:46,506 - #33 ;
INFO  00:19:46,507 - #18 print
INFO  00:19:46,507 - #37 (
INFO  00:19:46,507 - #44 modif_three
INFO  00:19:46,507 - #38 )
INFO  00:19:46,507 - #33 ;
INFO  00:19:46,507 - #44 modif_three_array
INFO  00:19:46,507 - #19 =
INFO  00:19:46,507 - #16 new
INFO  00:19:46,507 - #44 char
INFO  00:19:46,507 - #39 [
INFO  00:19:46,507 - #43 5
INFO  00:19:46,507 - #40 ]
INFO  00:19:46,508 - #33 ;
INFO  00:19:46,508 - #44 modif_three_array
INFO  00:19:46,508 - #39 [
INFO  00:19:46,511 - #43 0
INFO  00:19:46,517 - #40 ]
INFO  00:19:46,518 - #19 =
INFO  00:19:46,519 - #45 a
INFO  00:19:46,521 - #33 ;
INFO  00:19:46,522 - #18 print
INFO  00:19:46,522 - #37 (
INFO  00:19:46,522 - #44 modif_three_array
INFO  00:19:46,522 - #39 [
INFO  00:19:46,522 - #43 0
INFO  00:19:46,522 - #40 ]
INFO  00:19:46,522 - #38 )
INFO  00:19:46,522 - #33 ;
INFO  00:19:46,522 - #44 modif_three_array
INFO  00:19:46,522 - #39 [
INFO  00:19:46,522 - #43 0
INFO  00:19:46,522 - #40 ]
INFO  00:19:46,523 - #19 =
INFO  00:19:46,523 - #42 #
INFO  00:19:46,523 - #43 3
INFO  00:19:46,523 - #33 ;
INFO  00:19:46,523 - #18 print
INFO  00:19:46,523 - #37 (
INFO  00:19:46,523 - #44 modif_three_array
INFO  00:19:46,523 - #39 [
INFO  00:19:46,523 - #43 0
INFO  00:19:46,524 - #40 ]
INFO  00:19:46,525 - #38 )
INFO  00:19:46,525 - #33 ;
INFO  00:19:46,525 - #36 }
INFO  00:19:46,525 - #36 }
INFO  00:19:46,539 - Program(
  ProgramName(
   p
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      NoGroupDecl(
      ) [NoGroupDecl]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             buffer
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListSingle(
          VarClassArray(
           niz
          ) [VarClassArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  VarDeclListClass(
                    VarDeclListClass(
                      VarDeclListClass(
                        NoVarDeclList(
                        ) [NoVarDeclList]
                        VarDeclClass(
                          Type(
                           int
                          ) [Type]
                          VarListSingle(
                            VarClassNoArray(
                             index
                            ) [VarClassNoArray]
                          ) [VarListSingle]
                        ) [VarDeclClass]
                      ) [VarDeclListClass]
                      VarDeclClass(
                        Type(
                         int
                        ) [Type]
                        VarListSingle(
                          VarClassNoArray(
                           sum
                          ) [VarClassNoArray]
                        ) [VarListSingle]
                      ) [VarDeclClass]
                    ) [VarDeclListClass]
                    VarDeclClass(
                      Type(
                       int
                      ) [Type]
                      VarListSingle(
                        VarClassArray(
                         buffer_Fake
                        ) [VarClassArray]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [VarDeclListClass]
                  VarDeclClass(
                    Type(
                     int
                    ) [Type]
                    VarListSingle(
                      VarClassArray(
                       aaa
                      ) [VarClassArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassArray(
                     niz
                    ) [VarClassArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   modif_one
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               char
              ) [Type]
              VarListSingle(
                VarClassArray(
                 modif_two
                ) [VarClassArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               modif_three
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           char
          ) [Type]
          VarListSingle(
            VarClassArray(
             modif_three_array
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               modif_three
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    CharConst(
                                     a
                                    ) [CharConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     modif_three
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           modif_three
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                ModificationOne(
                                  HashTagClass(
                                  ) [HashTagClass]
                                 3
                                ) [ModificationOne]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 modif_three
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       modif_three_array
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NewFactorClass(
                              Type(
                               char
                              ) [Type]
                              FactorOptionalSecondClass(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         5
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [FactorOptionalSecondClass]
                            ) [NewFactorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     modif_three_array
                    ) [DesigIdent]
                    OptionalDesignatorArray(
                      HelperClass(
                      ) [HelperClass]
                      LSquareClass(
                      ) [LSquareClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              NumberConst(
                               0
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [OptionalDesignatorArray]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          CharConst(
                           a
                          ) [CharConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            PrintStmt(
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           modif_three_array
                          ) [DesigIdent]
                          OptionalDesignatorArray(
                            HelperClass(
                            ) [HelperClass]
                            LSquareClass(
                            ) [LSquareClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [OptionalDesignatorArray]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
              NoCommaNumberClass(
              ) [NoCommaNumberClass]
            ) [PrintStmt]
          ) [Statements]
          Assignment(
            DesignatorStatementOptionsClassAssignExpression(
              Designator(
                DesigIdent(
                 modif_three_array
                ) [DesigIdent]
                OptionalDesignatorArray(
                  HelperClass(
                  ) [HelperClass]
                  LSquareClass(
                  ) [LSquareClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           0
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [OptionalDesignatorArray]
              ) [Designator]
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      ModificationOne(
                        HashTagClass(
                        ) [HashTagClass]
                       3
                      ) [ModificationOne]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [Assignment]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                      DesigIdent(
                       modif_three_array
                      ) [DesigIdent]
                      OptionalDesignatorArray(
                        HelperClass(
                        ) [HelperClass]
                        LSquareClass(
                        ) [LSquareClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 0
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [OptionalDesignatorArray]
                    ) [Designator]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:19:46,540 - ===================================
INFO  00:19:46,544 - PROGRAM NAME DETECTED => p ON LINE 1
INFO  00:19:46,544 - ARRAY VARIABLE buffer IS BEING DEFINED! ON LINE 3
INFO  00:19:46,544 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 3
INFO  00:19:46,544 - ARRAY VARIABLE niz IS BEING DEFINED! ON LINE 4
INFO  00:19:46,544 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 4
INFO  00:19:46,544 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 8
INFO  00:19:46,545 - VARIABLE index IS BEING DEFINED! ON LINE 9
INFO  00:19:46,545 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  00:19:46,545 - VARIABLE sum IS BEING DEFINED! ON LINE 10
INFO  00:19:46,545 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 10
INFO  00:19:46,545 - ARRAY VARIABLE buffer_Fake IS BEING DEFINED! ON LINE 11
INFO  00:19:46,545 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 11
INFO  00:19:46,545 - ARRAY VARIABLE aaa IS BEING DEFINED! ON LINE 12
INFO  00:19:46,545 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 12
INFO  00:19:46,545 - ARRAY VARIABLE niz IS BEING DEFINED! ON LINE 13
INFO  00:19:46,545 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 13
INFO  00:19:46,545 - VARIABLE modif_one IS BEING DEFINED! ON LINE 14
INFO  00:19:46,545 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 14
INFO  00:19:46,545 - ARRAY VARIABLE modif_two IS BEING DEFINED! ON LINE 15
INFO  00:19:46,545 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 15
INFO  00:19:46,545 - VARIABLE modif_three IS BEING DEFINED! ON LINE 16
INFO  00:19:46,545 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 16
INFO  00:19:46,545 - ARRAY VARIABLE modif_three_array IS BEING DEFINED! ON LINE 17
INFO  00:19:46,545 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 17
INFO  00:19:46,545 - METHOD BODY STARTING!
INFO  00:19:46,546 - CURRENT VARIABLE IN USE IS modif_three AND IT IS OF TYPE char
INFO  00:19:46,546 - BEGINNING OF AN ASSIGNEMENT! ON LINE 40
INFO  00:19:46,546 - CONST CHAR a ON LINE 40
INFO  00:19:46,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  00:19:46,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  00:19:46,546 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 40
INFO  00:19:46,546 - CURRENT VARIABLE IN USE IS modif_three AND IT IS OF TYPE char
INFO  00:19:46,546 - WE ARE USING A VARIABLE OF TYPE char ON LINE 41
INFO  00:19:46,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  00:19:46,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  00:19:46,546 - PRINT FUNCTION CALL IN USE! ON LINE 41
INFO  00:19:46,546 - CURRENT VARIABLE IN USE IS modif_three AND IT IS OF TYPE char
INFO  00:19:46,546 - BEGINNING OF AN ASSIGNEMENT! ON LINE 42
INFO  00:19:46,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  00:19:46,546 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  00:19:46,547 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 42
INFO  00:19:46,547 - CURRENT VARIABLE IN USE IS modif_three AND IT IS OF TYPE char
INFO  00:19:46,547 - WE ARE USING A VARIABLE OF TYPE char ON LINE 43
INFO  00:19:46,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  00:19:46,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  00:19:46,547 - PRINT FUNCTION CALL IN USE! ON LINE 43
INFO  00:19:46,547 - CURRENT VARIABLE IN USE IS modif_three_array AND IT IS OF TYPE array
INFO  00:19:46,547 - BEGINNING OF AN ASSIGNEMENT! ON LINE 45
INFO  00:19:46,548 - CONST NUMBER 5 ON LINE 45
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  00:19:46,548 - USAGE OF KEYWORD NEW! ON LINE 45
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  00:19:46,548 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 45
INFO  00:19:46,548 - CONST NUMBER 0 ON LINE 46
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  00:19:46,548 - CURRENT VARIABLE IN USE IS modif_three_array AND IT IS OF TYPE array
INFO  00:19:46,548 - BEGINNING OF AN ASSIGNEMENT! ON LINE 46
INFO  00:19:46,548 - CONST CHAR a ON LINE 46
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  00:19:46,548 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 46
INFO  00:19:46,548 - CONST NUMBER 0 ON LINE 47
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  00:19:46,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  00:19:46,548 - CURRENT VARIABLE IN USE IS modif_three_array AND IT IS OF TYPE array
INFO  00:19:46,549 - WE ARE USING AN ARRAY OF TYPE char ON LINE 47
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  00:19:46,549 - PRINT FUNCTION CALL IN USE! ON LINE 47
INFO  00:19:46,549 - CONST NUMBER 0 ON LINE 48
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  00:19:46,549 - CURRENT VARIABLE IN USE IS modif_three_array AND IT IS OF TYPE array
INFO  00:19:46,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 48
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  00:19:46,549 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 48
INFO  00:19:46,549 - CONST NUMBER 0 ON LINE 49
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  00:19:46,549 - CURRENT VARIABLE IN USE IS modif_three_array AND IT IS OF TYPE array
INFO  00:19:46,549 - WE ARE USING AN ARRAY OF TYPE char ON LINE 49
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  00:19:46,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  00:19:46,549 - PRINT FUNCTION CALL IN USE! ON LINE 49
INFO  00:19:46,550 - METHOD BODY ENDING!
INFO  00:19:46,550 - END OF DEFINING FUNCTION main
INFO  00:19:46,550 - PROGRAM ENDED => p ON LINE 1
INFO  00:19:46,550 -  Deklarisanih promenljivih ima = 11
INFO  00:19:46,550 - ===================================
INFO  00:19:46,562 - Parsiranje uspesno zavrseno!
