INFO  00:31:29,973 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  00:31:30,213 - #34 program
INFO  00:31:30,213 - #48 MJProgram
INFO  00:31:30,213 - #48 int
INFO  00:31:30,215 - #48 x
INFO  00:31:30,218 - #42 ,
INFO  00:31:30,218 - #48 y
INFO  00:31:30,218 - #37 ;
INFO  00:31:30,219 - #48 int
INFO  00:31:30,219 - #48 bla
INFO  00:31:30,219 - #45 [
INFO  00:31:30,219 - #46 ]
INFO  00:31:30,219 - #42 ,
INFO  00:31:30,219 - #48 zz
INFO  00:31:30,220 - #42 ,
INFO  00:31:30,220 - #48 cc
INFO  00:31:30,220 - #45 [
INFO  00:31:30,220 - #46 ]
INFO  00:31:30,220 - #37 ;
INFO  00:31:30,220 - #7 const
INFO  00:31:30,220 - #48 int
INFO  00:31:30,220 - #48 aa
INFO  00:31:30,221 - #33 =
INFO  00:31:30,221 - #47 5
INFO  00:31:30,221 - #42 ,
INFO  00:31:30,221 - #48 bb
INFO  00:31:30,221 - #33 =
INFO  00:31:30,221 - #47 6
INFO  00:31:30,221 - #37 ;
INFO  00:31:30,221 - #7 const
INFO  00:31:30,221 - #48 char
INFO  00:31:30,221 - #48 cc
INFO  00:31:30,222 - #33 =
INFO  00:31:30,222 - #2 c
INFO  00:31:30,222 - #42 ,
INFO  00:31:30,224 - #48 dd
INFO  00:31:30,224 - #33 =
INFO  00:31:30,225 - #2 d
INFO  00:31:30,225 - #37 ;
INFO  00:31:30,225 - #7 const
INFO  00:31:30,225 - #48 bool
INFO  00:31:30,225 - #48 ee
INFO  00:31:30,225 - #33 =
INFO  00:31:30,225 - #3 true
INFO  00:31:30,225 - #42 ,
INFO  00:31:30,228 - #48 ff
INFO  00:31:30,228 - #33 =
INFO  00:31:30,228 - #3 false
INFO  00:31:30,228 - #37 ;
INFO  00:31:30,228 - #5 class
INFO  00:31:30,228 - #48 Klasa
INFO  00:31:30,228 - #35 {
INFO  00:31:30,231 - #48 int
INFO  00:31:30,234 - #48 duca1
INFO  00:31:30,234 - #42 ,
INFO  00:31:30,234 - #48 duca2
INFO  00:31:30,234 - #42 ,
INFO  00:31:30,234 - #48 duca3
INFO  00:31:30,234 - #37 ;
INFO  00:31:30,234 - #36 }
INFO  00:31:30,236 - #5 class
INFO  00:31:30,237 - #48 KlasaDva
INFO  00:31:30,237 - #13 extends
INFO  00:31:30,237 - #48 Klasa
INFO  00:31:30,237 - #35 {
INFO  00:31:30,237 - #48 int
INFO  00:31:30,237 - #48 aa
INFO  00:31:30,237 - #37 ;
INFO  00:31:30,237 - #35 {
INFO  00:31:30,237 - #48 int
INFO  00:31:30,240 - #48 f
INFO  00:31:30,240 - #38 (
INFO  00:31:30,240 - #39 )
INFO  00:31:30,242 - #35 {
INFO  00:31:30,242 - #36 }
INFO  00:31:30,245 - #36 }
INFO  00:31:30,248 - #36 }
INFO  00:31:30,248 - #5 class
INFO  00:31:30,248 - #48 Klasa3
INFO  00:31:30,248 - #35 {
INFO  00:31:30,248 - #36 }
INFO  00:31:30,248 - #5 class
INFO  00:31:30,248 - #48 Klasa4
INFO  00:31:30,248 - #35 {
INFO  00:31:30,248 - #35 {
INFO  00:31:30,249 - #44 void
INFO  00:31:30,249 - #48 bla
INFO  00:31:30,251 - #38 (
INFO  00:31:30,251 - #39 )
INFO  00:31:30,251 - #35 {
INFO  00:31:30,251 - #36 }
INFO  00:31:30,251 - #36 }
INFO  00:31:30,252 - #36 }
INFO  00:31:30,252 - #35 {
INFO  00:31:30,252 - #48 int
INFO  00:31:30,252 - #48 f
INFO  00:31:30,252 - #38 (
INFO  00:31:30,252 - #39 )
INFO  00:31:30,252 - #35 {
INFO  00:31:30,252 - #36 }
INFO  00:31:30,252 - #44 void
INFO  00:31:30,252 - #48 f
INFO  00:31:30,252 - #38 (
INFO  00:31:30,252 - #39 )
INFO  00:31:30,252 - #35 {
INFO  00:31:30,252 - #36 }
INFO  00:31:30,252 - #48 int
INFO  00:31:30,252 - #48 f
INFO  00:31:30,252 - #38 (
INFO  00:31:30,252 - #48 int
INFO  00:31:30,252 - #48 a
INFO  00:31:30,253 - #39 )
INFO  00:31:30,253 - #35 {
INFO  00:31:30,253 - #36 }
INFO  00:31:30,253 - #48 int
INFO  00:31:30,253 - #48 f
INFO  00:31:30,253 - #38 (
INFO  00:31:30,253 - #48 int
INFO  00:31:30,253 - #48 b
INFO  00:31:30,253 - #42 ,
INFO  00:31:30,253 - #48 int
INFO  00:31:30,253 - #48 c
INFO  00:31:30,253 - #45 [
INFO  00:31:30,253 - #46 ]
INFO  00:31:30,253 - #39 )
INFO  00:31:30,254 - #35 {
INFO  00:31:30,254 - #36 }
INFO  00:31:30,254 - #44 void
INFO  00:31:30,254 - #48 main
INFO  00:31:30,254 - #38 (
INFO  00:31:30,254 - #39 )
INFO  00:31:30,254 - #48 int
INFO  00:31:30,254 - #48 x
INFO  00:31:30,254 - #42 ,
INFO  00:31:30,254 - #48 i
INFO  00:31:30,254 - #37 ;
INFO  00:31:30,254 - #48 char
INFO  00:31:30,254 - #48 c
INFO  00:31:30,254 - #37 ;
INFO  00:31:30,254 - #35 {
INFO  00:31:30,254 - #48 val
INFO  00:31:30,255 - #33 =
INFO  00:31:30,259 - #11 new
INFO  00:31:30,263 - #48 Table
INFO  00:31:30,263 - #37 ;
INFO  00:31:30,269 - #48 val
INFO  00:31:30,269 - #30 .
INFO  00:31:30,270 - #48 pos
INFO  00:31:30,270 - #33 =
INFO  00:31:30,270 - #11 new
INFO  00:31:30,270 - #48 int
INFO  00:31:30,270 - #45 [
INFO  00:31:30,270 - #48 size
INFO  00:31:30,270 - #46 ]
INFO  00:31:30,272 - #37 ;
INFO  00:31:30,272 - #48 val
INFO  00:31:30,273 - #30 .
INFO  00:31:30,273 - #48 neg
INFO  00:31:30,273 - #33 =
INFO  00:31:30,273 - #11 new
INFO  00:31:30,273 - #48 int
INFO  00:31:30,273 - #45 [
INFO  00:31:30,273 - #48 size
INFO  00:31:30,273 - #46 ]
INFO  00:31:30,273 - #37 ;
INFO  00:31:30,274 - #48 i
INFO  00:31:30,274 - #33 =
INFO  00:31:30,274 - #47 0
INFO  00:31:30,274 - #37 ;
INFO  00:31:30,274 - #9 do
INFO  00:31:30,274 - #35 {
INFO  00:31:30,274 - #48 val
INFO  00:31:30,274 - #30 .
INFO  00:31:30,274 - #48 putp
INFO  00:31:30,274 - #38 (
ERROR 00:31:30,274 - 
Sintaksna greska na liniji 48
INFO  00:31:30,274 - #47 0
INFO  00:31:30,274 - #42 ,
INFO  00:31:30,274 - #48 i
INFO  00:31:30,275 - #39 )
INFO  00:31:30,275 - #37 ;
INFO  00:31:30,275 - #48 val
INFO  00:31:30,275 - #30 .
INFO  00:31:30,275 - #48 putn
INFO  00:31:30,275 - #38 (
INFO  00:31:30,275 - #47 0
INFO  00:31:30,275 - #42 ,
INFO  00:31:30,275 - #48 i
INFO  00:31:30,275 - #39 )
INFO  00:31:30,275 - #37 ;
INFO  00:31:30,276 - #48 i
INFO  00:31:30,276 - #28 ++
INFO  00:31:30,276 - #37 ;
INFO  00:31:30,276 - #36 }
INFO  00:31:30,276 - #10 while
INFO  00:31:30,276 - #38 (
ERROR 00:31:30,276 - Izvrsen oporavak do ; u liniji 48
INFO  00:31:30,279 - #48 i
INFO  00:31:30,279 - #24 <
INFO  00:31:30,279 - #48 size
INFO  00:31:30,283 - #39 )
INFO  00:31:30,288 - #37 ;
INFO  00:31:30,288 - #48 f
INFO  00:31:30,288 - #38 (
ERROR 00:31:30,288 - 
Sintaksna greska na liniji 53
INFO  00:31:30,288 - #48 c
INFO  00:31:30,289 - #42 ,
INFO  00:31:30,289 - #48 x
INFO  00:31:30,289 - #42 ,
INFO  00:31:30,289 - #48 i
INFO  00:31:30,289 - #39 )
INFO  00:31:30,289 - #37 ;
INFO  00:31:30,289 - #12 read
INFO  00:31:30,289 - #38 (
INFO  00:31:30,289 - #48 x
ERROR 00:31:30,289 - Izvrsen oporavak do ; u liniji 53
INFO  00:31:30,289 - #39 )
INFO  00:31:30,289 - #37 ;
INFO  00:31:30,289 - #9 do
INFO  00:31:30,289 - #35 {
INFO  00:31:30,290 - #49 if
INFO  00:31:30,290 - #38 (
INFO  00:31:30,290 - #48 x
INFO  00:31:30,290 - #25 <=
INFO  00:31:30,290 - #47 0
INFO  00:31:30,290 - #39 )
INFO  00:31:30,291 - #4 break
INFO  00:31:30,291 - #37 ;
INFO  00:31:30,291 - #49 if
ERROR 00:31:30,293 - 
Sintaksna greska na liniji 59
INFO  00:31:30,293 - #38 (
INFO  00:31:30,293 - #47 0
INFO  00:31:30,293 - #25 <=
INFO  00:31:30,293 - #48 x
INFO  00:31:30,293 - #26 &&
INFO  00:31:30,294 - #48 x
INFO  00:31:30,294 - #24 <
INFO  00:31:30,294 - #48 size
INFO  00:31:30,294 - #39 )
INFO  00:31:30,294 - #35 {
INFO  00:31:30,294 - #48 val
INFO  00:31:30,294 - #30 .
INFO  00:31:30,294 - #48 putp
INFO  00:31:30,294 - #38 (
INFO  00:31:30,294 - #48 val
INFO  00:31:30,294 - #30 .
INFO  00:31:30,294 - #48 getp
INFO  00:31:30,294 - #38 (
INFO  00:31:30,294 - #48 x
INFO  00:31:30,294 - #39 )
INFO  00:31:30,294 - #41 +
INFO  00:31:30,294 - #47 1
INFO  00:31:30,294 - #39 )
INFO  00:31:30,294 - #37 ;
INFO  00:31:30,294 - #36 }
INFO  00:31:30,294 - #50 else
INFO  00:31:30,295 - #49 if
INFO  00:31:30,295 - #38 (
INFO  00:31:30,295 - #16 -
INFO  00:31:30,295 - #48 size
INFO  00:31:30,295 - #24 <
INFO  00:31:30,295 - #48 x
INFO  00:31:30,295 - #26 &&
INFO  00:31:30,295 - #48 x
INFO  00:31:30,295 - #24 <
INFO  00:31:30,295 - #47 0
INFO  00:31:30,295 - #39 )
INFO  00:31:30,295 - #35 {
INFO  00:31:30,295 - #48 val
INFO  00:31:30,295 - #30 .
INFO  00:31:30,295 - #48 putn
INFO  00:31:30,295 - #38 (
INFO  00:31:30,295 - #48 val
INFO  00:31:30,295 - #30 .
INFO  00:31:30,295 - #48 getn
INFO  00:31:30,295 - #38 (
INFO  00:31:30,295 - #16 -
INFO  00:31:30,296 - #48 x
INFO  00:31:30,296 - #39 )
INFO  00:31:30,296 - #41 +
INFO  00:31:30,296 - #47 1
INFO  00:31:30,296 - #39 )
INFO  00:31:30,296 - #37 ;
INFO  00:31:30,296 - #36 }
INFO  00:31:30,296 - #12 read
INFO  00:31:30,296 - #38 (
INFO  00:31:30,296 - #48 x
INFO  00:31:30,296 - #39 )
INFO  00:31:30,296 - #37 ;
INFO  00:31:30,296 - #36 }
INFO  00:31:30,296 - #10 while
INFO  00:31:30,296 - #38 (
ERROR 00:31:30,296 - Izvrsen oporavak do ; u liniji 58
INFO  00:31:30,296 - #3 true
INFO  00:31:30,296 - #39 )
INFO  00:31:30,301 - #37 ;
INFO  00:31:30,301 - #36 }
INFO  00:31:30,301 - #36 }
INFO  00:31:30,303 - Program(
 MJProgram
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            GroupDeclarations(
              GroupDeclarations(
                GroupDeclarations(
                  GroupDeclarations(
                    NoGroupDecl(
                    ) [NoGroupDecl]
                    GroupDeclarationVars(
                      VarDeclClass(
                        Type(
                         int
                        ) [Type]
                        VarListClass(
                          VarListSingle(
                            VarClassNoArray(
                             x
                            ) [VarClassNoArray]
                          ) [VarListSingle]
                          VarClassNoArray(
                           y
                          ) [VarClassNoArray]
                        ) [VarListClass]
                      ) [VarDeclClass]
                    ) [GroupDeclarationVars]
                  ) [GroupDeclarations]
                  GroupDeclarationVars(
                    VarDeclClass(
                      Type(
                       int
                      ) [Type]
                      VarListClass(
                        VarListClass(
                          VarListSingle(
                            VarClassArray(
                             bla
                            ) [VarClassArray]
                          ) [VarListSingle]
                          VarClassNoArray(
                           zz
                          ) [VarClassNoArray]
                        ) [VarListClass]
                        VarClassArray(
                         cc
                        ) [VarClassArray]
                      ) [VarListClass]
                    ) [VarDeclClass]
                  ) [GroupDeclarationVars]
                ) [GroupDeclarations]
                GroupDeclarationsConsts(
                  ConstDeclClass(
                    Type(
                     int
                    ) [Type]
                    ConstListClass(
                      ConstListSingle(
                        ConstListNoArray(
                         aa
                          ValuesNumber(
                           5
                          ) [ValuesNumber]
                        ) [ConstListNoArray]
                      ) [ConstListSingle]
                      ConstListNoArray(
                       bb
                        ValuesNumber(
                         6
                        ) [ValuesNumber]
                      ) [ConstListNoArray]
                    ) [ConstListClass]
                  ) [ConstDeclClass]
                ) [GroupDeclarationsConsts]
              ) [GroupDeclarations]
              GroupDeclarationsConsts(
                ConstDeclClass(
                  Type(
                   char
                  ) [Type]
                  ConstListClass(
                    ConstListSingle(
                      ConstListNoArray(
                       cc
                        ValuesChar(
                        ) [ValuesChar]
                      ) [ConstListNoArray]
                    ) [ConstListSingle]
                    ConstListNoArray(
                     dd
                      ValuesChar(
                      ) [ValuesChar]
                    ) [ConstListNoArray]
                  ) [ConstListClass]
                ) [ConstDeclClass]
              ) [GroupDeclarationsConsts]
            ) [GroupDeclarations]
            GroupDeclarationsConsts(
              ConstDeclClass(
                Type(
                 bool
                ) [Type]
                ConstListClass(
                  ConstListSingle(
                    ConstListNoArray(
                     ee
                      ValuesBoolean(
                      ) [ValuesBoolean]
                    ) [ConstListNoArray]
                  ) [ConstListSingle]
                  ConstListNoArray(
                   ff
                    ValuesBoolean(
                    ) [ValuesBoolean]
                  ) [ConstListNoArray]
                ) [ConstListClass]
              ) [ConstDeclClass]
            ) [GroupDeclarationsConsts]
          ) [GroupDeclarations]
          GroupDeclarationClasses(
            ClassDeclClass(
             Klasa
              NoExtendsOption(
              ) [NoExtendsOption]
              VarDeclListClass(
                NoVarDeclList(
                ) [NoVarDeclList]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListClass(
                    VarListClass(
                      VarListSingle(
                        VarClassNoArray(
                         duca1
                        ) [VarClassNoArray]
                      ) [VarListSingle]
                      VarClassNoArray(
                       duca2
                      ) [VarClassNoArray]
                    ) [VarListClass]
                    VarClassNoArray(
                     duca3
                    ) [VarClassNoArray]
                  ) [VarListClass]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              NoMethodsOption(
              ) [NoMethodsOption]
            ) [ClassDeclClass]
          ) [GroupDeclarationClasses]
        ) [GroupDeclarations]
        GroupDeclarationClasses(
          ClassDeclClass(
           KlasaDva
            ExtendsClassName(
              Type(
               Klasa
              ) [Type]
            ) [ExtendsClassName]
            VarDeclListClass(
              NoVarDeclList(
              ) [NoVarDeclList]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   aa
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            MethodsClassName(
              MethodDeclarations(
                NoMethodDecl(
                ) [NoMethodDecl]
                MethodDecl(
                  ReturnValueClassNoVoid(
                    Type(
                     int
                    ) [Type]
                  ) [ReturnValueClassNoVoid]
                 f
                  NoFormParam(
                  ) [NoFormParam]
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  NoStmt(
                  ) [NoStmt]
                ) [MethodDecl]
              ) [MethodDeclarations]
            ) [MethodsClassName]
          ) [ClassDeclClass]
        ) [GroupDeclarationClasses]
      ) [GroupDeclarations]
      GroupDeclarationClasses(
        ClassDeclClass(
         Klasa3
          NoExtendsOption(
          ) [NoExtendsOption]
          NoVarDeclList(
          ) [NoVarDeclList]
          NoMethodsOption(
          ) [NoMethodsOption]
        ) [ClassDeclClass]
      ) [GroupDeclarationClasses]
    ) [GroupDeclarations]
    GroupDeclarationClasses(
      ClassDeclClass(
       Klasa4
        NoExtendsOption(
        ) [NoExtendsOption]
        NoVarDeclList(
        ) [NoVarDeclList]
        MethodsClassName(
          MethodDeclarations(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              ReturnValueClassVoid(
              ) [ReturnValueClassVoid]
             bla
              NoFormParam(
              ) [NoFormParam]
              NoVarDeclList(
              ) [NoVarDeclList]
              NoStmt(
              ) [NoStmt]
            ) [MethodDecl]
          ) [MethodDeclarations]
        ) [MethodsClassName]
      ) [ClassDeclClass]
    ) [GroupDeclarationClasses]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          MethodDeclarations(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              ReturnValueClassNoVoid(
                Type(
                 int
                ) [Type]
              ) [ReturnValueClassNoVoid]
             f
              NoFormParam(
              ) [NoFormParam]
              NoVarDeclList(
              ) [NoVarDeclList]
              NoStmt(
              ) [NoStmt]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            ReturnValueClassVoid(
            ) [ReturnValueClassVoid]
           f
            NoFormParam(
            ) [NoFormParam]
            NoVarDeclList(
            ) [NoVarDeclList]
            NoStmt(
            ) [NoStmt]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
          ) [ReturnValueClassNoVoid]
         f
          FormParams(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
          ) [FormParams]
          NoVarDeclList(
          ) [NoVarDeclList]
          NoStmt(
          ) [NoStmt]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
        ) [ReturnValueClassNoVoid]
       f
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               b
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassArray(
              Type(
               int
              ) [Type]
             c
            ) [FormalParamDeclClassArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        NoStmt(
        ) [NoStmt]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
      ) [ReturnValueClassVoid]
     main
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListSingle(
                VarClassNoArray(
                 x
                ) [VarClassNoArray]
              ) [VarListSingle]
              VarClassNoArray(
               i
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           char
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             c
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      MatchedStmt(
                        Assignment(
                          DesignatorStatementClass(
                            Designator(
                             val
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            DesignatorStatementOptionsClassAssignExpression(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                              ExprSecondOptionClassNoMinus(
                                TermClass(
                                  NewFactorClass(
                                   Table
                                    NoFactorOptionalSecondClass(
                                    ) [NoFactorOptionalSecondClass]
                                  ) [NewFactorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprSecondOptionClassNoMinus]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [DesignatorStatementClass]
                        ) [Assignment]
                      ) [MatchedStmt]
                    ) [Statements]
                    MatchedStmt(
                      Assignment(
                        DesignatorStatementClass(
                          Designator(
                           val
                            OptionalDesignatorClass(
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                             pos
                            ) [OptionalDesignatorClass]
                          ) [Designator]
                          DesignatorStatementOptionsClassAssignExpression(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                            ExprSecondOptionClassNoMinus(
                              TermClass(
                                NewFactorClass(
                                 int
                                  FactorOptionalSecondClass(
                                    ExprSecondOptionClassNoMinus(
                                      TermClass(
                                        DesignatorClass(
                                          Designator(
                                           size
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                          NoFactorOptional(
                                          ) [NoFactorOptional]
                                        ) [DesignatorClass]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprSecondOptionClassNoMinus]
                                  ) [FactorOptionalSecondClass]
                                ) [NewFactorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprSecondOptionClassNoMinus]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [DesignatorStatementClass]
                      ) [Assignment]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    Assignment(
                      DesignatorStatementClass(
                        Designator(
                         val
                          OptionalDesignatorClass(
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                           neg
                          ) [OptionalDesignatorClass]
                        ) [Designator]
                        DesignatorStatementOptionsClassAssignExpression(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                          ExprSecondOptionClassNoMinus(
                            TermClass(
                              NewFactorClass(
                               int
                                FactorOptionalSecondClass(
                                  ExprSecondOptionClassNoMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                         size
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                        NoFactorOptional(
                                        ) [NoFactorOptional]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprSecondOptionClassNoMinus]
                                ) [FactorOptionalSecondClass]
                              ) [NewFactorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprSecondOptionClassNoMinus]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [DesignatorStatementClass]
                    ) [Assignment]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  Assignment(
                    DesignatorStatementClass(
                      Designator(
                       i
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      DesignatorStatementOptionsClassAssignExpression(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                        ExprSecondOptionClassNoMinus(
                          TermClass(
                            NumberConst(
                             0
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprSecondOptionClassNoMinus]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [DesignatorStatementClass]
                  ) [Assignment]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DoWhileStatement(
                  MatchedStmt(
                    StatementStatement(
                      MatchedStmt(
                        ErrorStmt(
                        ) [ErrorStmt]
                      ) [MatchedStmt]
                    ) [StatementStatement]
                  ) [MatchedStmt]
                  ConditionClass(
                    CondTermClass(
                      CondFactClass(
                        ExprSecondOptionClassNoMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                               i
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              NoFactorOptional(
                              ) [NoFactorOptional]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprSecondOptionClassNoMinus]
                        CondFactOptionalClass(
                          LessOperationClass(
                          ) [LessOperationClass]
                          ExprSecondOptionClassNoMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                 size
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                NoFactorOptional(
                                ) [NoFactorOptional]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprSecondOptionClassNoMinus]
                        ) [CondFactOptionalClass]
                      ) [CondFactClass]
                      NoCondTermOptionalClass(
                      ) [NoCondTermOptionalClass]
                    ) [CondTermClass]
                    NoConditionOptionalClass(
                    ) [NoConditionOptionalClass]
                  ) [ConditionClass]
                ) [DoWhileStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              ErrorStmt(
              ) [ErrorStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReadClass(
              Designator(
               x
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
            ) [ReadClass]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DoWhileStatement(
            MatchedStmt(
              StatementStatement(
                MatchedStmt(
                  ErrorStmt(
                  ) [ErrorStmt]
                ) [MatchedStmt]
              ) [StatementStatement]
            ) [MatchedStmt]
            ConditionClass(
              CondTermClass(
                CondFactClass(
                  ExprSecondOptionClassNoMinus(
                    TermClass(
                      BooleanClassConstFactor(
                      ) [BooleanClassConstFactor]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprSecondOptionClassNoMinus]
                  NoCondFactOptionalClass(
                  ) [NoCondFactOptionalClass]
                ) [CondFactClass]
                NoCondTermOptionalClass(
                ) [NoCondTermOptionalClass]
              ) [CondTermClass]
              NoConditionOptionalClass(
              ) [NoConditionOptionalClass]
            ) [ConditionClass]
          ) [DoWhileStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:31:30,304 - ===================================
INFO  00:31:30,309 -  Print count calls = 0
INFO  00:31:30,309 -  Deklarisanih promenljivih ima = 0
