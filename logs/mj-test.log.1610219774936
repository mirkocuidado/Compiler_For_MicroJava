INFO  20:15:48,063 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  20:15:48,128 - #2 program
INFO  20:15:48,128 - #48 test301
INFO  20:15:48,128 - #9 const
INFO  20:15:48,129 - #48 int
INFO  20:15:48,130 - #48 nula
INFO  20:15:48,130 - #24 =
INFO  20:15:48,131 - #47 0
INFO  20:15:48,131 - #38 ;
INFO  20:15:48,131 - #9 const
INFO  20:15:48,131 - #48 int
INFO  20:15:48,131 - #48 jedan
INFO  20:15:48,131 - #24 =
INFO  20:15:48,132 - #47 1
INFO  20:15:48,132 - #38 ;
INFO  20:15:48,132 - #9 const
INFO  20:15:48,132 - #48 int
INFO  20:15:48,132 - #48 pet
INFO  20:15:48,132 - #24 =
INFO  20:15:48,132 - #47 5
INFO  20:15:48,132 - #38 ;
INFO  20:15:48,132 - #48 int
INFO  20:15:48,140 - #48 niz
INFO  20:15:48,140 - #44 [
INFO  20:15:48,140 - #45 ]
INFO  20:15:48,140 - #38 ;
INFO  20:15:48,140 - #48 char
INFO  20:15:48,141 - #48 nizch
INFO  20:15:48,141 - #44 [
INFO  20:15:48,141 - #45 ]
INFO  20:15:48,141 - #38 ;
INFO  20:15:48,141 - #40 {
INFO  20:15:48,141 - #5 void
INFO  20:15:48,142 - #48 main
INFO  20:15:48,142 - #42 (
INFO  20:15:48,143 - #43 )
INFO  20:15:48,143 - #48 int
INFO  20:15:48,144 - #48 bodovi
INFO  20:15:48,144 - #38 ;
INFO  20:15:48,144 - #48 bool
INFO  20:15:48,144 - #48 bt
INFO  20:15:48,145 - #38 ;
INFO  20:15:48,145 - #40 {
INFO  20:15:48,145 - #48 bodovi
INFO  20:15:48,146 - #24 =
INFO  20:15:48,148 - #47 0
INFO  20:15:48,149 - #38 ;
INFO  20:15:48,151 - #48 bodovi
INFO  20:15:48,151 - #33 ++
INFO  20:15:48,151 - #38 ;
INFO  20:15:48,152 - #48 bodovi
INFO  20:15:48,152 - #24 =
INFO  20:15:48,152 - #48 bodovi
INFO  20:15:48,152 - #19 +
INFO  20:15:48,153 - #48 jedan
INFO  20:15:48,155 - #38 ;
INFO  20:15:48,155 - #48 bodovi
INFO  20:15:48,155 - #24 =
INFO  20:15:48,155 - #48 bodovi
INFO  20:15:48,155 - #21 *
INFO  20:15:48,155 - #48 pet
INFO  20:15:48,156 - #38 ;
INFO  20:15:48,157 - #48 bodovi
INFO  20:15:48,157 - #34 --
INFO  20:15:48,157 - #38 ;
INFO  20:15:48,158 - #18 print
INFO  20:15:48,158 - #42 (
INFO  20:15:48,158 - #48 bodovi
INFO  20:15:48,158 - #43 )
INFO  20:15:48,159 - #38 ;
INFO  20:15:48,159 - #41 }
INFO  20:15:48,159 - #41 }
INFO  20:15:48,168 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            NoGroupDecl(
            ) [NoGroupDecl]
            GroupDeclarationsConsts(
              ConstDeclClass(
                Type(
                 int
                ) [Type]
                ConstListSingle(
                  ConstListNoArray(
                   nula
                    ValuesNumber(
                     0
                    ) [ValuesNumber]
                  ) [ConstListNoArray]
                ) [ConstListSingle]
              ) [ConstDeclClass]
            ) [GroupDeclarationsConsts]
          ) [GroupDeclarations]
          GroupDeclarationsConsts(
            ConstDeclClass(
              Type(
               int
              ) [Type]
              ConstListSingle(
                ConstListNoArray(
                 jedan
                  ValuesNumber(
                   1
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListSingle]
            ) [ConstDeclClass]
          ) [GroupDeclarationsConsts]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListSingle(
              ConstListNoArray(
               pet
                ValuesNumber(
                 5
                ) [ValuesNumber]
              ) [ConstListNoArray]
            ) [ConstListSingle]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             niz
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         char
        ) [Type]
        VarListSingle(
          VarClassArray(
           nizch
          ) [VarClassArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               bodovi
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             bt
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  Assignment(
                    DesignatorStatementClass(
                      Designator(
                       bodovi
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      DesignatorStatementOptionsClassAssignExpression(
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 0
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [DesignatorStatementClass]
                  ) [Assignment]
                ) [Statements]
                Assignment(
                  DesignatorStatementClass(
                    Designator(
                     bodovi
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    DesignatorStatementPlusPlus(
                    ) [DesignatorStatementPlusPlus]
                  ) [DesignatorStatementClass]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementClass(
                  Designator(
                   bodovi
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  DesignatorStatementOptionsClassAssignExpression(
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                               bodovi
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              NoFactorOptional(
                              ) [NoFactorOptional]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          ExprOptionalListClass(
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                            PlusOperation(
                            ) [PlusOperation]
                            TermClass(
                              DesignatorClass(
                                Designator(
                                 jedan
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                NoFactorOptional(
                                ) [NoFactorOptional]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                          ) [ExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [DesignatorStatementClass]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementClass(
                Designator(
                 bodovi
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                DesignatorStatementOptionsClassAssignExpression(
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                             bodovi
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            NoFactorOptional(
                            ) [NoFactorOptional]
                          ) [DesignatorClass]
                          TermOptionalListClass(
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                            MultiplyOperationClass(
                            ) [MultiplyOperationClass]
                            DesignatorClass(
                              Designator(
                               pet
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              NoFactorOptional(
                              ) [NoFactorOptional]
                            ) [DesignatorClass]
                          ) [TermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [DesignatorStatementClass]
            ) [Assignment]
          ) [Statements]
          Assignment(
            DesignatorStatementClass(
              Designator(
               bodovi
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              DesignatorStatementMinusMinus(
              ) [DesignatorStatementMinusMinus]
            ) [DesignatorStatementClass]
          ) [Assignment]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                     bodovi
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    NoFactorOptional(
                    ) [NoFactorOptional]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:15:48,169 - ===================================
INFO  20:15:48,172 - PROGRAM NAME DETECTED => test301 ON LINE 3
INFO  20:15:48,172 - CONST VARIABLE nula IS BEING DEFINED! ON LINE 5
INFO  20:15:48,172 - CONST VARIABLE jedan IS BEING DEFINED! ON LINE 6
INFO  20:15:48,172 - CONST VARIABLE pet IS BEING DEFINED! ON LINE 7
INFO  20:15:48,172 - ARRAY VARIABLE niz IS BEING DEFINED! ON LINE 9
INFO  20:15:48,172 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  20:15:48,173 - ARRAY VARIABLE nizch IS BEING DEFINED! ON LINE 10
INFO  20:15:48,173 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 10
INFO  20:15:48,173 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 13
INFO  20:15:48,173 - VARIABLE bodovi IS BEING DEFINED! ON LINE 14
INFO  20:15:48,173 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 14
INFO  20:15:48,173 - VARIABLE bt IS BEING DEFINED! ON LINE 15
INFO  20:15:48,173 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 15
INFO  20:15:48,173 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:15:48,173 - SUCCESSFUL ASSIGNEMENT! ON LINE 17
INFO  20:15:48,173 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:15:48,173 - USING ++ ON bodovi
INFO  20:15:48,173 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:15:48,173 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:15:48,173 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE 1
INFO  20:15:48,173 - SUCCESSFUL ASSIGNEMENT! ON LINE 19
INFO  20:15:48,173 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:15:48,174 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:15:48,174 - CURRENT VARIABLE IN USE IS pet AND IT IS OF TYPE 1
INFO  20:15:48,174 - SUCCESSFUL ASSIGNEMENT! ON LINE 20
INFO  20:15:48,174 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:15:48,174 - USING -- ON bodovi
INFO  20:15:48,174 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE 1
INFO  20:15:48,174 - PRINT FUNCTION CALL IN USE! ON LINE 22
INFO  20:15:48,174 - PROGRAM ENDED => test301 ON LINE 3
INFO  20:15:48,174 -  Deklarisanih promenljivih ima = 4
INFO  20:15:48,174 - ===================================
INFO  20:15:48,174 - Parsiranje uspesno zavrseno!
