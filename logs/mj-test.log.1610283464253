INFO  13:53:14,369 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  13:53:14,417 - #2 program
INFO  13:53:14,418 - #48 MJProgram
INFO  13:53:14,418 - #48 int
INFO  13:53:14,420 - #48 a
INFO  13:53:14,421 - #36 ,
INFO  13:53:14,422 - #48 b
INFO  13:53:14,422 - #44 [
INFO  13:53:14,422 - #45 ]
INFO  13:53:14,422 - #36 ,
INFO  13:53:14,423 - #48 c
INFO  13:53:14,423 - #36 ,
INFO  13:53:14,424 - #48 d
INFO  13:53:14,424 - #38 ;
INFO  13:53:14,424 - #48 char
INFO  13:53:14,425 - #48 e
INFO  13:53:14,425 - #36 ,
INFO  13:53:14,425 - #48 f
INFO  13:53:14,426 - #44 [
INFO  13:53:14,426 - #45 ]
INFO  13:53:14,426 - #36 ,
INFO  13:53:14,426 - #48 g
INFO  13:53:14,426 - #38 ;
INFO  13:53:14,435 - #48 bool
INFO  13:53:14,435 - #48 h
INFO  13:53:14,435 - #36 ,
INFO  13:53:14,435 - #48 i
INFO  13:53:14,436 - #44 [
INFO  13:53:14,436 - #45 ]
INFO  13:53:14,436 - #38 ;
INFO  13:53:14,436 - #9 const
INFO  13:53:14,436 - #48 int
INFO  13:53:14,436 - #48 aa
INFO  13:53:14,437 - #24 =
INFO  13:53:14,437 - #47 2
INFO  13:53:14,437 - #36 ,
INFO  13:53:14,438 - #48 bb
INFO  13:53:14,438 - #24 =
INFO  13:53:14,438 - #47 6
INFO  13:53:14,438 - #38 ;
INFO  13:53:14,438 - #9 const
INFO  13:53:14,439 - #48 char
INFO  13:53:14,439 - #48 cc
INFO  13:53:14,439 - #24 =
INFO  13:53:14,440 - #49 c
INFO  13:53:14,440 - #36 ,
INFO  13:53:14,440 - #48 dd
INFO  13:53:14,440 - #24 =
INFO  13:53:14,440 - #49 d
INFO  13:53:14,440 - #38 ;
INFO  13:53:14,441 - #9 const
INFO  13:53:14,441 - #48 bool
INFO  13:53:14,441 - #48 ee
INFO  13:53:14,441 - #24 =
INFO  13:53:14,441 - #50 true
INFO  13:53:14,441 - #36 ,
INFO  13:53:14,442 - #48 ff
INFO  13:53:14,442 - #24 =
INFO  13:53:14,442 - #50 false
INFO  13:53:14,442 - #38 ;
INFO  13:53:14,442 - #40 {
INFO  13:53:14,442 - #5 void
INFO  13:53:14,445 - #48 main
INFO  13:53:14,445 - #42 (
INFO  13:53:14,445 - #48 int
INFO  13:53:14,446 - #48 a
INFO  13:53:14,446 - #36 ,
INFO  13:53:14,446 - #48 int
INFO  13:53:14,446 - #48 b
INFO  13:53:14,446 - #44 [
INFO  13:53:14,446 - #45 ]
INFO  13:53:14,446 - #36 ,
INFO  13:53:14,446 - #48 char
INFO  13:53:14,446 - #48 c
INFO  13:53:14,446 - #36 ,
INFO  13:53:14,446 - #48 char
INFO  13:53:14,447 - #48 d
INFO  13:53:14,447 - #44 [
INFO  13:53:14,447 - #45 ]
INFO  13:53:14,447 - #36 ,
INFO  13:53:14,447 - #48 bool
INFO  13:53:14,447 - #48 e
INFO  13:53:14,447 - #36 ,
INFO  13:53:14,447 - #48 bool
INFO  13:53:14,447 - #48 f
INFO  13:53:14,447 - #44 [
INFO  13:53:14,447 - #45 ]
INFO  13:53:14,447 - #43 )
INFO  13:53:14,447 - #40 {
INFO  13:53:14,448 - #18 print
INFO  13:53:14,449 - #42 (
INFO  13:53:14,449 - #48 aa
INFO  13:53:14,449 - #43 )
INFO  13:53:14,452 - #38 ;
INFO  13:53:14,452 - #18 print
INFO  13:53:14,452 - #42 (
INFO  13:53:14,452 - #48 bb
INFO  13:53:14,452 - #43 )
INFO  13:53:14,452 - #38 ;
INFO  13:53:14,452 - #41 }
INFO  13:53:14,452 - #41 }
INFO  13:53:14,458 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            GroupDeclarations(
              NoGroupDecl(
              ) [NoGroupDecl]
              GroupDeclarationVars(
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListClass(
                    VarListClass(
                      VarListClass(
                        VarListSingle(
                          VarClassNoArray(
                           a
                          ) [VarClassNoArray]
                        ) [VarListSingle]
                        VarClassArray(
                         b
                        ) [VarClassArray]
                      ) [VarListClass]
                      VarClassNoArray(
                       c
                      ) [VarClassNoArray]
                    ) [VarListClass]
                    VarClassNoArray(
                     d
                    ) [VarClassNoArray]
                  ) [VarListClass]
                ) [VarDeclClass]
              ) [GroupDeclarationVars]
            ) [GroupDeclarations]
            GroupDeclarationVars(
              VarDeclClass(
                Type(
                 char
                ) [Type]
                VarListClass(
                  VarListClass(
                    VarListSingle(
                      VarClassNoArray(
                       e
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                    VarClassArray(
                     f
                    ) [VarClassArray]
                  ) [VarListClass]
                  VarClassNoArray(
                   g
                  ) [VarClassNoArray]
                ) [VarListClass]
              ) [VarDeclClass]
            ) [GroupDeclarationVars]
          ) [GroupDeclarations]
          GroupDeclarationVars(
            VarDeclClass(
              Type(
               bool
              ) [Type]
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   h
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassArray(
                 i
                ) [VarClassArray]
              ) [VarListClass]
            ) [VarDeclClass]
          ) [GroupDeclarationVars]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListClass(
              ConstListSingle(
                ConstListNoArray(
                 aa
                  ValuesNumber(
                   2
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListSingle]
              ConstListNoArray(
               bb
                ValuesNumber(
                 6
                ) [ValuesNumber]
              ) [ConstListNoArray]
            ) [ConstListClass]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           char
          ) [Type]
          ConstListClass(
            ConstListSingle(
              ConstListNoArray(
               cc
                ValuesChar(
                 c
                ) [ValuesChar]
              ) [ConstListNoArray]
            ) [ConstListSingle]
            ConstListNoArray(
             dd
              ValuesChar(
               d
              ) [ValuesChar]
            ) [ConstListNoArray]
          ) [ConstListClass]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         bool
        ) [Type]
        ConstListClass(
          ConstListSingle(
            ConstListNoArray(
             ee
              ValuesBoolean(
               true
              ) [ValuesBoolean]
            ) [ConstListNoArray]
          ) [ConstListSingle]
          ConstListNoArray(
           ff
            ValuesBoolean(
             false
            ) [ValuesBoolean]
          ) [ConstListNoArray]
        ) [ConstListClass]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  ProgramLBraceClass(
  ) [ProgramLBraceClass]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      FormParams(
        FormalParamDecls(
          FormalParamDecls(
            FormalParamDecls(
              FormalParamDecls(
                FormalParamDecls(
                  SingleFormalParamDecl(
                    FormalParamDeclClassNoArray(
                      Type(
                       int
                      ) [Type]
                     a
                    ) [FormalParamDeclClassNoArray]
                  ) [SingleFormalParamDecl]
                  FormalParamDeclClassArray(
                    Type(
                     int
                    ) [Type]
                   b
                  ) [FormalParamDeclClassArray]
                ) [FormalParamDecls]
                FormalParamDeclClassNoArray(
                  Type(
                   char
                  ) [Type]
                 c
                ) [FormalParamDeclClassNoArray]
              ) [FormalParamDecls]
              FormalParamDeclClassArray(
                Type(
                 char
                ) [Type]
               d
              ) [FormalParamDeclClassArray]
            ) [FormalParamDecls]
            FormalParamDeclClassNoArray(
              Type(
               bool
              ) [Type]
             e
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
          FormalParamDeclClassArray(
            Type(
             bool
            ) [Type]
           f
          ) [FormalParamDeclClassArray]
        ) [FormalParamDecls]
      ) [FormParams]
      NoVarDeclList(
      ) [NoVarDeclList]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                       aa
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      NoFactorOptional(
                      ) [NoFactorOptional]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                     bb
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    NoFactorOptional(
                    ) [NoFactorOptional]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:53:14,459 - ===================================
INFO  13:53:14,462 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  13:53:14,462 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  13:53:14,462 - ARRAY VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  13:53:14,462 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  13:53:14,462 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  13:53:14,462 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  13:53:14,462 - VARIABLE e IS BEING DEFINED! ON LINE 3
INFO  13:53:14,462 - ARRAY VARIABLE f IS BEING DEFINED! ON LINE 3
INFO  13:53:14,462 - VARIABLE g IS BEING DEFINED! ON LINE 3
INFO  13:53:14,462 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 3
INFO  13:53:14,462 - VARIABLE h IS BEING DEFINED! ON LINE 4
INFO  13:53:14,462 - ARRAY VARIABLE i IS BEING DEFINED! ON LINE 4
INFO  13:53:14,462 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 4
INFO  13:53:14,462 - CONST VALUE 2 IS BEING USED! ON LINE 6
INFO  13:53:14,462 - CONST VARIABLE aa IS BEING DEFINED! ON LINE 6
INFO  13:53:14,463 - CONST VALUE 6 IS BEING USED! ON LINE 6
INFO  13:53:14,463 - CONST VARIABLE bb IS BEING DEFINED! ON LINE 6
INFO  13:53:14,463 - CONST VALUE c IS BEING USED! ON LINE 7
INFO  13:53:14,463 - CONST VARIABLE cc IS BEING DEFINED! ON LINE 7
INFO  13:53:14,463 - CONST VALUE d IS BEING USED! ON LINE 7
INFO  13:53:14,463 - CONST VARIABLE dd IS BEING DEFINED! ON LINE 7
INFO  13:53:14,463 - CONST VALUE true IS BEING USED! ON LINE 8
INFO  13:53:14,463 - CONST VARIABLE ee IS BEING DEFINED! ON LINE 8
INFO  13:53:14,463 - CONST VALUE false IS BEING USED! ON LINE 8
INFO  13:53:14,463 - CONST VARIABLE ff IS BEING DEFINED! ON LINE 8
INFO  13:53:14,463 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 10
INFO  13:53:14,463 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 10
INFO  13:53:14,463 - FORMAL ARRAY PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 10
INFO  13:53:14,463 - FORMAL PARAMETER c DEFINED AND IT IS OF TYPE char ON LINE 10
INFO  13:53:14,463 - FORMAL ARRAY PARAMETER d DEFINED AND IT IS OF TYPE char ON LINE 10
INFO  13:53:14,463 - FORMAL PARAMETER e DEFINED AND IT IS OF TYPE boolean ON LINE 10
INFO  13:53:14,463 - FORMAL ARRAY PARAMETER f DEFINED AND IT IS OF TYPE boolean ON LINE 10
INFO  13:53:14,463 - METHOD BODY STARTING!
INFO  13:53:14,463 - CURRENT VARIABLE IN USE IS aa AND IT IS OF TYPE int
INFO  13:53:14,464 - WE ARE USING A VARIABLE OF TYPE int ON LINE 11
INFO  13:53:14,464 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  13:53:14,464 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  13:53:14,464 - PRINT FUNCTION CALL IN USE! ON LINE 11
INFO  13:53:14,464 - CURRENT VARIABLE IN USE IS bb AND IT IS OF TYPE int
INFO  13:53:14,464 - WE ARE USING A VARIABLE OF TYPE int ON LINE 13
INFO  13:53:14,464 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  13:53:14,464 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  13:53:14,464 - PRINT FUNCTION CALL IN USE! ON LINE 13
INFO  13:53:14,464 - METHOD BODY ENDING!
INFO  13:53:14,464 - END OF DEFINING FUNCTION main
INFO  13:53:14,464 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  13:53:14,464 -  Deklarisanih promenljivih ima = 9
INFO  13:53:14,464 - ===================================
INFO  13:53:14,467 - Parsiranje uspesno zavrseno!
