INFO  23:58:28,870 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  23:58:29,001 - #2 program
INFO  23:58:29,001 - #43 MJProgram
INFO  23:58:29,001 - #43 int
INFO  23:58:29,003 - #43 a
INFO  23:58:29,003 - #31 ,
INFO  23:58:29,004 - #43 b
INFO  23:58:29,004 - #31 ,
INFO  23:58:29,004 - #43 c
INFO  23:58:29,005 - #31 ,
INFO  23:58:29,005 - #43 d
INFO  23:58:29,005 - #33 ;
INFO  23:58:29,005 - #9 const
INFO  23:58:29,006 - #43 int
INFO  23:58:29,006 - #43 y
INFO  23:58:29,006 - #19 =
INFO  23:58:29,006 - #42 3
INFO  23:58:29,006 - #33 ;
INFO  23:58:29,007 - #35 {
INFO  23:58:29,007 - #5 void
INFO  23:58:29,008 - #43 main
INFO  23:58:29,008 - #37 (
INFO  23:58:29,018 - #38 )
INFO  23:58:29,019 - #43 int
INFO  23:58:29,021 - #43 x
INFO  23:58:29,021 - #33 ;
INFO  23:58:29,021 - #35 {
INFO  23:58:29,022 - #43 x
INFO  23:58:29,028 - #19 =
INFO  23:58:29,032 - #42 2
INFO  23:58:29,034 - #49 +
INFO  23:58:29,035 - #42 3
INFO  23:58:29,036 - #49 +
INFO  23:58:29,036 - #42 4
INFO  23:58:29,036 - #49 +
INFO  23:58:29,036 - #42 5
INFO  23:58:29,036 - #33 ;
INFO  23:58:29,036 - #18 print
INFO  23:58:29,037 - #37 (
INFO  23:58:29,037 - #43 x
INFO  23:58:29,037 - #38 )
INFO  23:58:29,038 - #33 ;
INFO  23:58:29,038 - #36 }
INFO  23:58:29,038 - #36 }
INFO  23:58:29,054 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      NoGroupDecl(
      ) [NoGroupDecl]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 b
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               c
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             d
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        NoVarDeclList(
        ) [NoVarDeclList]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             x
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          Assignment(
            DesignatorStatementOptionsClassAssignExpression(
              Designator(
               x
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              HelperClass(
              ) [HelperClass]
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       2
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    ExprOptionalListClass(
                      ExprOptionalListClass(
                        ExprOptionalListClass(
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                          PlusOperation(
                           +
                          ) [PlusOperation]
                          TermClass(
                            NumberConst(
                             3
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                        ) [ExprOptionalListClass]
                        PlusOperation(
                         +
                        ) [PlusOperation]
                        TermClass(
                          NumberConst(
                           4
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                      ) [ExprOptionalListClass]
                      PlusOperation(
                       +
                      ) [PlusOperation]
                      TermClass(
                        NumberConst(
                         5
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                    ) [ExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [Assignment]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    HelperClass(
                    ) [HelperClass]
                    Designator(
                     x
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:58:29,055 - ===================================
INFO  23:58:29,059 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  23:58:29,059 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  23:58:29,059 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  23:58:29,059 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  23:58:29,059 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  23:58:29,060 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  23:58:29,060 - CONST VALUE 3 IS BEING USED! ON LINE 4
INFO  23:58:29,060 - CONST VARIABLE y IS BEING DEFINED! ON LINE 4
INFO  23:58:29,060 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 11
INFO  23:58:29,061 - VARIABLE x IS BEING DEFINED! ON LINE 12
INFO  23:58:29,061 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 12
INFO  23:58:29,061 - METHOD BODY STARTING!
INFO  23:58:29,061 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  23:58:29,062 - BEGINNING OF AN ASSIGNEMENT! ON LINE 20
INFO  23:58:29,062 - CONST NUMBER 2 ON LINE 20
INFO  23:58:29,062 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  23:58:29,062 - CONST NUMBER 3 ON LINE 20
INFO  23:58:29,063 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  23:58:29,063 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 6
INFO  23:58:29,064 - CONST NUMBER 4 ON LINE 20
INFO  23:58:29,064 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  23:58:29,064 - USING INTEGERS IN TERM! ON LINE 6
INFO  23:58:29,064 - CONST NUMBER 5 ON LINE 20
INFO  23:58:29,064 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  23:58:29,064 - USING INTEGERS IN TERM! ON LINE 6
INFO  23:58:29,065 - USING INTEGERS IN TERM! ON LINE 20
INFO  23:58:29,065 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 20
INFO  23:58:29,065 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  23:58:29,065 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  23:58:29,066 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  23:58:29,066 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  23:58:29,066 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  23:58:29,067 - METHOD BODY ENDING!
INFO  23:58:29,067 - END OF DEFINING FUNCTION main
INFO  23:58:29,067 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  23:58:29,067 -  Deklarisanih promenljivih ima = 5
INFO  23:58:29,067 - ===================================
INFO  23:58:29,074 - Parsiranje uspesno zavrseno!
