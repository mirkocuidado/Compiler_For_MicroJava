INFO  23:02:12,418 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  23:02:12,475 - #34 program
INFO  23:02:12,475 - #48 MJProgram
INFO  23:02:12,475 - #48 int
INFO  23:02:12,476 - #37 ;
ERROR 23:02:12,476 - 
Sintaksna greska na liniji 2
INFO  23:02:12,476 - #48 int
INFO  23:02:12,476 - #48 t
INFO  23:02:12,476 - #48 a
ERROR 23:02:12,477 - Successful error recovery by parser on line 8 -> Variable Declaration Semi
ERROR 23:02:12,480 - 
Sintaksna greska na liniji 3
INFO  23:02:12,480 - #42 ,
INFO  23:02:12,480 - #48 b
INFO  23:02:12,480 - #42 ,
INFO  23:02:12,480 - #48 c
ERROR 23:02:12,480 - Successful error recovery by parser on line 3 -> Variable Declaration Comma
INFO  23:02:12,488 - #37 ;
INFO  23:02:12,488 - #48 int
INFO  23:02:12,489 - #48 a
INFO  23:02:12,489 - #42 ,
INFO  23:02:12,489 - #48 x
INFO  23:02:12,489 - #42 ,
INFO  23:02:12,489 - #48 dd
INFO  23:02:12,489 - #42 ,
INFO  23:02:12,489 - #48 b
INFO  23:02:12,489 - #42 ,
INFO  23:02:12,489 - #48 c
INFO  23:02:12,489 - #37 ;
INFO  23:02:12,489 - #35 {
INFO  23:02:12,489 - #44 void
INFO  23:02:12,490 - #48 main
INFO  23:02:12,491 - #38 (
INFO  23:02:12,491 - #39 )
INFO  23:02:12,491 - #35 {
INFO  23:02:12,492 - #49 if
INFO  23:02:12,492 - #38 (
INFO  23:02:12,492 - #48 a
INFO  23:02:12,492 - #20 ==
INFO  23:02:12,496 - #47 3
INFO  23:02:12,496 - #27 ||
INFO  23:02:12,497 - #48 b
INFO  23:02:12,497 - #20 ==
INFO  23:02:12,497 - #27 ||
ERROR 23:02:12,497 - 
Sintaksna greska na liniji 10
INFO  23:02:12,497 - #48 c
INFO  23:02:12,497 - #20 ==
INFO  23:02:12,497 - #47 5
INFO  23:02:12,497 - #39 )
INFO  23:02:12,498 - #48 z
INFO  23:02:12,498 - #33 =
INFO  23:02:12,498 - #47 2
ERROR 23:02:12,498 - Successful error recovery by parser on line 10 -> If Statement Condition
INFO  23:02:12,499 - #37 ;
INFO  23:02:12,500 - #36 }
INFO  23:02:12,502 - #36 }
INFO  23:02:12,504 - Program(
 MJProgram
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclYesError(
          ) [VarDeclYesError]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              ErrorVarList(
              ) [ErrorVarList]
              VarClassNoArray(
               b
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             c
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListClass(
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 x
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               dd
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             b
            ) [VarClassNoArray]
          ) [VarListClass]
          VarClassNoArray(
           c
          ) [VarClassNoArray]
        ) [VarListClass]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
      ) [ReturnValueClassVoid]
     main
      NoFormParam(
      ) [NoFormParam]
      NoVarDeclList(
      ) [NoVarDeclList]
      Statements(
        NoStmt(
        ) [NoStmt]
        IfStatement(
          IfConditionNoError(
            IfConditionYesError(
            ) [IfConditionYesError]
          ) [IfConditionNoError]
          Assignment(
            DesignatorStatementClass(
              Designator(
               z
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              DesignatorStatementOptionsClassAssignExpression(
                AssignOperationClass(
                ) [AssignOperationClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        NumberConst(
                         2
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [DesignatorStatementClass]
          ) [Assignment]
          NoOptionalStatement(
          ) [NoOptionalStatement]
        ) [IfStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:02:12,505 - ===================================
