INFO  00:22:35,089 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  00:22:35,162 - #34 program
INFO  00:22:35,162 - #48 MJProgram
INFO  00:22:35,162 - #35 {
INFO  00:22:35,163 - #44 void
INFO  00:22:35,164 - #48 main
INFO  00:22:35,165 - #38 (
INFO  00:22:35,165 - #39 )
INFO  00:22:35,166 - #35 {
INFO  00:22:35,167 - #49 if
INFO  00:22:35,168 - #38 (
INFO  00:22:35,168 - #48 a
INFO  00:22:35,168 - #20 ==
INFO  00:22:35,173 - #47 5
INFO  00:22:35,174 - #27 ||
INFO  00:22:35,177 - #48 c
INFO  00:22:35,177 - #20 ==
INFO  00:22:35,177 - #39 )
ERROR 00:22:35,177 - 
Sintaksna greska na liniji 6
INFO  00:22:35,177 - #35 {
INFO  00:22:35,177 - #48 zzz
INFO  00:22:35,186 - #33 =
ERROR 00:22:35,186 - Successful error recovery by parser on line 6 -> ConditionOptional
INFO  00:22:35,187 - #47 43
INFO  00:22:35,189 - #37 ;
INFO  00:22:35,189 - #36 }
INFO  00:22:35,189 - #36 }
INFO  00:22:35,190 - #36 }
INFO  00:22:35,193 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  NoGroupDecl(
  ) [NoGroupDecl]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
      ) [ReturnValueClassVoid]
     main
      NoFormParam(
      ) [NoFormParam]
      NoVarDeclList(
      ) [NoVarDeclList]
      Statements(
        NoStmt(
        ) [NoStmt]
        IfStatement(
          IfConditionNoError(
            ConditionClass(
              CondTermClass(
                CondFactClass(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                             a
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            NoFactorOptional(
                            ) [NoFactorOptional]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  CondFactOptionalClass(
                    RelationOperationClassEqualComparation(
                    ) [RelationOperationClassEqualComparation]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             5
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [CondFactOptionalClass]
                ) [CondFactClass]
                NoCondTermOptionalClass(
                ) [NoCondTermOptionalClass]
              ) [CondTermClass]
              IfConditionYesError(
              ) [IfConditionYesError]
            ) [ConditionClass]
          ) [IfConditionNoError]
          StatementStatement(
            Statements(
              NoStmt(
              ) [NoStmt]
              Assignment(
                DesignatorStatementClass(
                  Designator(
                   zzz
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  DesignatorStatementOptionsClassAssignExpression(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             43
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [DesignatorStatementClass]
              ) [Assignment]
            ) [Statements]
          ) [StatementStatement]
          NoOptionalStatement(
          ) [NoOptionalStatement]
        ) [IfStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:22:35,194 - ===================================
