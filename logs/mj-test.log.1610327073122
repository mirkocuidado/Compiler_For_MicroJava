INFO  02:04:02,995 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  02:04:03,067 - #2 program
INFO  02:04:03,068 - #48 MJProgram
INFO  02:04:03,068 - #40 {
INFO  02:04:03,069 - #48 int
INFO  02:04:03,070 - #48 k
INFO  02:04:03,071 - #42 (
INFO  02:04:03,071 - #43 )
INFO  02:04:03,072 - #40 {
INFO  02:04:03,073 - #46 return
INFO  02:04:03,074 - #47 22
INFO  02:04:03,075 - #38 ;
INFO  02:04:03,077 - #41 }
INFO  02:04:03,077 - #5 void
INFO  02:04:03,080 - #48 main
INFO  02:04:03,080 - #42 (
INFO  02:04:03,080 - #43 )
INFO  02:04:03,080 - #48 int
INFO  02:04:03,080 - #48 x
INFO  02:04:03,081 - #38 ;
INFO  02:04:03,081 - #9 const
ERROR 02:04:03,081 - 
 SYNTAX ERROR!  ON LINE 11
INFO  02:04:03,090 - #48 int
INFO  02:04:03,090 - #48 y
INFO  02:04:03,090 - #24 =
INFO  02:04:03,091 - #47 3
INFO  02:04:03,091 - #38 ;
INFO  02:04:03,091 - #40 {
INFO  02:04:03,091 - #48 x
INFO  02:04:03,092 - #24 =
ERROR 02:04:03,092 - VARIABLE DECLARATION SUCCESSFULL RECOVERY *** SEMI *** ON LINE 11
INFO  02:04:03,095 - #48 k
INFO  02:04:03,097 - #42 (
INFO  02:04:03,097 - #43 )
INFO  02:04:03,098 - #38 ;
INFO  02:04:03,098 - #18 print
INFO  02:04:03,099 - #42 (
INFO  02:04:03,099 - #48 x
INFO  02:04:03,099 - #43 )
INFO  02:04:03,100 - #38 ;
INFO  02:04:03,100 - #48 x
INFO  02:04:03,100 - #24 =
INFO  02:04:03,100 - #48 y
INFO  02:04:03,101 - #38 ;
INFO  02:04:03,101 - #18 print
INFO  02:04:03,101 - #42 (
INFO  02:04:03,101 - #48 x
INFO  02:04:03,101 - #43 )
INFO  02:04:03,101 - #38 ;
INFO  02:04:03,101 - #18 print
INFO  02:04:03,101 - #42 (
INFO  02:04:03,101 - #48 y
INFO  02:04:03,101 - #43 )
INFO  02:04:03,101 - #38 ;
INFO  02:04:03,101 - #46 return
INFO  02:04:03,101 - #38 ;
INFO  02:04:03,102 - #41 }
INFO  02:04:03,102 - #41 }
INFO  02:04:03,109 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  NoGroupDecl(
  ) [NoGroupDecl]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        NoFormParam(
        ) [NoFormParam]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    NumberConst(
                     22
                    ) [NumberConst]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        NoVarDeclList(
        ) [NoVarDeclList]
        VarDeclYesError(
        ) [VarDeclYesError]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  Assignment(
                    DesignatorStatementClass(
                      Designator(
                       x
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      HelperClass(
                      ) [HelperClass]
                      DesignatorStatementOptionsClassAssignExpression(
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  HelperClass(
                                  ) [HelperClass]
                                  Designator(
                                   k
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                  FactorOptionalParams(
                                    NoActuals(
                                    ) [NoActuals]
                                  ) [FactorOptionalParams]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [DesignatorStatementClass]
                  ) [Assignment]
                ) [Statements]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            HelperClass(
                            ) [HelperClass]
                            Designator(
                             x
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            NoFactorOptional(
                            ) [NoFactorOptional]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
              Assignment(
                DesignatorStatementClass(
                  Designator(
                   x
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  HelperClass(
                  ) [HelperClass]
                  DesignatorStatementOptionsClassAssignExpression(
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              HelperClass(
                              ) [HelperClass]
                              Designator(
                               y
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              NoFactorOptional(
                              ) [NoFactorOptional]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [DesignatorStatementClass]
              ) [Assignment]
            ) [Statements]
            PrintStmt(
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        HelperClass(
                        ) [HelperClass]
                        Designator(
                         x
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        NoFactorOptional(
                        ) [NoFactorOptional]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
              NoCommaNumberClass(
              ) [NoCommaNumberClass]
            ) [PrintStmt]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      HelperClass(
                      ) [HelperClass]
                      Designator(
                       y
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      NoFactorOptional(
                      ) [NoFactorOptional]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        ReturnNoExpr(
        ) [ReturnNoExpr]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  02:04:03,111 - ===================================
INFO  02:04:03,115 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  02:04:03,115 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 5
INFO  02:04:03,115 - METHOD BODY STARTING!
INFO  02:04:03,115 - CONST NUMBER 22 ON LINE 5
INFO  02:04:03,115 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 5
INFO  02:04:03,115 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 5
INFO  02:04:03,115 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 5
INFO  02:04:03,115 - METHOD BODY ENDING!
INFO  02:04:03,115 - END OF DEFINING FUNCTION k
INFO  02:04:03,116 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 9
INFO  02:04:03,116 - METHOD BODY STARTING!
ERROR 02:04:03,116 - VARIABLE OF NAME x IS NOT DEFINED!
INFO  02:04:03,116 - BEGINNING OF AN ASSIGNEMENT! ON LINE 18
INFO  02:04:03,116 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  02:04:03,116 - WE ARE USING A VARIABLE OF TYPE int ON LINE 4
INFO  02:04:03,116 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  02:04:03,116 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
ERROR 02:04:03,116 - ASSIGNEMENT FAILED! TYPES: void AND int ! ON LINE 18
ERROR 02:04:03,116 - VARIABLE OF NAME x IS NOT DEFINED!
INFO  02:04:03,117 - WE ARE USING A VARIABLE OF TYPE void ON LINE 7
INFO  02:04:03,117 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  02:04:03,117 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
ERROR 02:04:03,117 - EXPRESSION USED IN PRINT IS NOT A VARIABLE OF TYPE BOOL, CHAR OR INT OR AN ARRAY! ON LINE 7
ERROR 02:04:03,117 - VARIABLE OF NAME x IS NOT DEFINED!
INFO  02:04:03,117 - BEGINNING OF AN ASSIGNEMENT! ON LINE 21
ERROR 02:04:03,117 - VARIABLE OF NAME y IS NOT DEFINED!
INFO  02:04:03,117 - WE ARE USING A VARIABLE OF TYPE void ON LINE 4
INFO  02:04:03,117 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  02:04:03,117 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  02:04:03,117 - SUCCESSFUL ASSIGNEMENT! TYPES: void AND void ! ON LINE 21
ERROR 02:04:03,117 - VARIABLE OF NAME x IS NOT DEFINED!
INFO  02:04:03,117 - WE ARE USING A VARIABLE OF TYPE void ON LINE 7
INFO  02:04:03,117 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  02:04:03,117 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
ERROR 02:04:03,117 - EXPRESSION USED IN PRINT IS NOT A VARIABLE OF TYPE BOOL, CHAR OR INT OR AN ARRAY! ON LINE 7
ERROR 02:04:03,117 - VARIABLE OF NAME y IS NOT DEFINED!
INFO  02:04:03,117 - WE ARE USING A VARIABLE OF TYPE void ON LINE 7
INFO  02:04:03,117 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  02:04:03,117 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
ERROR 02:04:03,117 - EXPRESSION USED IN PRINT IS NOT A VARIABLE OF TYPE BOOL, CHAR OR INT OR AN ARRAY! ON LINE 7
INFO  02:04:03,118 - return; AND THE FUNCTION IS VOID!
INFO  02:04:03,118 - METHOD BODY ENDING!
INFO  02:04:03,118 - END OF DEFINING FUNCTION main
INFO  02:04:03,118 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  02:04:03,118 -  Deklarisanih promenljivih ima = 0
INFO  02:04:03,118 - ===================================
ERROR 02:04:03,119 - Parsiranje NIJE uspesno zavrseno!
