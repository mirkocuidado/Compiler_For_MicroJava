INFO  22:28:40,961 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  22:28:41,092 - #2 program
INFO  22:28:41,092 - #48 MJProgram
INFO  22:28:41,093 - #48 int
INFO  22:28:41,097 - #48 a
INFO  22:28:41,099 - #36 ,
INFO  22:28:41,100 - #48 b
INFO  22:28:41,100 - #36 ,
INFO  22:28:41,101 - #48 c
INFO  22:28:41,101 - #36 ,
INFO  22:28:41,101 - #48 d
INFO  22:28:41,101 - #38 ;
INFO  22:28:41,102 - #9 const
INFO  22:28:41,103 - #48 int
INFO  22:28:41,104 - #48 y
INFO  22:28:41,104 - #24 =
INFO  22:28:41,104 - #47 3
INFO  22:28:41,105 - #38 ;
INFO  22:28:41,106 - #40 {
INFO  22:28:41,107 - #48 int
INFO  22:28:41,108 - #48 k
INFO  22:28:41,109 - #42 (
INFO  22:28:41,110 - #48 int
INFO  22:28:41,110 - #48 a
INFO  22:28:41,110 - #36 ,
INFO  22:28:41,111 - #48 int
INFO  22:28:41,111 - #48 b
INFO  22:28:41,112 - #43 )
INFO  22:28:41,112 - #40 {
INFO  22:28:41,115 - #46 return
INFO  22:28:41,119 - #48 b
INFO  22:28:41,123 - #38 ;
INFO  22:28:41,127 - #41 }
INFO  22:28:41,128 - #48 char
INFO  22:28:41,130 - #48 s
INFO  22:28:41,130 - #42 (
INFO  22:28:41,130 - #43 )
INFO  22:28:41,131 - #40 {
INFO  22:28:41,131 - #46 return
INFO  22:28:41,131 - #49 c
INFO  22:28:41,131 - #38 ;
INFO  22:28:41,132 - #41 }
INFO  22:28:41,132 - #5 void
INFO  22:28:41,132 - #48 main
INFO  22:28:41,132 - #42 (
INFO  22:28:41,132 - #43 )
INFO  22:28:41,132 - #48 int
INFO  22:28:41,132 - #48 x
INFO  22:28:41,132 - #38 ;
INFO  22:28:41,132 - #48 char
INFO  22:28:41,133 - #48 z
INFO  22:28:41,133 - #38 ;
INFO  22:28:41,133 - #48 bool
INFO  22:28:41,133 - #48 p
INFO  22:28:41,133 - #38 ;
INFO  22:28:41,133 - #48 int
INFO  22:28:41,133 - #48 xx
INFO  22:28:41,133 - #44 [
INFO  22:28:41,133 - #45 ]
INFO  22:28:41,134 - #38 ;
INFO  22:28:41,134 - #48 int
INFO  22:28:41,134 - #48 dd
INFO  22:28:41,134 - #38 ;
INFO  22:28:41,134 - #40 {
INFO  22:28:41,134 - #48 x
INFO  22:28:41,134 - #24 =
INFO  22:28:41,134 - #48 xx
INFO  22:28:41,136 - #44 [
INFO  22:28:41,137 - #47 0
INFO  22:28:41,139 - #45 ]
INFO  22:28:41,139 - #19 +
INFO  22:28:41,139 - #48 xx
INFO  22:28:41,141 - #44 [
INFO  22:28:41,141 - #47 2
INFO  22:28:41,141 - #45 ]
INFO  22:28:41,141 - #38 ;
INFO  22:28:41,142 - #18 print
INFO  22:28:41,142 - #42 (
INFO  22:28:41,142 - #47 2
INFO  22:28:41,142 - #43 )
INFO  22:28:41,143 - #38 ;
INFO  22:28:41,143 - #48 x
INFO  22:28:41,144 - #24 =
INFO  22:28:41,144 - #48 k
INFO  22:28:41,144 - #42 (
INFO  22:28:41,144 - #47 33
INFO  22:28:41,144 - #36 ,
INFO  22:28:41,144 - #48 k
INFO  22:28:41,144 - #42 (
INFO  22:28:41,145 - #47 12
INFO  22:28:41,145 - #36 ,
INFO  22:28:41,145 - #47 13
INFO  22:28:41,145 - #43 )
INFO  22:28:41,145 - #43 )
INFO  22:28:41,145 - #38 ;
INFO  22:28:41,145 - #18 print
INFO  22:28:41,146 - #42 (
INFO  22:28:41,146 - #48 x
INFO  22:28:41,146 - #43 )
INFO  22:28:41,146 - #38 ;
INFO  22:28:41,146 - #48 x
INFO  22:28:41,146 - #24 =
INFO  22:28:41,146 - #48 y
INFO  22:28:41,146 - #38 ;
INFO  22:28:41,146 - #18 print
INFO  22:28:41,146 - #42 (
INFO  22:28:41,146 - #48 x
INFO  22:28:41,147 - #43 )
INFO  22:28:41,147 - #38 ;
INFO  22:28:41,147 - #18 print
INFO  22:28:41,147 - #42 (
INFO  22:28:41,147 - #48 y
INFO  22:28:41,147 - #43 )
INFO  22:28:41,147 - #38 ;
INFO  22:28:41,147 - #48 d
INFO  22:28:41,147 - #24 =
INFO  22:28:41,147 - #47 4
INFO  22:28:41,147 - #38 ;
INFO  22:28:41,148 - #18 print
INFO  22:28:41,148 - #42 (
INFO  22:28:41,148 - #48 d
INFO  22:28:41,148 - #43 )
INFO  22:28:41,148 - #38 ;
INFO  22:28:41,148 - #48 d
INFO  22:28:41,148 - #33 ++
INFO  22:28:41,148 - #38 ;
INFO  22:28:41,148 - #18 print
INFO  22:28:41,148 - #42 (
INFO  22:28:41,149 - #48 d
INFO  22:28:41,149 - #43 )
INFO  22:28:41,149 - #38 ;
INFO  22:28:41,149 - #48 dd
INFO  22:28:41,149 - #24 =
INFO  22:28:41,149 - #47 10
INFO  22:28:41,149 - #38 ;
INFO  22:28:41,149 - #18 print
INFO  22:28:41,149 - #42 (
INFO  22:28:41,149 - #48 dd
INFO  22:28:41,149 - #43 )
INFO  22:28:41,149 - #38 ;
INFO  22:28:41,150 - #48 dd
INFO  22:28:41,150 - #33 ++
INFO  22:28:41,150 - #38 ;
INFO  22:28:41,150 - #18 print
INFO  22:28:41,150 - #42 (
INFO  22:28:41,150 - #48 dd
INFO  22:28:41,150 - #43 )
INFO  22:28:41,150 - #38 ;
INFO  22:28:41,150 - #18 print
INFO  22:28:41,150 - #42 (
INFO  22:28:41,151 - #48 b
INFO  22:28:41,151 - #43 )
INFO  22:28:41,151 - #38 ;
INFO  22:28:41,151 - #48 z
INFO  22:28:41,151 - #24 =
INFO  22:28:41,151 - #49 m
INFO  22:28:41,151 - #38 ;
INFO  22:28:41,151 - #18 print
INFO  22:28:41,151 - #42 (
INFO  22:28:41,151 - #48 z
INFO  22:28:41,151 - #43 )
INFO  22:28:41,151 - #38 ;
INFO  22:28:41,152 - #48 z
INFO  22:28:41,152 - #24 =
INFO  22:28:41,152 - #48 s
INFO  22:28:41,153 - #42 (
INFO  22:28:41,153 - #43 )
INFO  22:28:41,154 - #38 ;
INFO  22:28:41,154 - #18 print
INFO  22:28:41,154 - #42 (
INFO  22:28:41,154 - #48 z
INFO  22:28:41,154 - #43 )
INFO  22:28:41,154 - #38 ;
INFO  22:28:41,155 - #46 return
INFO  22:28:41,155 - #38 ;
INFO  22:28:41,155 - #41 }
INFO  22:28:41,156 - #41 }
INFO  22:28:41,174 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      NoGroupDecl(
      ) [NoGroupDecl]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 b
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               c
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             d
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
           k
          ) [ReturnValueClassNoVoid]
          FormParams(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclClassNoArray(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormalParamDeclClassNoArray]
              ) [SingleFormalParamDecl]
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               b
              ) [FormalParamDeclClassNoArray]
            ) [FormalParamDecls]
          ) [FormParams]
          NoVarDeclList(
          ) [NoVarDeclList]
          LBraceClass(
          ) [LBraceClass]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              ReturnNonTerminalClass(
              ) [ReturnNonTerminalClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        HelperClass(
                        ) [HelperClass]
                        Designator(
                         b
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [ReturnExpr]
          ) [Statements]
          RBraceClass(
          ) [RBraceClass]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           char
          ) [Type]
         s
        ) [ReturnValueClassNoVoid]
        NoFormParam(
        ) [NoFormParam]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    CharConst(
                     c
                    ) [CharConst]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                NoVarDeclList(
                ) [NoVarDeclList]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     x
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 char
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   z
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               bool
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 p
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassArray(
               xx
              ) [VarClassArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             dd
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                NoStmt(
                                                ) [NoStmt]
                                                Assignment(
                                                  DesignatorStatementOptionsClassAssignExpression(
                                                    Designator(
                                                     x
                                                      NoOptionalDesignatorClass(
                                                      ) [NoOptionalDesignatorClass]
                                                    ) [Designator]
                                                    HelperClass(
                                                    ) [HelperClass]
                                                    AssignOpClass(
                                                      AssignOperationClass(
                                                      ) [AssignOperationClass]
                                                    ) [AssignOpClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            DesignatorClass(
                                                              HelperClass(
                                                              ) [HelperClass]
                                                              Designator(
                                                               xx
                                                                OptionalDesignatorArray(
                                                                  NoOptionalDesignatorClass(
                                                                  ) [NoOptionalDesignatorClass]
                                                                  LSquareClass(
                                                                  ) [LSquareClass]
                                                                  ClassOneClass(
                                                                    NormalExpressionClass(
                                                                      ExprFirstOptionClassWithMinus(
                                                                        TermClass(
                                                                          NumberConst(
                                                                           0
                                                                          ) [NumberConst]
                                                                          NoTermOptionalListClass(
                                                                          ) [NoTermOptionalListClass]
                                                                        ) [TermClass]
                                                                        NoExprOptionalListClass(
                                                                        ) [NoExprOptionalListClass]
                                                                      ) [ExprFirstOptionClassWithMinus]
                                                                    ) [NormalExpressionClass]
                                                                  ) [ClassOneClass]
                                                                ) [OptionalDesignatorArray]
                                                              ) [Designator]
                                                            ) [DesignatorClass]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          ExprOptionalListClass(
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                            PlusOperation(
                                                            ) [PlusOperation]
                                                            TermClass(
                                                              DesignatorClass(
                                                                HelperClass(
                                                                ) [HelperClass]
                                                                Designator(
                                                                 xx
                                                                  OptionalDesignatorArray(
                                                                    NoOptionalDesignatorClass(
                                                                    ) [NoOptionalDesignatorClass]
                                                                    LSquareClass(
                                                                    ) [LSquareClass]
                                                                    ClassOneClass(
                                                                      NormalExpressionClass(
                                                                        ExprFirstOptionClassWithMinus(
                                                                          TermClass(
                                                                            NumberConst(
                                                                             2
                                                                            ) [NumberConst]
                                                                            NoTermOptionalListClass(
                                                                            ) [NoTermOptionalListClass]
                                                                          ) [TermClass]
                                                                          NoExprOptionalListClass(
                                                                          ) [NoExprOptionalListClass]
                                                                        ) [ExprFirstOptionClassWithMinus]
                                                                      ) [NormalExpressionClass]
                                                                    ) [ClassOneClass]
                                                                  ) [OptionalDesignatorArray]
                                                                ) [Designator]
                                                              ) [DesignatorClass]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                          ) [ExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                                ) [Assignment]
                                              ) [Statements]
                                              PrintStmt(
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         2
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                                NoCommaNumberClass(
                                                ) [NoCommaNumberClass]
                                              ) [PrintStmt]
                                            ) [Statements]
                                            Assignment(
                                              DesignatorStatementOptionsClassAssignExpression(
                                                Designator(
                                                 x
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                                HelperClass(
                                                ) [HelperClass]
                                                AssignOpClass(
                                                  AssignOperationClass(
                                                  ) [AssignOperationClass]
                                                ) [AssignOpClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        FactorOptionalParams(
                                                          HelperClass(
                                                          ) [HelperClass]
                                                          Designator(
                                                           k
                                                            NoOptionalDesignatorClass(
                                                            ) [NoOptionalDesignatorClass]
                                                          ) [Designator]
                                                          Actuals(
                                                            ActualParams(
                                                              ActualParam(
                                                                ClassOneClass(
                                                                  NormalExpressionClass(
                                                                    ExprFirstOptionClassWithMinus(
                                                                      TermClass(
                                                                        NumberConst(
                                                                         33
                                                                        ) [NumberConst]
                                                                        NoTermOptionalListClass(
                                                                        ) [NoTermOptionalListClass]
                                                                      ) [TermClass]
                                                                      NoExprOptionalListClass(
                                                                      ) [NoExprOptionalListClass]
                                                                    ) [ExprFirstOptionClassWithMinus]
                                                                  ) [NormalExpressionClass]
                                                                ) [ClassOneClass]
                                                              ) [ActualParam]
                                                              ClassOneClass(
                                                                NormalExpressionClass(
                                                                  ExprFirstOptionClassWithMinus(
                                                                    TermClass(
                                                                      FactorOptionalParams(
                                                                        HelperClass(
                                                                        ) [HelperClass]
                                                                        Designator(
                                                                         k
                                                                          NoOptionalDesignatorClass(
                                                                          ) [NoOptionalDesignatorClass]
                                                                        ) [Designator]
                                                                        Actuals(
                                                                          ActualParams(
                                                                            ActualParam(
                                                                              ClassOneClass(
                                                                                NormalExpressionClass(
                                                                                  ExprFirstOptionClassWithMinus(
                                                                                    TermClass(
                                                                                      NumberConst(
                                                                                       12
                                                                                      ) [NumberConst]
                                                                                      NoTermOptionalListClass(
                                                                                      ) [NoTermOptionalListClass]
                                                                                    ) [TermClass]
                                                                                    NoExprOptionalListClass(
                                                                                    ) [NoExprOptionalListClass]
                                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                                ) [NormalExpressionClass]
                                                                              ) [ClassOneClass]
                                                                            ) [ActualParam]
                                                                            ClassOneClass(
                                                                              NormalExpressionClass(
                                                                                ExprFirstOptionClassWithMinus(
                                                                                  TermClass(
                                                                                    NumberConst(
                                                                                     13
                                                                                    ) [NumberConst]
                                                                                    NoTermOptionalListClass(
                                                                                    ) [NoTermOptionalListClass]
                                                                                  ) [TermClass]
                                                                                  NoExprOptionalListClass(
                                                                                  ) [NoExprOptionalListClass]
                                                                                ) [ExprFirstOptionClassWithMinus]
                                                                              ) [NormalExpressionClass]
                                                                            ) [ClassOneClass]
                                                                          ) [ActualParams]
                                                                        ) [Actuals]
                                                                      ) [FactorOptionalParams]
                                                                      NoTermOptionalListClass(
                                                                      ) [NoTermOptionalListClass]
                                                                    ) [TermClass]
                                                                    NoExprOptionalListClass(
                                                                    ) [NoExprOptionalListClass]
                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                ) [NormalExpressionClass]
                                                              ) [ClassOneClass]
                                                            ) [ActualParams]
                                                          ) [Actuals]
                                                        ) [FactorOptionalParams]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [DesignatorStatementOptionsClassAssignExpression]
                                            ) [Assignment]
                                          ) [Statements]
                                          PrintStmt(
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      Designator(
                                                       x
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                            NoCommaNumberClass(
                                            ) [NoCommaNumberClass]
                                          ) [PrintStmt]
                                        ) [Statements]
                                        Assignment(
                                          DesignatorStatementOptionsClassAssignExpression(
                                            Designator(
                                             x
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                            HelperClass(
                                            ) [HelperClass]
                                            AssignOpClass(
                                              AssignOperationClass(
                                              ) [AssignOperationClass]
                                            ) [AssignOpClass]
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    DesignatorClass(
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      Designator(
                                                       y
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                    ) [DesignatorClass]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                          ) [DesignatorStatementOptionsClassAssignExpression]
                                        ) [Assignment]
                                      ) [Statements]
                                      PrintStmt(
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                DesignatorClass(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  Designator(
                                                   x
                                                    NoOptionalDesignatorClass(
                                                    ) [NoOptionalDesignatorClass]
                                                  ) [Designator]
                                                ) [DesignatorClass]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                        NoCommaNumberClass(
                                        ) [NoCommaNumberClass]
                                      ) [PrintStmt]
                                    ) [Statements]
                                    PrintStmt(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              DesignatorClass(
                                                HelperClass(
                                                ) [HelperClass]
                                                Designator(
                                                 y
                                                  NoOptionalDesignatorClass(
                                                  ) [NoOptionalDesignatorClass]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                      NoCommaNumberClass(
                                      ) [NoCommaNumberClass]
                                    ) [PrintStmt]
                                  ) [Statements]
                                  Assignment(
                                    DesignatorStatementOptionsClassAssignExpression(
                                      Designator(
                                       d
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                      HelperClass(
                                      ) [HelperClass]
                                      AssignOpClass(
                                        AssignOperationClass(
                                        ) [AssignOperationClass]
                                      ) [AssignOpClass]
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              NumberConst(
                                               4
                                              ) [NumberConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                    ) [DesignatorStatementOptionsClassAssignExpression]
                                  ) [Assignment]
                                ) [Statements]
                                PrintStmt(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            HelperClass(
                                            ) [HelperClass]
                                            Designator(
                                             d
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                  NoCommaNumberClass(
                                  ) [NoCommaNumberClass]
                                ) [PrintStmt]
                              ) [Statements]
                              Assignment(
                                DesignatorStatementPlusPlus(
                                  Designator(
                                   d
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorStatementPlusPlus]
                              ) [Assignment]
                            ) [Statements]
                            PrintStmt(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        HelperClass(
                                        ) [HelperClass]
                                        Designator(
                                         d
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                              NoCommaNumberClass(
                              ) [NoCommaNumberClass]
                            ) [PrintStmt]
                          ) [Statements]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                               dd
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              HelperClass(
                              ) [HelperClass]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       10
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    HelperClass(
                                    ) [HelperClass]
                                    Designator(
                                     dd
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          NoCommaNumberClass(
                          ) [NoCommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                      Assignment(
                        DesignatorStatementPlusPlus(
                          Designator(
                           dd
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                        ) [DesignatorStatementPlusPlus]
                      ) [Assignment]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                HelperClass(
                                ) [HelperClass]
                                Designator(
                                 dd
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              HelperClass(
                              ) [HelperClass]
                              Designator(
                               b
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                     z
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    HelperClass(
                    ) [HelperClass]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            CharConst(
                             m
                            ) [CharConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              PrintStmt(
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          HelperClass(
                          ) [HelperClass]
                          Designator(
                           z
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
                NoCommaNumberClass(
                ) [NoCommaNumberClass]
              ) [PrintStmt]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                 z
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                HelperClass(
                ) [HelperClass]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        FactorOptionalParams(
                          HelperClass(
                          ) [HelperClass]
                          Designator(
                           s
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          NoActuals(
                          ) [NoActuals]
                        ) [FactorOptionalParams]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      HelperClass(
                      ) [HelperClass]
                      Designator(
                       z
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        ReturnNoExpr(
        ) [ReturnNoExpr]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:28:41,177 - ===================================
INFO  22:28:41,183 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  22:28:41,184 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  22:28:41,184 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  22:28:41,184 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  22:28:41,184 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  22:28:41,184 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  22:28:41,184 - CONST VALUE 3 IS BEING USED! ON LINE 4
INFO  22:28:41,184 - CONST VARIABLE y IS BEING DEFINED! ON LINE 4
INFO  22:28:41,184 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 7
INFO  22:28:41,185 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 7
INFO  22:28:41,185 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 7
INFO  22:28:41,185 - METHOD BODY STARTING!
INFO  22:28:41,185 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  22:28:41,185 - WE ARE USING A VARIABLE OF TYPE int ON LINE 23
INFO  22:28:41,185 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:28:41,185 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:28:41,185 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 7
INFO  22:28:41,186 - METHOD BODY ENDING!
INFO  22:28:41,186 - END OF DEFINING FUNCTION k
INFO  22:28:41,186 - FUNCTION s WITH RETURN VALUE OF TYPE char ON LINE 9
INFO  22:28:41,186 - METHOD BODY STARTING!
INFO  22:28:41,186 - CONST CHAR c ON LINE 9
INFO  22:28:41,186 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  22:28:41,186 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  22:28:41,186 - SUCCESSFUL RETURN! TYPES: char AND char ! ON LINE 9
INFO  22:28:41,186 - METHOD BODY ENDING!
INFO  22:28:41,187 - END OF DEFINING FUNCTION s
INFO  22:28:41,187 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 11
INFO  22:28:41,187 - VARIABLE x IS BEING DEFINED! ON LINE 12
INFO  22:28:41,187 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 12
INFO  22:28:41,187 - VARIABLE z IS BEING DEFINED! ON LINE 13
INFO  22:28:41,187 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 13
INFO  22:28:41,187 - VARIABLE p IS BEING DEFINED! ON LINE 14
INFO  22:28:41,188 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 14
INFO  22:28:41,188 - ARRAY VARIABLE xx IS BEING DEFINED! ON LINE 15
INFO  22:28:41,188 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 15
INFO  22:28:41,188 - VARIABLE dd IS BEING DEFINED! ON LINE 16
INFO  22:28:41,188 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 16
INFO  22:28:41,188 - METHOD BODY STARTING!
INFO  22:28:41,188 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:28:41,188 - BEGINNING OF AN ASSIGNEMENT! ON LINE 19
INFO  22:28:41,188 - CONST NUMBER 0 ON LINE 19
INFO  22:28:41,189 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:28:41,189 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:28:41,189 - CURRENT VARIABLE IN USE IS xx AND IT IS OF TYPE array
INFO  22:28:41,189 - WE ARE USING AN ARRAY OF TYPE int ON LINE 4
INFO  22:28:41,189 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:28:41,189 - CONST NUMBER 2 ON LINE 19
INFO  22:28:41,189 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:28:41,189 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:28:41,189 - CURRENT VARIABLE IN USE IS xx AND IT IS OF TYPE array
INFO  22:28:41,189 - WE ARE USING AN ARRAY OF TYPE int ON LINE 12
INFO  22:28:41,189 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  22:28:41,190 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:28:41,190 - USING INTEGERS IN TERM! ON LINE 4
INFO  22:28:41,190 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 19
INFO  22:28:41,190 - CONST NUMBER 2 ON LINE 20
INFO  22:28:41,190 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:28:41,190 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:28:41,190 - PRINT FUNCTION CALL IN USE! ON LINE 20
INFO  22:28:41,190 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:28:41,190 - BEGINNING OF AN ASSIGNEMENT! ON LINE 22
INFO  22:28:41,190 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  22:28:41,190 - CONST NUMBER 33 ON LINE 22
INFO  22:28:41,190 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:28:41,190 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:28:41,190 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  22:28:41,191 - CONST NUMBER 12 ON LINE 22
INFO  22:28:41,191 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:28:41,191 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:28:41,191 - CONST NUMBER 13 ON LINE 22
INFO  22:28:41,191 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:28:41,191 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:28:41,191 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:28:41,191 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:28:41,191 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:28:41,191 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  22:28:41,192 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:28:41,192 - TYPE -> int <- AND -> int <- ON LINE 22
INFO  22:28:41,192 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:28:41,192 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:28:41,192 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 22
INFO  22:28:41,192 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:28:41,192 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:28:41,192 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,193 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,193 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,193 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:28:41,193 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  22:28:41,193 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  22:28:41,193 - WE ARE USING A VARIABLE OF TYPE int ON LINE 4
INFO  22:28:41,193 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:28:41,193 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 4
INFO  22:28:41,193 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  22:28:41,193 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  22:28:41,193 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:28:41,193 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,194 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,194 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,194 - CURRENT VARIABLE IN USE IS y AND IT IS OF TYPE int
INFO  22:28:41,194 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:28:41,194 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,194 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,194 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,194 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:28:41,194 - BEGINNING OF AN ASSIGNEMENT! ON LINE 29
INFO  22:28:41,194 - CONST NUMBER 4 ON LINE 29
INFO  22:28:41,194 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:28:41,194 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  22:28:41,195 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 29
INFO  22:28:41,195 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:28:41,195 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:28:41,195 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,195 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,195 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,196 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:28:41,196 - USING ++ ON d ON LINE 31
INFO  22:28:41,196 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE int
INFO  22:28:41,196 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:28:41,196 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,196 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,196 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,196 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:28:41,197 - BEGINNING OF AN ASSIGNEMENT! ON LINE 34
INFO  22:28:41,197 - CONST NUMBER 10 ON LINE 34
INFO  22:28:41,197 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  22:28:41,197 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  22:28:41,197 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 34
INFO  22:28:41,197 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:28:41,197 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:28:41,197 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,197 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,197 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,197 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:28:41,197 - USING ++ ON dd ON LINE 36
INFO  22:28:41,198 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  22:28:41,198 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:28:41,198 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,198 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,198 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,198 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  22:28:41,198 - WE ARE USING A VARIABLE OF TYPE int ON LINE 7
INFO  22:28:41,198 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,198 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,198 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,198 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:28:41,198 - BEGINNING OF AN ASSIGNEMENT! ON LINE 41
INFO  22:28:41,198 - CONST CHAR m ON LINE 41
INFO  22:28:41,198 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  22:28:41,198 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  22:28:41,199 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 41
INFO  22:28:41,199 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:28:41,199 - WE ARE USING A VARIABLE OF TYPE char ON LINE 7
INFO  22:28:41,199 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,199 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,199 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,199 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:28:41,199 - BEGINNING OF AN ASSIGNEMENT! ON LINE 44
INFO  22:28:41,199 - CURRENT VARIABLE IN USE IS s AND IT IS OF TYPE char
INFO  22:28:41,199 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 3
INFO  22:28:41,199 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 3
INFO  22:28:41,199 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 44
INFO  22:28:41,199 - CURRENT VARIABLE IN USE IS z AND IT IS OF TYPE char
INFO  22:28:41,200 - WE ARE USING A VARIABLE OF TYPE char ON LINE 7
INFO  22:28:41,200 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,200 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 7
INFO  22:28:41,200 - PRINT FUNCTION CALL IN USE! ON LINE 7
INFO  22:28:41,200 - return; AND THE FUNCTION IS VOID!
INFO  22:28:41,200 - METHOD BODY ENDING!
INFO  22:28:41,200 - END OF DEFINING FUNCTION main
INFO  22:28:41,200 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  22:28:41,200 -  Deklarisanih promenljivih ima = 9
INFO  22:28:41,200 - ===================================
INFO  22:28:41,212 - Parsiranje uspesno zavrseno!
