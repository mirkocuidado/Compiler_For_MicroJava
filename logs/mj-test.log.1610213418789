INFO  18:29:56,583 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  18:29:56,662 - #2 program
INFO  18:29:56,662 - #48 MJProgram
INFO  18:29:56,662 - #48 int
INFO  18:29:56,664 - #48 a
INFO  18:29:56,665 - #36 ,
INFO  18:29:56,665 - #48 b
INFO  18:29:56,665 - #44 [
INFO  18:29:56,665 - #45 ]
INFO  18:29:56,665 - #36 ,
INFO  18:29:56,666 - #48 c
INFO  18:29:56,666 - #36 ,
INFO  18:29:56,666 - #48 d
INFO  18:29:56,666 - #38 ;
INFO  18:29:56,666 - #48 char
INFO  18:29:56,666 - #48 e
INFO  18:29:56,666 - #36 ,
INFO  18:29:56,667 - #48 f
INFO  18:29:56,667 - #44 [
INFO  18:29:56,667 - #45 ]
INFO  18:29:56,667 - #36 ,
INFO  18:29:56,667 - #48 g
INFO  18:29:56,667 - #38 ;
INFO  18:29:56,669 - #48 bool
INFO  18:29:56,670 - #48 h
INFO  18:29:56,670 - #36 ,
INFO  18:29:56,670 - #48 i
INFO  18:29:56,670 - #44 [
INFO  18:29:56,670 - #45 ]
INFO  18:29:56,670 - #38 ;
INFO  18:29:56,670 - #9 const
INFO  18:29:56,670 - #48 int
INFO  18:29:56,670 - #48 aa
INFO  18:29:56,671 - #24 =
INFO  18:29:56,671 - #47 2
INFO  18:29:56,671 - #36 ,
INFO  18:29:56,671 - #48 bb
INFO  18:29:56,671 - #24 =
INFO  18:29:56,671 - #47 6
INFO  18:29:56,672 - #38 ;
INFO  18:29:56,672 - #9 const
INFO  18:29:56,672 - #48 char
INFO  18:29:56,672 - #48 cc
INFO  18:29:56,672 - #24 =
INFO  18:29:56,672 - #49 c
INFO  18:29:56,672 - #36 ,
INFO  18:29:56,673 - #48 dd
INFO  18:29:56,673 - #24 =
INFO  18:29:56,673 - #49 d
INFO  18:29:56,673 - #38 ;
INFO  18:29:56,673 - #9 const
INFO  18:29:56,673 - #48 bool
INFO  18:29:56,673 - #48 ee
INFO  18:29:56,673 - #24 =
INFO  18:29:56,673 - #50 true
INFO  18:29:56,673 - #36 ,
INFO  18:29:56,673 - #48 ff
INFO  18:29:56,673 - #24 =
INFO  18:29:56,674 - #50 false
INFO  18:29:56,674 - #38 ;
INFO  18:29:56,674 - #40 {
INFO  18:29:56,674 - #5 void
INFO  18:29:56,675 - #48 main
INFO  18:29:56,675 - #42 (
INFO  18:29:56,675 - #48 int
INFO  18:29:56,675 - #48 a
INFO  18:29:56,675 - #36 ,
INFO  18:29:56,675 - #48 int
INFO  18:29:56,675 - #48 b
INFO  18:29:56,675 - #44 [
INFO  18:29:56,675 - #45 ]
INFO  18:29:56,675 - #36 ,
INFO  18:29:56,676 - #48 char
INFO  18:29:56,676 - #48 c
INFO  18:29:56,676 - #36 ,
INFO  18:29:56,676 - #48 char
INFO  18:29:56,676 - #48 d
INFO  18:29:56,676 - #44 [
INFO  18:29:56,676 - #45 ]
INFO  18:29:56,676 - #36 ,
INFO  18:29:56,676 - #48 bool
INFO  18:29:56,676 - #48 e
INFO  18:29:56,676 - #36 ,
INFO  18:29:56,676 - #48 bool
INFO  18:29:56,677 - #48 f
INFO  18:29:56,677 - #44 [
INFO  18:29:56,677 - #45 ]
INFO  18:29:56,677 - #43 )
INFO  18:29:56,677 - #40 {
INFO  18:29:56,678 - #48 d
INFO  18:29:56,679 - #24 =
INFO  18:29:56,681 - #48 d
INFO  18:29:56,682 - #38 ;
INFO  18:29:56,685 - #18 print
INFO  18:29:56,685 - #42 (
INFO  18:29:56,685 - #48 a
INFO  18:29:56,685 - #43 )
INFO  18:29:56,686 - #38 ;
INFO  18:29:56,686 - #18 print
INFO  18:29:56,686 - #42 (
INFO  18:29:56,686 - #48 b
INFO  18:29:56,686 - #44 [
INFO  18:29:56,686 - #47 0
INFO  18:29:56,687 - #45 ]
INFO  18:29:56,688 - #43 )
INFO  18:29:56,688 - #38 ;
INFO  18:29:56,688 - #18 print
INFO  18:29:56,688 - #42 (
INFO  18:29:56,688 - #48 c
INFO  18:29:56,688 - #43 )
INFO  18:29:56,688 - #38 ;
INFO  18:29:56,688 - #18 print
INFO  18:29:56,688 - #42 (
INFO  18:29:56,688 - #48 d
INFO  18:29:56,688 - #44 [
INFO  18:29:56,688 - #47 0
INFO  18:29:56,688 - #45 ]
INFO  18:29:56,689 - #43 )
INFO  18:29:56,689 - #38 ;
INFO  18:29:56,689 - #18 print
INFO  18:29:56,689 - #42 (
INFO  18:29:56,689 - #48 e
INFO  18:29:56,689 - #43 )
INFO  18:29:56,689 - #38 ;
INFO  18:29:56,689 - #18 print
INFO  18:29:56,689 - #42 (
INFO  18:29:56,689 - #48 f
INFO  18:29:56,689 - #44 [
INFO  18:29:56,689 - #47 0
INFO  18:29:56,689 - #45 ]
INFO  18:29:56,689 - #43 )
INFO  18:29:56,689 - #38 ;
INFO  18:29:56,689 - #41 }
INFO  18:29:56,689 - #41 }
INFO  18:29:56,698 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            GroupDeclarations(
              NoGroupDecl(
              ) [NoGroupDecl]
              GroupDeclarationVars(
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListClass(
                    VarListClass(
                      VarListClass(
                        VarListSingle(
                          VarClassNoArray(
                           a
                          ) [VarClassNoArray]
                        ) [VarListSingle]
                        VarClassArray(
                         b
                        ) [VarClassArray]
                      ) [VarListClass]
                      VarClassNoArray(
                       c
                      ) [VarClassNoArray]
                    ) [VarListClass]
                    VarClassNoArray(
                     d
                    ) [VarClassNoArray]
                  ) [VarListClass]
                ) [VarDeclClass]
              ) [GroupDeclarationVars]
            ) [GroupDeclarations]
            GroupDeclarationVars(
              VarDeclClass(
                Type(
                 char
                ) [Type]
                VarListClass(
                  VarListClass(
                    VarListSingle(
                      VarClassNoArray(
                       e
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                    VarClassArray(
                     f
                    ) [VarClassArray]
                  ) [VarListClass]
                  VarClassNoArray(
                   g
                  ) [VarClassNoArray]
                ) [VarListClass]
              ) [VarDeclClass]
            ) [GroupDeclarationVars]
          ) [GroupDeclarations]
          GroupDeclarationVars(
            VarDeclClass(
              Type(
               bool
              ) [Type]
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   h
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassArray(
                 i
                ) [VarClassArray]
              ) [VarListClass]
            ) [VarDeclClass]
          ) [GroupDeclarationVars]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListClass(
              ConstListSingle(
                ConstListNoArray(
                 aa
                  ValuesNumber(
                   2
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListSingle]
              ConstListNoArray(
               bb
                ValuesNumber(
                 6
                ) [ValuesNumber]
              ) [ConstListNoArray]
            ) [ConstListClass]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           char
          ) [Type]
          ConstListClass(
            ConstListSingle(
              ConstListNoArray(
               cc
                ValuesChar(
                 c
                ) [ValuesChar]
              ) [ConstListNoArray]
            ) [ConstListSingle]
            ConstListNoArray(
             dd
              ValuesChar(
               d
              ) [ValuesChar]
            ) [ConstListNoArray]
          ) [ConstListClass]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         bool
        ) [Type]
        ConstListClass(
          ConstListSingle(
            ConstListNoArray(
             ee
              ValuesBoolean(
               true
              ) [ValuesBoolean]
            ) [ConstListNoArray]
          ) [ConstListSingle]
          ConstListNoArray(
           ff
            ValuesBoolean(
             false
            ) [ValuesBoolean]
          ) [ConstListNoArray]
        ) [ConstListClass]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      FormParams(
        FormalParamDecls(
          FormalParamDecls(
            FormalParamDecls(
              FormalParamDecls(
                FormalParamDecls(
                  SingleFormalParamDecl(
                    FormalParamDeclClassNoArray(
                      Type(
                       int
                      ) [Type]
                     a
                    ) [FormalParamDeclClassNoArray]
                  ) [SingleFormalParamDecl]
                  FormalParamDeclClassArray(
                    Type(
                     int
                    ) [Type]
                   b
                  ) [FormalParamDeclClassArray]
                ) [FormalParamDecls]
                FormalParamDeclClassNoArray(
                  Type(
                   char
                  ) [Type]
                 c
                ) [FormalParamDeclClassNoArray]
              ) [FormalParamDecls]
              FormalParamDeclClassArray(
                Type(
                 char
                ) [Type]
               d
              ) [FormalParamDeclClassArray]
            ) [FormalParamDecls]
            FormalParamDeclClassNoArray(
              Type(
               bool
              ) [Type]
             e
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
          FormalParamDeclClassArray(
            Type(
             bool
            ) [Type]
           f
          ) [FormalParamDeclClassArray]
        ) [FormalParamDecls]
      ) [FormParams]
      NoVarDeclList(
      ) [NoVarDeclList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    Assignment(
                      DesignatorStatementClass(
                        Designator(
                         d
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        DesignatorStatementOptionsClassAssignExpression(
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                     d
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    NoFactorOptional(
                                    ) [NoFactorOptional]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [DesignatorStatementClass]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                               a
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              NoFactorOptional(
                              ) [NoFactorOptional]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                             b
                              OptionalDesignatorArray(
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                                LSquareClass(
                                ) [LSquareClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         0
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [OptionalDesignatorArray]
                            ) [Designator]
                            NoFactorOptional(
                            ) [NoFactorOptional]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
              PrintStmt(
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                           c
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          NoFactorOptional(
                          ) [NoFactorOptional]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
                NoCommaNumberClass(
                ) [NoCommaNumberClass]
              ) [PrintStmt]
            ) [Statements]
            PrintStmt(
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                         d
                          OptionalDesignatorArray(
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                            LSquareClass(
                            ) [LSquareClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [OptionalDesignatorArray]
                        ) [Designator]
                        NoFactorOptional(
                        ) [NoFactorOptional]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
              NoCommaNumberClass(
              ) [NoCommaNumberClass]
            ) [PrintStmt]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                       e
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      NoFactorOptional(
                      ) [NoFactorOptional]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                     f
                      OptionalDesignatorArray(
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                        LSquareClass(
                        ) [LSquareClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 0
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [OptionalDesignatorArray]
                    ) [Designator]
                    NoFactorOptional(
                    ) [NoFactorOptional]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:29:56,699 - ===================================
INFO  18:29:56,702 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  18:29:56,703 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  18:29:56,703 - ARRAY VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  18:29:56,703 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  18:29:56,703 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  18:29:56,703 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  18:29:56,703 - VARIABLE e IS BEING DEFINED! ON LINE 3
INFO  18:29:56,703 - ARRAY VARIABLE f IS BEING DEFINED! ON LINE 3
INFO  18:29:56,703 - VARIABLE g IS BEING DEFINED! ON LINE 3
INFO  18:29:56,703 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 3
INFO  18:29:56,703 - VARIABLE h IS BEING DEFINED! ON LINE 4
INFO  18:29:56,703 - ARRAY VARIABLE i IS BEING DEFINED! ON LINE 4
INFO  18:29:56,703 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 4
INFO  18:29:56,703 - CONST VARIABLE aa IS BEING DEFINED! ON LINE 6
INFO  18:29:56,703 - CONST VARIABLE bb IS BEING DEFINED! ON LINE 6
INFO  18:29:56,703 - CONST VARIABLE cc IS BEING DEFINED! ON LINE 7
INFO  18:29:56,704 - CONST VARIABLE dd IS BEING DEFINED! ON LINE 7
INFO  18:29:56,704 - CONST VARIABLE ee IS BEING DEFINED! ON LINE 8
INFO  18:29:56,704 - CONST VARIABLE ff IS BEING DEFINED! ON LINE 8
INFO  18:29:56,704 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 13
INFO  18:29:56,704 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE 3
INFO  18:29:56,704 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE 3
INFO  18:29:56,704 - SUCCESSFUL ASSIGNEMENT! ON LINE 18
INFO  18:29:56,704 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE 1
INFO  18:29:56,704 - PRINT FUNCTION CALL IN USE! ON LINE 20
INFO  18:29:56,704 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE 3
INFO  18:29:56,704 - PRINT FUNCTION CALL IN USE! ON LINE 21
INFO  18:29:56,704 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE 2
INFO  18:29:56,704 - PRINT FUNCTION CALL IN USE! ON LINE 22
INFO  18:29:56,705 - CURRENT VARIABLE IN USE IS d AND IT IS OF TYPE 3
INFO  18:29:56,705 - PRINT FUNCTION CALL IN USE! ON LINE 23
INFO  18:29:56,705 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE 5
INFO  18:29:56,705 - PRINT FUNCTION CALL IN USE! ON LINE 24
INFO  18:29:56,705 - CURRENT VARIABLE IN USE IS f AND IT IS OF TYPE 3
INFO  18:29:56,705 - PRINT FUNCTION CALL IN USE! ON LINE 25
INFO  18:29:56,705 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  18:29:56,706 -  Deklarisanih promenljivih ima = 9
INFO  18:29:56,706 - ===================================
INFO  18:29:56,706 - Parsiranje uspesno zavrseno!
