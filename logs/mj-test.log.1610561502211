INFO  19:07:44,137 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  19:07:44,236 - #2 program
INFO  19:07:44,236 - #43 MJProgram
INFO  19:07:44,236 - #43 int
INFO  19:07:44,238 - #43 a
INFO  19:07:44,238 - #31 ,
INFO  19:07:44,239 - #43 b
INFO  19:07:44,239 - #31 ,
INFO  19:07:44,239 - #43 c
INFO  19:07:44,239 - #31 ,
INFO  19:07:44,239 - #43 d
INFO  19:07:44,240 - #33 ;
INFO  19:07:44,240 - #9 const
INFO  19:07:44,240 - #43 int
INFO  19:07:44,240 - #43 y
INFO  19:07:44,241 - #19 =
INFO  19:07:44,241 - #42 3
INFO  19:07:44,241 - #33 ;
INFO  19:07:44,241 - #35 {
INFO  19:07:44,241 - #5 void
INFO  19:07:44,243 - #43 kk
INFO  19:07:44,243 - #37 (
INFO  19:07:44,244 - #38 )
INFO  19:07:44,246 - #35 {
INFO  19:07:44,247 - #36 }
INFO  19:07:44,248 - #43 int
INFO  19:07:44,250 - #43 k
INFO  19:07:44,250 - #37 (
INFO  19:07:44,250 - #43 int
INFO  19:07:44,251 - #43 a
INFO  19:07:44,251 - #31 ,
INFO  19:07:44,251 - #43 int
INFO  19:07:44,251 - #43 b
INFO  19:07:44,251 - #38 )
INFO  19:07:44,251 - #35 {
INFO  19:07:44,251 - #41 return
INFO  19:07:44,251 - #43 b
INFO  19:07:44,253 - #33 ;
INFO  19:07:44,256 - #36 }
INFO  19:07:44,257 - #43 int
INFO  19:07:44,257 - #43 func_check
INFO  19:07:44,257 - #37 (
INFO  19:07:44,257 - #43 int
INFO  19:07:44,257 - #43 a
INFO  19:07:44,257 - #39 [
INFO  19:07:44,257 - #40 ]
INFO  19:07:44,257 - #31 ,
INFO  19:07:44,257 - #43 char
INFO  19:07:44,258 - #43 b
INFO  19:07:44,258 - #39 [
INFO  19:07:44,258 - #40 ]
INFO  19:07:44,258 - #31 ,
INFO  19:07:44,258 - #43 bool
INFO  19:07:44,258 - #43 c
INFO  19:07:44,258 - #38 )
INFO  19:07:44,258 - #43 int
INFO  19:07:44,258 - #43 local
INFO  19:07:44,258 - #33 ;
INFO  19:07:44,258 - #35 {
INFO  19:07:44,258 - #43 local
INFO  19:07:44,258 - #19 =
INFO  19:07:44,258 - #43 a
INFO  19:07:44,260 - #39 [
INFO  19:07:44,261 - #42 0
INFO  19:07:44,262 - #40 ]
INFO  19:07:44,262 - #33 ;
INFO  19:07:44,263 - #18 print
INFO  19:07:44,263 - #37 (
INFO  19:07:44,263 - #43 local
INFO  19:07:44,263 - #38 )
INFO  19:07:44,264 - #33 ;
INFO  19:07:44,264 - #43 local
INFO  19:07:44,264 - #19 =
INFO  19:07:44,264 - #43 local
INFO  19:07:44,264 - #46 *
INFO  19:07:44,264 - #42 2
INFO  19:07:44,265 - #49 +
INFO  19:07:44,265 - #43 local
INFO  19:07:44,265 - #50 -
INFO  19:07:44,265 - #43 a
INFO  19:07:44,265 - #39 [
INFO  19:07:44,265 - #42 1
INFO  19:07:44,265 - #40 ]
INFO  19:07:44,265 - #33 ;
INFO  19:07:44,265 - #18 print
INFO  19:07:44,265 - #37 (
INFO  19:07:44,266 - #43 local
INFO  19:07:44,266 - #38 )
INFO  19:07:44,266 - #33 ;
INFO  19:07:44,266 - #41 return
INFO  19:07:44,266 - #43 local
INFO  19:07:44,266 - #33 ;
INFO  19:07:44,266 - #36 }
INFO  19:07:44,266 - #5 void
INFO  19:07:44,266 - #43 main
INFO  19:07:44,266 - #37 (
INFO  19:07:44,266 - #38 )
INFO  19:07:44,266 - #43 int
INFO  19:07:44,266 - #43 x
INFO  19:07:44,266 - #33 ;
INFO  19:07:44,266 - #43 char
INFO  19:07:44,266 - #43 z
INFO  19:07:44,266 - #33 ;
INFO  19:07:44,267 - #43 bool
INFO  19:07:44,267 - #43 p
INFO  19:07:44,267 - #33 ;
INFO  19:07:44,267 - #43 char
INFO  19:07:44,267 - #43 xx
INFO  19:07:44,267 - #39 [
INFO  19:07:44,267 - #40 ]
INFO  19:07:44,267 - #33 ;
INFO  19:07:44,267 - #43 char
INFO  19:07:44,267 - #43 yy
INFO  19:07:44,267 - #39 [
INFO  19:07:44,267 - #40 ]
INFO  19:07:44,267 - #33 ;
INFO  19:07:44,267 - #43 int
INFO  19:07:44,267 - #43 br
INFO  19:07:44,267 - #39 [
INFO  19:07:44,267 - #40 ]
INFO  19:07:44,267 - #33 ;
INFO  19:07:44,268 - #35 {
INFO  19:07:44,268 - #43 br
INFO  19:07:44,268 - #19 =
INFO  19:07:44,268 - #16 new
INFO  19:07:44,268 - #43 int
INFO  19:07:44,268 - #39 [
INFO  19:07:44,268 - #42 10
INFO  19:07:44,268 - #40 ]
INFO  19:07:44,269 - #33 ;
INFO  19:07:44,269 - #43 br
INFO  19:07:44,269 - #39 [
INFO  19:07:44,269 - #42 0
INFO  19:07:44,269 - #40 ]
INFO  19:07:44,269 - #19 =
INFO  19:07:44,269 - #42 10
INFO  19:07:44,269 - #33 ;
INFO  19:07:44,269 - #43 br
INFO  19:07:44,269 - #39 [
INFO  19:07:44,269 - #42 1
INFO  19:07:44,269 - #40 ]
INFO  19:07:44,269 - #19 =
INFO  19:07:44,270 - #42 2
INFO  19:07:44,270 - #33 ;
INFO  19:07:44,270 - #43 br
INFO  19:07:44,270 - #39 [
INFO  19:07:44,270 - #42 2
INFO  19:07:44,270 - #40 ]
INFO  19:07:44,270 - #19 =
INFO  19:07:44,270 - #42 100
INFO  19:07:44,270 - #33 ;
INFO  19:07:44,270 - #43 x
INFO  19:07:44,270 - #19 =
INFO  19:07:44,270 - #43 func_check
INFO  19:07:44,270 - #37 (
INFO  19:07:44,270 - #43 br
INFO  19:07:44,270 - #31 ,
INFO  19:07:44,271 - #43 xx
INFO  19:07:44,271 - #31 ,
INFO  19:07:44,271 - #43 p
INFO  19:07:44,271 - #38 )
INFO  19:07:44,271 - #33 ;
INFO  19:07:44,271 - #18 print
INFO  19:07:44,271 - #37 (
INFO  19:07:44,271 - #43 x
INFO  19:07:44,271 - #38 )
INFO  19:07:44,271 - #33 ;
INFO  19:07:44,271 - #18 print
INFO  19:07:44,272 - #37 (
INFO  19:07:44,272 - #43 br
INFO  19:07:44,272 - #39 [
INFO  19:07:44,272 - #43 br
INFO  19:07:44,272 - #39 [
INFO  19:07:44,272 - #42 1
INFO  19:07:44,272 - #40 ]
INFO  19:07:44,272 - #40 ]
INFO  19:07:44,272 - #38 )
INFO  19:07:44,272 - #33 ;
INFO  19:07:44,272 - #18 print
INFO  19:07:44,272 - #37 (
INFO  19:07:44,273 - #43 br
INFO  19:07:44,273 - #39 [
INFO  19:07:44,273 - #42 0
INFO  19:07:44,273 - #40 ]
INFO  19:07:44,273 - #38 )
INFO  19:07:44,274 - #33 ;
INFO  19:07:44,274 - #43 br
INFO  19:07:44,274 - #39 [
INFO  19:07:44,274 - #42 0
INFO  19:07:44,274 - #40 ]
INFO  19:07:44,274 - #28 ++
INFO  19:07:44,274 - #33 ;
INFO  19:07:44,275 - #18 print
INFO  19:07:44,275 - #37 (
INFO  19:07:44,275 - #43 br
INFO  19:07:44,275 - #39 [
INFO  19:07:44,275 - #42 0
INFO  19:07:44,275 - #40 ]
INFO  19:07:44,275 - #38 )
INFO  19:07:44,275 - #33 ;
INFO  19:07:44,275 - #43 x
INFO  19:07:44,275 - #19 =
INFO  19:07:44,275 - #43 br
INFO  19:07:44,275 - #39 [
INFO  19:07:44,276 - #42 0
INFO  19:07:44,276 - #40 ]
INFO  19:07:44,276 - #49 +
INFO  19:07:44,276 - #43 br
INFO  19:07:44,276 - #39 [
INFO  19:07:44,276 - #42 1
INFO  19:07:44,276 - #40 ]
INFO  19:07:44,279 - #33 ;
INFO  19:07:44,279 - #43 a
INFO  19:07:44,279 - #19 =
INFO  19:07:44,279 - #42 2
INFO  19:07:44,279 - #49 +
INFO  19:07:44,279 - #43 br
INFO  19:07:44,279 - #39 [
INFO  19:07:44,279 - #42 0
INFO  19:07:44,279 - #40 ]
INFO  19:07:44,279 - #46 *
INFO  19:07:44,279 - #43 br
INFO  19:07:44,279 - #39 [
INFO  19:07:44,279 - #42 2
INFO  19:07:44,280 - #40 ]
INFO  19:07:44,280 - #33 ;
INFO  19:07:44,280 - #43 b
INFO  19:07:44,280 - #19 =
INFO  19:07:44,280 - #50 -
INFO  19:07:44,281 - #43 br
INFO  19:07:44,281 - #39 [
INFO  19:07:44,281 - #42 1
INFO  19:07:44,281 - #40 ]
INFO  19:07:44,281 - #46 *
INFO  19:07:44,281 - #43 br
INFO  19:07:44,281 - #39 [
INFO  19:07:44,282 - #42 2
INFO  19:07:44,282 - #40 ]
INFO  19:07:44,282 - #33 ;
INFO  19:07:44,282 - #43 c
INFO  19:07:44,282 - #19 =
INFO  19:07:44,282 - #50 -
INFO  19:07:44,282 - #43 br
INFO  19:07:44,282 - #39 [
INFO  19:07:44,282 - #42 2
INFO  19:07:44,282 - #40 ]
INFO  19:07:44,282 - #47 /
INFO  19:07:44,282 - #43 br
INFO  19:07:44,282 - #39 [
INFO  19:07:44,282 - #42 1
INFO  19:07:44,282 - #40 ]
INFO  19:07:44,283 - #33 ;
INFO  19:07:44,283 - #18 print
INFO  19:07:44,283 - #37 (
INFO  19:07:44,283 - #43 x
INFO  19:07:44,283 - #38 )
INFO  19:07:44,283 - #33 ;
INFO  19:07:44,283 - #18 print
INFO  19:07:44,283 - #37 (
INFO  19:07:44,283 - #43 a
INFO  19:07:44,283 - #38 )
INFO  19:07:44,283 - #33 ;
INFO  19:07:44,283 - #18 print
INFO  19:07:44,283 - #37 (
INFO  19:07:44,283 - #43 b
INFO  19:07:44,283 - #38 )
INFO  19:07:44,283 - #33 ;
INFO  19:07:44,284 - #18 print
INFO  19:07:44,284 - #37 (
INFO  19:07:44,284 - #43 c
INFO  19:07:44,284 - #38 )
INFO  19:07:44,284 - #33 ;
INFO  19:07:44,284 - #43 x
INFO  19:07:44,284 - #19 =
INFO  19:07:44,284 - #42 2
INFO  19:07:44,284 - #49 +
INFO  19:07:44,284 - #42 3
INFO  19:07:44,284 - #46 *
INFO  19:07:44,284 - #37 (
INFO  19:07:44,284 - #42 4
INFO  19:07:44,284 - #49 +
INFO  19:07:44,284 - #42 5
INFO  19:07:44,284 - #38 )
INFO  19:07:44,284 - #49 +
INFO  19:07:44,285 - #43 k
INFO  19:07:44,285 - #37 (
INFO  19:07:44,285 - #42 0
INFO  19:07:44,285 - #31 ,
INFO  19:07:44,285 - #42 1
INFO  19:07:44,285 - #38 )
INFO  19:07:44,285 - #33 ;
INFO  19:07:44,285 - #43 x
INFO  19:07:44,285 - #19 =
INFO  19:07:44,285 - #50 -
INFO  19:07:44,285 - #37 (
INFO  19:07:44,285 - #42 5
INFO  19:07:44,285 - #49 +
INFO  19:07:44,285 - #42 2
INFO  19:07:44,285 - #38 )
INFO  19:07:44,285 - #50 -
INFO  19:07:44,285 - #42 3
INFO  19:07:44,285 - #49 +
INFO  19:07:44,285 - #42 4
INFO  19:07:44,285 - #33 ;
INFO  19:07:44,286 - #18 print
INFO  19:07:44,286 - #37 (
INFO  19:07:44,286 - #50 -
INFO  19:07:44,286 - #43 x
INFO  19:07:44,286 - #49 +
INFO  19:07:44,286 - #42 4
INFO  19:07:44,286 - #50 -
INFO  19:07:44,286 - #42 10
INFO  19:07:44,286 - #38 )
INFO  19:07:44,286 - #33 ;
INFO  19:07:44,286 - #43 kk
INFO  19:07:44,286 - #37 (
INFO  19:07:44,286 - #38 )
INFO  19:07:44,287 - #33 ;
INFO  19:07:44,287 - #36 }
INFO  19:07:44,287 - #36 }
INFO  19:07:44,305 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      NoGroupDecl(
      ) [NoGroupDecl]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 b
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               c
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             d
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            ReturnValueClassVoid(
             kk
            ) [ReturnValueClassVoid]
            NoFormParam(
            ) [NoFormParam]
            NoVarDeclList(
            ) [NoVarDeclList]
            LBraceClass(
            ) [LBraceClass]
            NoStmt(
            ) [NoStmt]
            RBraceClass(
            ) [RBraceClass]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          ReturnValueClassNoVoid(
            Type(
             int
            ) [Type]
           k
          ) [ReturnValueClassNoVoid]
          FormParams(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclClassNoArray(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormalParamDeclClassNoArray]
              ) [SingleFormalParamDecl]
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               b
              ) [FormalParamDeclClassNoArray]
            ) [FormalParamDecls]
          ) [FormParams]
          NoVarDeclList(
          ) [NoVarDeclList]
          LBraceClass(
          ) [LBraceClass]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              ReturnNonTerminalClass(
              ) [ReturnNonTerminalClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           b
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [ReturnExpr]
          ) [Statements]
          RBraceClass(
          ) [RBraceClass]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         func_check
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclClassArray(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormalParamDeclClassArray]
              ) [SingleFormalParamDecl]
              FormalParamDeclClassArray(
                Type(
                 char
                ) [Type]
               b
              ) [FormalParamDeclClassArray]
            ) [FormalParamDecls]
            FormalParamDeclClassNoArray(
              Type(
               bool
              ) [Type]
             c
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               local
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         local
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   a
                                  ) [DesigIdent]
                                  OptionalDesignatorArray(
                                    HelperClass(
                                    ) [HelperClass]
                                    LSquareClass(
                                    ) [LSquareClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [OptionalDesignatorArray]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               local
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     local
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               local
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          TermOptionalListClass(
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                            MultiplyOperationClass(
                             *
                            ) [MultiplyOperationClass]
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [TermOptionalListClass]
                        ) [TermClass]
                        ExprOptionalListClass(
                          ExprOptionalListClass(
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                            PlusOperation(
                             +
                            ) [PlusOperation]
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   local
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                          ) [ExprOptionalListClass]
                          MinusOperation(
                           -
                          ) [MinusOperation]
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 a
                                ) [DesigIdent]
                                OptionalDesignatorArray(
                                  HelperClass(
                                  ) [HelperClass]
                                  LSquareClass(
                                  ) [LSquareClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           1
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [OptionalDesignatorArray]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                        ) [ExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            PrintStmt(
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           local
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
              NoCommaNumberClass(
              ) [NoCommaNumberClass]
            ) [PrintStmt]
          ) [Statements]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         local
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  VarDeclClass(
                    Type(
                     int
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       x
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   char
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     z
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 bool
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   p
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               char
              ) [Type]
              VarListSingle(
                VarClassArray(
                 xx
                ) [VarClassArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassArray(
               yy
              ) [VarClassArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             br
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  NoStmt(
                                                  ) [NoStmt]
                                                  Assignment(
                                                    DesignatorStatementOptionsClassAssignExpression(
                                                      Designator(
                                                        DesigIdent(
                                                         br
                                                        ) [DesigIdent]
                                                        NoOptionalDesignatorClass(
                                                        ) [NoOptionalDesignatorClass]
                                                      ) [Designator]
                                                      AssignOpClass(
                                                        AssignOperationClass(
                                                        ) [AssignOperationClass]
                                                      ) [AssignOpClass]
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              NewFactorClass(
                                                                Type(
                                                                 int
                                                                ) [Type]
                                                                FactorOptionalSecondClass(
                                                                  ClassOneClass(
                                                                    NormalExpressionClass(
                                                                      ExprFirstOptionClassWithMinus(
                                                                        TermClass(
                                                                          NumberConst(
                                                                           10
                                                                          ) [NumberConst]
                                                                          NoTermOptionalListClass(
                                                                          ) [NoTermOptionalListClass]
                                                                        ) [TermClass]
                                                                        NoExprOptionalListClass(
                                                                        ) [NoExprOptionalListClass]
                                                                      ) [ExprFirstOptionClassWithMinus]
                                                                    ) [NormalExpressionClass]
                                                                  ) [ClassOneClass]
                                                                ) [FactorOptionalSecondClass]
                                                              ) [NewFactorClass]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                    ) [DesignatorStatementOptionsClassAssignExpression]
                                                  ) [Assignment]
                                                ) [Statements]
                                                Assignment(
                                                  DesignatorStatementOptionsClassAssignExpression(
                                                    Designator(
                                                      DesigIdent(
                                                       br
                                                      ) [DesigIdent]
                                                      OptionalDesignatorArray(
                                                        HelperClass(
                                                        ) [HelperClass]
                                                        LSquareClass(
                                                        ) [LSquareClass]
                                                        ClassOneClass(
                                                          NormalExpressionClass(
                                                            ExprFirstOptionClassWithMinus(
                                                              TermClass(
                                                                NumberConst(
                                                                 0
                                                                ) [NumberConst]
                                                                NoTermOptionalListClass(
                                                                ) [NoTermOptionalListClass]
                                                              ) [TermClass]
                                                              NoExprOptionalListClass(
                                                              ) [NoExprOptionalListClass]
                                                            ) [ExprFirstOptionClassWithMinus]
                                                          ) [NormalExpressionClass]
                                                        ) [ClassOneClass]
                                                      ) [OptionalDesignatorArray]
                                                    ) [Designator]
                                                    AssignOpClass(
                                                      AssignOperationClass(
                                                      ) [AssignOperationClass]
                                                    ) [AssignOpClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            NumberConst(
                                                             10
                                                            ) [NumberConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                                ) [Assignment]
                                              ) [Statements]
                                              Assignment(
                                                DesignatorStatementOptionsClassAssignExpression(
                                                  Designator(
                                                    DesigIdent(
                                                     br
                                                    ) [DesigIdent]
                                                    OptionalDesignatorArray(
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      LSquareClass(
                                                      ) [LSquareClass]
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              NumberConst(
                                                               1
                                                              ) [NumberConst]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                    ) [OptionalDesignatorArray]
                                                  ) [Designator]
                                                  AssignOpClass(
                                                    AssignOperationClass(
                                                    ) [AssignOperationClass]
                                                  ) [AssignOpClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           2
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [DesignatorStatementOptionsClassAssignExpression]
                                              ) [Assignment]
                                            ) [Statements]
                                            Assignment(
                                              DesignatorStatementOptionsClassAssignExpression(
                                                Designator(
                                                  DesigIdent(
                                                   br
                                                  ) [DesigIdent]
                                                  OptionalDesignatorArray(
                                                    HelperClass(
                                                    ) [HelperClass]
                                                    LSquareClass(
                                                    ) [LSquareClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            NumberConst(
                                                             2
                                                            ) [NumberConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [OptionalDesignatorArray]
                                                ) [Designator]
                                                AssignOpClass(
                                                  AssignOperationClass(
                                                  ) [AssignOperationClass]
                                                ) [AssignOpClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         100
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [DesignatorStatementOptionsClassAssignExpression]
                                            ) [Assignment]
                                          ) [Statements]
                                          Assignment(
                                            DesignatorStatementOptionsClassAssignExpression(
                                              Designator(
                                                DesigIdent(
                                                 x
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                              AssignOpClass(
                                                AssignOperationClass(
                                                ) [AssignOperationClass]
                                              ) [AssignOpClass]
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      FactorOptionalParams(
                                                        Designator(
                                                          DesigIdent(
                                                           func_check
                                                          ) [DesigIdent]
                                                          NoOptionalDesignatorClass(
                                                          ) [NoOptionalDesignatorClass]
                                                        ) [Designator]
                                                        Actuals(
                                                          ActualParams(
                                                            ActualParams(
                                                              ActualParam(
                                                                ClassOneClass(
                                                                  NormalExpressionClass(
                                                                    ExprFirstOptionClassWithMinus(
                                                                      TermClass(
                                                                        DesignatorClass(
                                                                          Designator(
                                                                            DesigIdent(
                                                                             br
                                                                            ) [DesigIdent]
                                                                            NoOptionalDesignatorClass(
                                                                            ) [NoOptionalDesignatorClass]
                                                                          ) [Designator]
                                                                        ) [DesignatorClass]
                                                                        NoTermOptionalListClass(
                                                                        ) [NoTermOptionalListClass]
                                                                      ) [TermClass]
                                                                      NoExprOptionalListClass(
                                                                      ) [NoExprOptionalListClass]
                                                                    ) [ExprFirstOptionClassWithMinus]
                                                                  ) [NormalExpressionClass]
                                                                ) [ClassOneClass]
                                                              ) [ActualParam]
                                                              ClassOneClass(
                                                                NormalExpressionClass(
                                                                  ExprFirstOptionClassWithMinus(
                                                                    TermClass(
                                                                      DesignatorClass(
                                                                        Designator(
                                                                          DesigIdent(
                                                                           xx
                                                                          ) [DesigIdent]
                                                                          NoOptionalDesignatorClass(
                                                                          ) [NoOptionalDesignatorClass]
                                                                        ) [Designator]
                                                                      ) [DesignatorClass]
                                                                      NoTermOptionalListClass(
                                                                      ) [NoTermOptionalListClass]
                                                                    ) [TermClass]
                                                                    NoExprOptionalListClass(
                                                                    ) [NoExprOptionalListClass]
                                                                  ) [ExprFirstOptionClassWithMinus]
                                                                ) [NormalExpressionClass]
                                                              ) [ClassOneClass]
                                                            ) [ActualParams]
                                                            ClassOneClass(
                                                              NormalExpressionClass(
                                                                ExprFirstOptionClassWithMinus(
                                                                  TermClass(
                                                                    DesignatorClass(
                                                                      Designator(
                                                                        DesigIdent(
                                                                         p
                                                                        ) [DesigIdent]
                                                                        NoOptionalDesignatorClass(
                                                                        ) [NoOptionalDesignatorClass]
                                                                      ) [Designator]
                                                                    ) [DesignatorClass]
                                                                    NoTermOptionalListClass(
                                                                    ) [NoTermOptionalListClass]
                                                                  ) [TermClass]
                                                                  NoExprOptionalListClass(
                                                                  ) [NoExprOptionalListClass]
                                                                ) [ExprFirstOptionClassWithMinus]
                                                              ) [NormalExpressionClass]
                                                            ) [ClassOneClass]
                                                          ) [ActualParams]
                                                        ) [Actuals]
                                                      ) [FactorOptionalParams]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                            ) [DesignatorStatementOptionsClassAssignExpression]
                                          ) [Assignment]
                                        ) [Statements]
                                        PrintStmt(
                                          ClassOneClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  DesignatorClass(
                                                    Designator(
                                                      DesigIdent(
                                                       x
                                                      ) [DesigIdent]
                                                      NoOptionalDesignatorClass(
                                                      ) [NoOptionalDesignatorClass]
                                                    ) [Designator]
                                                  ) [DesignatorClass]
                                                  NoTermOptionalListClass(
                                                  ) [NoTermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                          ) [ClassOneClass]
                                          NoCommaNumberClass(
                                          ) [NoCommaNumberClass]
                                        ) [PrintStmt]
                                      ) [Statements]
                                      PrintStmt(
                                        ClassOneClass(
                                          NormalExpressionClass(
                                            ExprFirstOptionClassWithMinus(
                                              TermClass(
                                                DesignatorClass(
                                                  Designator(
                                                    DesigIdent(
                                                     br
                                                    ) [DesigIdent]
                                                    OptionalDesignatorArray(
                                                      HelperClass(
                                                      ) [HelperClass]
                                                      LSquareClass(
                                                      ) [LSquareClass]
                                                      ClassOneClass(
                                                        NormalExpressionClass(
                                                          ExprFirstOptionClassWithMinus(
                                                            TermClass(
                                                              DesignatorClass(
                                                                Designator(
                                                                  DesigIdent(
                                                                   br
                                                                  ) [DesigIdent]
                                                                  OptionalDesignatorArray(
                                                                    HelperClass(
                                                                    ) [HelperClass]
                                                                    LSquareClass(
                                                                    ) [LSquareClass]
                                                                    ClassOneClass(
                                                                      NormalExpressionClass(
                                                                        ExprFirstOptionClassWithMinus(
                                                                          TermClass(
                                                                            NumberConst(
                                                                             1
                                                                            ) [NumberConst]
                                                                            NoTermOptionalListClass(
                                                                            ) [NoTermOptionalListClass]
                                                                          ) [TermClass]
                                                                          NoExprOptionalListClass(
                                                                          ) [NoExprOptionalListClass]
                                                                        ) [ExprFirstOptionClassWithMinus]
                                                                      ) [NormalExpressionClass]
                                                                    ) [ClassOneClass]
                                                                  ) [OptionalDesignatorArray]
                                                                ) [Designator]
                                                              ) [DesignatorClass]
                                                              NoTermOptionalListClass(
                                                              ) [NoTermOptionalListClass]
                                                            ) [TermClass]
                                                            NoExprOptionalListClass(
                                                            ) [NoExprOptionalListClass]
                                                          ) [ExprFirstOptionClassWithMinus]
                                                        ) [NormalExpressionClass]
                                                      ) [ClassOneClass]
                                                    ) [OptionalDesignatorArray]
                                                  ) [Designator]
                                                ) [DesignatorClass]
                                                NoTermOptionalListClass(
                                                ) [NoTermOptionalListClass]
                                              ) [TermClass]
                                              NoExprOptionalListClass(
                                              ) [NoExprOptionalListClass]
                                            ) [ExprFirstOptionClassWithMinus]
                                          ) [NormalExpressionClass]
                                        ) [ClassOneClass]
                                        NoCommaNumberClass(
                                        ) [NoCommaNumberClass]
                                      ) [PrintStmt]
                                    ) [Statements]
                                    PrintStmt(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              DesignatorClass(
                                                Designator(
                                                  DesigIdent(
                                                   br
                                                  ) [DesigIdent]
                                                  OptionalDesignatorArray(
                                                    HelperClass(
                                                    ) [HelperClass]
                                                    LSquareClass(
                                                    ) [LSquareClass]
                                                    ClassOneClass(
                                                      NormalExpressionClass(
                                                        ExprFirstOptionClassWithMinus(
                                                          TermClass(
                                                            NumberConst(
                                                             0
                                                            ) [NumberConst]
                                                            NoTermOptionalListClass(
                                                            ) [NoTermOptionalListClass]
                                                          ) [TermClass]
                                                          NoExprOptionalListClass(
                                                          ) [NoExprOptionalListClass]
                                                        ) [ExprFirstOptionClassWithMinus]
                                                      ) [NormalExpressionClass]
                                                    ) [ClassOneClass]
                                                  ) [OptionalDesignatorArray]
                                                ) [Designator]
                                              ) [DesignatorClass]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                      NoCommaNumberClass(
                                      ) [NoCommaNumberClass]
                                    ) [PrintStmt]
                                  ) [Statements]
                                  Assignment(
                                    DesignatorStatementPlusPlus(
                                      Designator(
                                        DesigIdent(
                                         br
                                        ) [DesigIdent]
                                        OptionalDesignatorArray(
                                          HelperClass(
                                          ) [HelperClass]
                                          LSquareClass(
                                          ) [LSquareClass]
                                          ClassOneClass(
                                            NormalExpressionClass(
                                              ExprFirstOptionClassWithMinus(
                                                TermClass(
                                                  NumberConst(
                                                   0
                                                  ) [NumberConst]
                                                  NoTermOptionalListClass(
                                                  ) [NoTermOptionalListClass]
                                                ) [TermClass]
                                                NoExprOptionalListClass(
                                                ) [NoExprOptionalListClass]
                                              ) [ExprFirstOptionClassWithMinus]
                                            ) [NormalExpressionClass]
                                          ) [ClassOneClass]
                                        ) [OptionalDesignatorArray]
                                      ) [Designator]
                                    ) [DesignatorStatementPlusPlus]
                                  ) [Assignment]
                                ) [Statements]
                                PrintStmt(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               br
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         0
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                  NoCommaNumberClass(
                                  ) [NoCommaNumberClass]
                                ) [PrintStmt]
                              ) [Statements]
                              Assignment(
                                DesignatorStatementOptionsClassAssignExpression(
                                  Designator(
                                    DesigIdent(
                                     x
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                  AssignOpClass(
                                    AssignOperationClass(
                                    ) [AssignOperationClass]
                                  ) [AssignOpClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               br
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         0
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        ExprOptionalListClass(
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                          PlusOperation(
                                           +
                                          ) [PlusOperation]
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 br
                                                ) [DesigIdent]
                                                OptionalDesignatorArray(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  LSquareClass(
                                                  ) [LSquareClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           1
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [OptionalDesignatorArray]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                        ) [ExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [DesignatorStatementOptionsClassAssignExpression]
                              ) [Assignment]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementOptionsClassAssignExpression(
                                Designator(
                                  DesigIdent(
                                   a
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                AssignOpClass(
                                  AssignOperationClass(
                                  ) [AssignOperationClass]
                                ) [AssignOpClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         2
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      ExprOptionalListClass(
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                        PlusOperation(
                                         +
                                        ) [PlusOperation]
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               br
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         0
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          TermOptionalListClass(
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                            MultiplyOperationClass(
                                             *
                                            ) [MultiplyOperationClass]
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 br
                                                ) [DesigIdent]
                                                OptionalDesignatorArray(
                                                  HelperClass(
                                                  ) [HelperClass]
                                                  LSquareClass(
                                                  ) [LSquareClass]
                                                  ClassOneClass(
                                                    NormalExpressionClass(
                                                      ExprFirstOptionClassWithMinus(
                                                        TermClass(
                                                          NumberConst(
                                                           2
                                                          ) [NumberConst]
                                                          NoTermOptionalListClass(
                                                          ) [NoTermOptionalListClass]
                                                        ) [TermClass]
                                                        NoExprOptionalListClass(
                                                        ) [NoExprOptionalListClass]
                                                      ) [ExprFirstOptionClassWithMinus]
                                                    ) [NormalExpressionClass]
                                                  ) [ClassOneClass]
                                                ) [OptionalDesignatorArray]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                          ) [TermOptionalListClass]
                                        ) [TermClass]
                                      ) [ExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [DesignatorStatementOptionsClassAssignExpression]
                            ) [Assignment]
                          ) [Statements]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 b
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                ExprSecondOptionClassMinus(
                                  ExprNegativeClass(
                                   -
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        DesignatorClass(
                                          Designator(
                                            DesigIdent(
                                             br
                                            ) [DesigIdent]
                                            OptionalDesignatorArray(
                                              HelperClass(
                                              ) [HelperClass]
                                              LSquareClass(
                                              ) [LSquareClass]
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      NumberConst(
                                                       1
                                                      ) [NumberConst]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                            ) [OptionalDesignatorArray]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                        TermOptionalListClass(
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                          MultiplyOperationClass(
                                           *
                                          ) [MultiplyOperationClass]
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               br
                                              ) [DesigIdent]
                                              OptionalDesignatorArray(
                                                HelperClass(
                                                ) [HelperClass]
                                                LSquareClass(
                                                ) [LSquareClass]
                                                ClassOneClass(
                                                  NormalExpressionClass(
                                                    ExprFirstOptionClassWithMinus(
                                                      TermClass(
                                                        NumberConst(
                                                         2
                                                        ) [NumberConst]
                                                        NoTermOptionalListClass(
                                                        ) [NoTermOptionalListClass]
                                                      ) [TermClass]
                                                      NoExprOptionalListClass(
                                                      ) [NoExprOptionalListClass]
                                                    ) [ExprFirstOptionClassWithMinus]
                                                  ) [NormalExpressionClass]
                                                ) [ClassOneClass]
                                              ) [OptionalDesignatorArray]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                        ) [TermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [ExprNegativeClass]
                                ) [ExprSecondOptionClassMinus]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               c
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              ExprSecondOptionClassMinus(
                                ExprNegativeClass(
                                 -
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           br
                                          ) [DesigIdent]
                                          OptionalDesignatorArray(
                                            HelperClass(
                                            ) [HelperClass]
                                            LSquareClass(
                                            ) [LSquareClass]
                                            ClassOneClass(
                                              NormalExpressionClass(
                                                ExprFirstOptionClassWithMinus(
                                                  TermClass(
                                                    NumberConst(
                                                     2
                                                    ) [NumberConst]
                                                    NoTermOptionalListClass(
                                                    ) [NoTermOptionalListClass]
                                                  ) [TermClass]
                                                  NoExprOptionalListClass(
                                                  ) [NoExprOptionalListClass]
                                                ) [ExprFirstOptionClassWithMinus]
                                              ) [NormalExpressionClass]
                                            ) [ClassOneClass]
                                          ) [OptionalDesignatorArray]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      TermOptionalListClass(
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                        DivideOperationClass(
                                         /
                                        ) [DivideOperationClass]
                                        DesignatorClass(
                                          Designator(
                                            DesigIdent(
                                             br
                                            ) [DesigIdent]
                                            OptionalDesignatorArray(
                                              HelperClass(
                                              ) [HelperClass]
                                              LSquareClass(
                                              ) [LSquareClass]
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      NumberConst(
                                                       1
                                                      ) [NumberConst]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                            ) [OptionalDesignatorArray]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                      ) [TermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [ExprNegativeClass]
                              ) [ExprSecondOptionClassMinus]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     x
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   a
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 b
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               c
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     x
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           2
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        ExprOptionalListClass(
                          ExprOptionalListClass(
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                            PlusOperation(
                             +
                            ) [PlusOperation]
                            TermClass(
                              NumberConst(
                               3
                              ) [NumberConst]
                              TermOptionalListClass(
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                                MultiplyOperationClass(
                                 *
                                ) [MultiplyOperationClass]
                                ParenFactorClass(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           4
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        ExprOptionalListClass(
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                          PlusOperation(
                                           +
                                          ) [PlusOperation]
                                          TermClass(
                                            NumberConst(
                                             5
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                        ) [ExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [ParenFactorClass]
                              ) [TermOptionalListClass]
                            ) [TermClass]
                          ) [ExprOptionalListClass]
                          PlusOperation(
                           +
                          ) [PlusOperation]
                          TermClass(
                            FactorOptionalParams(
                              Designator(
                                DesigIdent(
                                 k
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              Actuals(
                                ActualParams(
                                  ActualParam(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [ActualParam]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           1
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [ActualParams]
                              ) [Actuals]
                            ) [FactorOptionalParams]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                        ) [ExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                  DesigIdent(
                   x
                  ) [DesigIdent]
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  ExprSecondOptionClassMinus(
                    ExprNegativeClass(
                     -
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          ParenFactorClass(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     5
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  ExprOptionalListClass(
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                    PlusOperation(
                                     +
                                    ) [PlusOperation]
                                    TermClass(
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                  ) [ExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [ParenFactorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        ExprOptionalListClass(
                          ExprOptionalListClass(
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                            MinusOperation(
                             -
                            ) [MinusOperation]
                            TermClass(
                              NumberConst(
                               3
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                          ) [ExprOptionalListClass]
                          PlusOperation(
                           +
                          ) [PlusOperation]
                          TermClass(
                            NumberConst(
                             4
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                        ) [ExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [ExprNegativeClass]
                  ) [ExprSecondOptionClassMinus]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              ExprSecondOptionClassMinus(
                ExprNegativeClass(
                 -
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           x
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    ExprOptionalListClass(
                      ExprOptionalListClass(
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                        PlusOperation(
                         +
                        ) [PlusOperation]
                        TermClass(
                          NumberConst(
                           4
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                      ) [ExprOptionalListClass]
                      MinusOperation(
                       -
                      ) [MinusOperation]
                      TermClass(
                        NumberConst(
                         10
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                    ) [ExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [ExprNegativeClass]
              ) [ExprSecondOptionClassMinus]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        Assignment(
          DesignatorStatementActualParameters(
            Designator(
              DesigIdent(
               kk
              ) [DesigIdent]
              NoOptionalDesignatorClass(
              ) [NoOptionalDesignatorClass]
            ) [Designator]
            NoActuals(
            ) [NoActuals]
          ) [DesignatorStatementActualParameters]
        ) [Assignment]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:07:44,308 - ===================================
INFO  19:07:44,317 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  19:07:44,318 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  19:07:44,319 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  19:07:44,319 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  19:07:44,319 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  19:07:44,319 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  19:07:44,319 - CONST VALUE 3 IS BEING USED! ON LINE 4
INFO  19:07:44,319 - CONST VARIABLE y IS BEING DEFINED! ON LINE 4
INFO  19:07:44,319 - FUNCTION kk WITH VOID AS RETURN VALUE!  ON LINE 6
INFO  19:07:44,319 - METHOD BODY STARTING!
INFO  19:07:44,320 - METHOD BODY ENDING!
INFO  19:07:44,320 - END OF DEFINING FUNCTION kk
INFO  19:07:44,320 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 8
INFO  19:07:44,320 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 8
INFO  19:07:44,321 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 8
INFO  19:07:44,321 - METHOD BODY STARTING!
INFO  19:07:44,321 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  19:07:44,321 - WE ARE USING A VARIABLE OF TYPE int ON LINE 8
INFO  19:07:44,321 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  19:07:44,322 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  19:07:44,322 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 8
INFO  19:07:44,322 - METHOD BODY ENDING!
INFO  19:07:44,322 - END OF DEFINING FUNCTION k
INFO  19:07:44,322 - FUNCTION func_check WITH RETURN VALUE OF TYPE int ON LINE 10
INFO  19:07:44,322 - FORMAL ARRAY PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 10
INFO  19:07:44,322 - FORMAL ARRAY PARAMETER b DEFINED AND IT IS OF TYPE char ON LINE 10
INFO  19:07:44,322 - FORMAL PARAMETER c DEFINED AND IT IS OF TYPE boolean ON LINE 10
INFO  19:07:44,322 - VARIABLE local IS BEING DEFINED! ON LINE 11
INFO  19:07:44,322 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 11
INFO  19:07:44,322 - METHOD BODY STARTING!
INFO  19:07:44,322 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  19:07:44,322 - BEGINNING OF AN ASSIGNEMENT! ON LINE 13
INFO  19:07:44,322 - CONST NUMBER 0 ON LINE 13
INFO  19:07:44,323 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  19:07:44,323 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  19:07:44,323 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE array
INFO  19:07:44,323 - WE ARE USING AN ARRAY OF TYPE int ON LINE 13
INFO  19:07:44,323 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  19:07:44,323 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  19:07:44,323 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 13
INFO  19:07:44,323 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  19:07:44,323 - WE ARE USING A VARIABLE OF TYPE int ON LINE 14
INFO  19:07:44,323 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  19:07:44,323 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  19:07:44,323 - PRINT FUNCTION CALL IN USE! ON LINE 14
INFO  19:07:44,323 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  19:07:44,323 - BEGINNING OF AN ASSIGNEMENT! ON LINE 15
INFO  19:07:44,323 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  19:07:44,323 - WE ARE USING A VARIABLE OF TYPE int ON LINE 15
INFO  19:07:44,323 - CONST NUMBER 2 ON LINE 15
INFO  19:07:44,324 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  19:07:44,324 - USING INTEGERS IN TERM! ON LINE 15
INFO  19:07:44,324 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  19:07:44,324 - WE ARE USING A VARIABLE OF TYPE int ON LINE 15
INFO  19:07:44,324 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  19:07:44,324 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  19:07:44,324 - CONST NUMBER 1 ON LINE 15
INFO  19:07:44,324 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  19:07:44,324 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  19:07:44,324 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE array
INFO  19:07:44,324 - WE ARE USING AN ARRAY OF TYPE int ON LINE 15
INFO  19:07:44,324 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  19:07:44,324 - USING INTEGERS IN TERM! ON LINE 18
INFO  19:07:44,324 - USING INTEGERS IN TERM! ON LINE 15
INFO  19:07:44,324 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 15
INFO  19:07:44,324 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  19:07:44,324 - WE ARE USING A VARIABLE OF TYPE int ON LINE 16
INFO  19:07:44,324 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  19:07:44,324 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  19:07:44,324 - PRINT FUNCTION CALL IN USE! ON LINE 16
INFO  19:07:44,325 - CURRENT VARIABLE IN USE IS local AND IT IS OF TYPE int
INFO  19:07:44,325 - WE ARE USING A VARIABLE OF TYPE int ON LINE 17
INFO  19:07:44,325 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  19:07:44,325 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  19:07:44,325 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 17
INFO  19:07:44,325 - METHOD BODY ENDING!
INFO  19:07:44,325 - END OF DEFINING FUNCTION func_check
INFO  19:07:44,325 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 22
INFO  19:07:44,325 - VARIABLE x IS BEING DEFINED! ON LINE 23
INFO  19:07:44,325 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 23
INFO  19:07:44,325 - VARIABLE z IS BEING DEFINED! ON LINE 24
INFO  19:07:44,325 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 24
INFO  19:07:44,325 - VARIABLE p IS BEING DEFINED! ON LINE 25
INFO  19:07:44,325 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 25
INFO  19:07:44,325 - ARRAY VARIABLE xx IS BEING DEFINED! ON LINE 26
INFO  19:07:44,325 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 26
INFO  19:07:44,325 - ARRAY VARIABLE yy IS BEING DEFINED! ON LINE 27
INFO  19:07:44,325 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 27
INFO  19:07:44,325 - ARRAY VARIABLE br IS BEING DEFINED! ON LINE 28
INFO  19:07:44,325 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 28
INFO  19:07:44,325 - METHOD BODY STARTING!
INFO  19:07:44,326 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,326 - BEGINNING OF AN ASSIGNEMENT! ON LINE 31
INFO  19:07:44,326 - CONST NUMBER 10 ON LINE 31
INFO  19:07:44,326 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  19:07:44,326 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  19:07:44,326 - USAGE OF KEYWORD NEW! ON LINE 31
INFO  19:07:44,326 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  19:07:44,326 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  19:07:44,326 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 31
INFO  19:07:44,326 - CONST NUMBER 0 ON LINE 32
INFO  19:07:44,326 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  19:07:44,326 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  19:07:44,326 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,326 - BEGINNING OF AN ASSIGNEMENT! ON LINE 32
INFO  19:07:44,327 - CONST NUMBER 10 ON LINE 32
INFO  19:07:44,327 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  19:07:44,327 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 32
INFO  19:07:44,327 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 32
INFO  19:07:44,327 - CONST NUMBER 1 ON LINE 33
INFO  19:07:44,327 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 33
INFO  19:07:44,327 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 33
INFO  19:07:44,327 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,327 - BEGINNING OF AN ASSIGNEMENT! ON LINE 33
INFO  19:07:44,327 - CONST NUMBER 2 ON LINE 33
INFO  19:07:44,327 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 33
INFO  19:07:44,327 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 33
INFO  19:07:44,328 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 33
INFO  19:07:44,328 - CONST NUMBER 2 ON LINE 34
INFO  19:07:44,328 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  19:07:44,328 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  19:07:44,328 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,328 - BEGINNING OF AN ASSIGNEMENT! ON LINE 34
INFO  19:07:44,329 - CONST NUMBER 100 ON LINE 34
INFO  19:07:44,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  19:07:44,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 34
INFO  19:07:44,329 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 34
INFO  19:07:44,329 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  19:07:44,329 - BEGINNING OF AN ASSIGNEMENT! ON LINE 36
INFO  19:07:44,329 - CURRENT VARIABLE IN USE IS func_check AND IT IS OF TYPE int
INFO  19:07:44,329 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,329 - WE ARE USING A VARIABLE OF TYPE array ON LINE 36
INFO  19:07:44,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  19:07:44,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  19:07:44,329 - CURRENT VARIABLE IN USE IS xx AND IT IS OF TYPE array
INFO  19:07:44,329 - WE ARE USING A VARIABLE OF TYPE array ON LINE 36
INFO  19:07:44,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  19:07:44,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  19:07:44,329 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  19:07:44,330 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 36
INFO  19:07:44,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  19:07:44,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  19:07:44,330 - TYPE -> array <- AND -> array <- ON LINE 36
INFO  19:07:44,330 - TYPE -> array <- AND -> array <- ON LINE 36
INFO  19:07:44,330 - TYPE -> boolean <- AND -> boolean <- ON LINE 36
INFO  19:07:44,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  19:07:44,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  19:07:44,330 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 36
INFO  19:07:44,330 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  19:07:44,330 - WE ARE USING A VARIABLE OF TYPE int ON LINE 37
INFO  19:07:44,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  19:07:44,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 37
INFO  19:07:44,330 - PRINT FUNCTION CALL IN USE! ON LINE 37
INFO  19:07:44,330 - CONST NUMBER 1 ON LINE 40
INFO  19:07:44,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  19:07:44,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  19:07:44,330 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,331 - WE ARE USING AN ARRAY OF TYPE int ON LINE 40
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  19:07:44,331 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,331 - WE ARE USING AN ARRAY OF TYPE int ON LINE 40
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  19:07:44,331 - PRINT FUNCTION CALL IN USE! ON LINE 40
INFO  19:07:44,331 - CONST NUMBER 0 ON LINE 41
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  19:07:44,331 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,331 - WE ARE USING AN ARRAY OF TYPE int ON LINE 41
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 41
INFO  19:07:44,331 - PRINT FUNCTION CALL IN USE! ON LINE 41
INFO  19:07:44,331 - CONST NUMBER 0 ON LINE 42
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  19:07:44,331 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,331 - USING ++ ON br ON LINE 42
INFO  19:07:44,331 - CONST NUMBER 0 ON LINE 43
INFO  19:07:44,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  19:07:44,332 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,332 - WE ARE USING AN ARRAY OF TYPE int ON LINE 43
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 43
INFO  19:07:44,332 - PRINT FUNCTION CALL IN USE! ON LINE 43
INFO  19:07:44,332 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  19:07:44,332 - BEGINNING OF AN ASSIGNEMENT! ON LINE 45
INFO  19:07:44,332 - CONST NUMBER 0 ON LINE 45
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  19:07:44,332 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,332 - WE ARE USING AN ARRAY OF TYPE int ON LINE 45
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  19:07:44,332 - CONST NUMBER 1 ON LINE 45
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  19:07:44,332 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,332 - WE ARE USING AN ARRAY OF TYPE int ON LINE 45
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 45
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  19:07:44,332 - USING INTEGERS IN TERM! ON LINE 45
INFO  19:07:44,332 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 45
INFO  19:07:44,332 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  19:07:44,332 - BEGINNING OF AN ASSIGNEMENT! ON LINE 46
INFO  19:07:44,332 - CONST NUMBER 2 ON LINE 46
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  19:07:44,332 - CONST NUMBER 0 ON LINE 46
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  19:07:44,332 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,332 - WE ARE USING AN ARRAY OF TYPE int ON LINE 46
INFO  19:07:44,332 - CONST NUMBER 2 ON LINE 46
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  19:07:44,332 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,332 - WE ARE USING AN ARRAY OF TYPE int ON LINE 46
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  19:07:44,332 - USING INTEGERS IN TERM! ON LINE 46
INFO  19:07:44,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 6
INFO  19:07:44,332 - USING INTEGERS IN TERM! ON LINE 46
INFO  19:07:44,332 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 46
INFO  19:07:44,332 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  19:07:44,333 - BEGINNING OF AN ASSIGNEMENT! ON LINE 47
INFO  19:07:44,333 - CONST NUMBER 1 ON LINE 47
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  19:07:44,333 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,333 - WE ARE USING AN ARRAY OF TYPE int ON LINE 47
INFO  19:07:44,333 - CONST NUMBER 2 ON LINE 47
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  19:07:44,333 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,333 - WE ARE USING AN ARRAY OF TYPE int ON LINE 47
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  19:07:44,333 - USING INTEGERS IN TERM! ON LINE 47
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 47
INFO  19:07:44,333 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 47
INFO  19:07:44,333 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  19:07:44,333 - BEGINNING OF AN ASSIGNEMENT! ON LINE 48
INFO  19:07:44,333 - CONST NUMBER 2 ON LINE 48
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  19:07:44,333 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,333 - WE ARE USING AN ARRAY OF TYPE int ON LINE 48
INFO  19:07:44,333 - CONST NUMBER 1 ON LINE 48
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  19:07:44,333 - CURRENT VARIABLE IN USE IS br AND IT IS OF TYPE array
INFO  19:07:44,333 - WE ARE USING AN ARRAY OF TYPE int ON LINE 48
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 12
INFO  19:07:44,333 - USING INTEGERS IN TERM! ON LINE 48
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 48
INFO  19:07:44,333 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 48
INFO  19:07:44,333 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  19:07:44,333 - WE ARE USING A VARIABLE OF TYPE int ON LINE 50
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 50
INFO  19:07:44,333 - PRINT FUNCTION CALL IN USE! ON LINE 50
INFO  19:07:44,333 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  19:07:44,333 - WE ARE USING A VARIABLE OF TYPE int ON LINE 51
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 51
INFO  19:07:44,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 51
INFO  19:07:44,333 - PRINT FUNCTION CALL IN USE! ON LINE 51
INFO  19:07:44,334 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  19:07:44,334 - WE ARE USING A VARIABLE OF TYPE int ON LINE 52
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 52
INFO  19:07:44,334 - PRINT FUNCTION CALL IN USE! ON LINE 52
INFO  19:07:44,334 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  19:07:44,334 - WE ARE USING A VARIABLE OF TYPE int ON LINE 53
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  19:07:44,334 - PRINT FUNCTION CALL IN USE! ON LINE 53
INFO  19:07:44,334 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  19:07:44,334 - BEGINNING OF AN ASSIGNEMENT! ON LINE 55
INFO  19:07:44,334 - CONST NUMBER 2 ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  19:07:44,334 - CONST NUMBER 3 ON LINE 55
INFO  19:07:44,334 - CONST NUMBER 4 ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  19:07:44,334 - CONST NUMBER 5 ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  19:07:44,334 - USING INTEGERS IN TERM! ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 10
INFO  19:07:44,334 - USING INTEGERS IN TERM! ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 6
INFO  19:07:44,334 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE int
INFO  19:07:44,334 - CONST NUMBER 0 ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  19:07:44,334 - CONST NUMBER 1 ON LINE 55
INFO  19:07:44,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  19:07:44,335 - TYPE -> int <- AND -> int <- ON LINE 55
INFO  19:07:44,335 - TYPE -> int <- AND -> int <- ON LINE 55
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 55
INFO  19:07:44,335 - USING INTEGERS IN TERM! ON LINE 6
INFO  19:07:44,335 - USING INTEGERS IN TERM! ON LINE 55
INFO  19:07:44,335 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 55
INFO  19:07:44,335 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  19:07:44,335 - BEGINNING OF AN ASSIGNEMENT! ON LINE 56
INFO  19:07:44,335 - CONST NUMBER 5 ON LINE 56
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  19:07:44,335 - CONST NUMBER 2 ON LINE 56
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 8
INFO  19:07:44,335 - USING INTEGERS IN TERM! ON LINE 56
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  19:07:44,335 - CONST NUMBER 3 ON LINE 56
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 13
INFO  19:07:44,335 - CONST NUMBER 4 ON LINE 56
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  19:07:44,335 - USING INTEGERS IN TERM! ON LINE 13
INFO  19:07:44,335 - USING INTEGERS IN TERM! ON LINE 56
INFO  19:07:44,335 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 56
INFO  19:07:44,335 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  19:07:44,335 - WE ARE USING A VARIABLE OF TYPE int ON LINE 58
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  19:07:44,335 - CONST NUMBER 4 ON LINE 58
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  19:07:44,335 - CONST NUMBER 10 ON LINE 58
INFO  19:07:44,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  19:07:44,335 - USING INTEGERS IN TERM! ON LINE 9
INFO  19:07:44,335 - USING INTEGERS IN TERM! ON LINE 58
INFO  19:07:44,335 - PRINT FUNCTION CALL IN USE! ON LINE 58
INFO  19:07:44,335 - CURRENT VARIABLE IN USE IS kk AND IT IS OF TYPE void
INFO  19:07:44,335 - GLOBAL METHOD kk HAS BEEN CALLED!
INFO  19:07:44,335 - METHOD BODY ENDING!
INFO  19:07:44,335 - END OF DEFINING FUNCTION main
INFO  19:07:44,335 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  19:07:44,335 -  Deklarisanih promenljivih ima = 11
INFO  19:07:44,335 - ===================================
INFO  19:07:44,340 - Parsiranje uspesno zavrseno!
