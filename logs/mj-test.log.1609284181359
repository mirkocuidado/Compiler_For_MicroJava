INFO  00:19:22,658 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  00:19:22,722 - #34 program
INFO  00:19:22,722 - #48 MJProgram
INFO  00:19:22,722 - #48 int
INFO  00:19:22,722 - #48 x
INFO  00:19:22,723 - #42 ,
INFO  00:19:22,723 - #48 y
INFO  00:19:22,723 - #37 ;
INFO  00:19:22,723 - #48 int
INFO  00:19:22,724 - #48 bla
INFO  00:19:22,724 - #45 [
INFO  00:19:22,724 - #46 ]
INFO  00:19:22,724 - #42 ,
INFO  00:19:22,724 - #48 zz
INFO  00:19:22,724 - #42 ,
INFO  00:19:22,724 - #48 cc
INFO  00:19:22,724 - #45 [
INFO  00:19:22,725 - #46 ]
INFO  00:19:22,725 - #37 ;
INFO  00:19:22,725 - #7 const
INFO  00:19:22,725 - #48 int
INFO  00:19:22,725 - #48 aa
INFO  00:19:22,734 - #33 =
INFO  00:19:22,734 - #47 5
INFO  00:19:22,734 - #42 ,
INFO  00:19:22,734 - #48 bb
INFO  00:19:22,734 - #33 =
INFO  00:19:22,734 - #47 6
INFO  00:19:22,735 - #37 ;
INFO  00:19:22,735 - #7 const
INFO  00:19:22,735 - #48 char
INFO  00:19:22,735 - #48 cc
INFO  00:19:22,735 - #33 =
INFO  00:19:22,735 - #2 c
INFO  00:19:22,735 - #42 ,
INFO  00:19:22,736 - #48 dd
INFO  00:19:22,736 - #33 =
INFO  00:19:22,736 - #2 d
INFO  00:19:22,736 - #37 ;
INFO  00:19:22,736 - #7 const
INFO  00:19:22,737 - #48 bool
INFO  00:19:22,737 - #48 ee
INFO  00:19:22,737 - #33 =
INFO  00:19:22,737 - #3 true
INFO  00:19:22,737 - #42 ,
INFO  00:19:22,737 - #48 ff
INFO  00:19:22,737 - #33 =
INFO  00:19:22,738 - #3 false
INFO  00:19:22,738 - #37 ;
INFO  00:19:22,738 - #5 class
INFO  00:19:22,738 - #48 Klasa
INFO  00:19:22,738 - #35 {
INFO  00:19:22,738 - #48 int
INFO  00:19:22,739 - #48 duca1
INFO  00:19:22,739 - #42 ,
INFO  00:19:22,739 - #48 duca2
INFO  00:19:22,739 - #42 ,
INFO  00:19:22,739 - #48 duca3
INFO  00:19:22,739 - #37 ;
INFO  00:19:22,739 - #36 }
INFO  00:19:22,740 - #5 class
INFO  00:19:22,740 - #48 KlasaDva
INFO  00:19:22,740 - #13 extends
INFO  00:19:22,740 - #48 Klasa
INFO  00:19:22,740 - #35 {
INFO  00:19:22,740 - #48 int
INFO  00:19:22,740 - #48 aa
INFO  00:19:22,741 - #37 ;
INFO  00:19:22,741 - #35 {
INFO  00:19:22,741 - #48 int
INFO  00:19:22,741 - #48 f
INFO  00:19:22,741 - #38 (
INFO  00:19:22,742 - #39 )
INFO  00:19:22,742 - #35 {
INFO  00:19:22,742 - #36 }
INFO  00:19:22,743 - #36 }
INFO  00:19:22,743 - #36 }
INFO  00:19:22,744 - #5 class
INFO  00:19:22,744 - #48 Klasa3
INFO  00:19:22,744 - #35 {
INFO  00:19:22,744 - #36 }
INFO  00:19:22,744 - #5 class
INFO  00:19:22,744 - #48 Klasa4
INFO  00:19:22,744 - #35 {
INFO  00:19:22,744 - #35 {
INFO  00:19:22,744 - #44 void
INFO  00:19:22,744 - #48 bla
INFO  00:19:22,745 - #38 (
INFO  00:19:22,745 - #39 )
INFO  00:19:22,745 - #35 {
INFO  00:19:22,745 - #36 }
INFO  00:19:22,745 - #36 }
INFO  00:19:22,746 - #36 }
INFO  00:19:22,746 - #35 {
INFO  00:19:22,746 - #48 int
INFO  00:19:22,746 - #48 f
INFO  00:19:22,746 - #38 (
INFO  00:19:22,746 - #39 )
INFO  00:19:22,746 - #35 {
INFO  00:19:22,746 - #36 }
INFO  00:19:22,746 - #44 void
INFO  00:19:22,746 - #48 f
INFO  00:19:22,746 - #38 (
INFO  00:19:22,746 - #39 )
INFO  00:19:22,746 - #35 {
INFO  00:19:22,746 - #36 }
INFO  00:19:22,747 - #48 int
INFO  00:19:22,747 - #48 f
INFO  00:19:22,747 - #38 (
INFO  00:19:22,747 - #48 int
INFO  00:19:22,747 - #48 a
INFO  00:19:22,747 - #39 )
INFO  00:19:22,747 - #35 {
INFO  00:19:22,747 - #36 }
INFO  00:19:22,747 - #48 int
INFO  00:19:22,748 - #48 f
INFO  00:19:22,748 - #38 (
INFO  00:19:22,748 - #48 int
INFO  00:19:22,748 - #48 b
INFO  00:19:22,748 - #42 ,
INFO  00:19:22,748 - #48 int
INFO  00:19:22,748 - #48 c
INFO  00:19:22,748 - #45 [
INFO  00:19:22,748 - #46 ]
INFO  00:19:22,748 - #39 )
INFO  00:19:22,748 - #35 {
INFO  00:19:22,748 - #36 }
INFO  00:19:22,749 - #44 void
INFO  00:19:22,749 - #48 main
INFO  00:19:22,749 - #38 (
INFO  00:19:22,749 - #39 )
INFO  00:19:22,749 - #48 int
INFO  00:19:22,749 - #48 x
INFO  00:19:22,749 - #42 ,
INFO  00:19:22,749 - #48 i
INFO  00:19:22,749 - #37 ;
INFO  00:19:22,749 - #48 char
INFO  00:19:22,749 - #48 c
INFO  00:19:22,750 - #37 ;
INFO  00:19:22,750 - #35 {
INFO  00:19:22,750 - #48 val
INFO  00:19:22,750 - #33 =
INFO  00:19:22,752 - #11 new
INFO  00:19:22,753 - #48 Table
INFO  00:19:22,753 - #37 ;
INFO  00:19:22,755 - #48 val
INFO  00:19:22,756 - #30 .
INFO  00:19:22,756 - #48 pos
INFO  00:19:22,756 - #33 =
INFO  00:19:22,756 - #11 new
INFO  00:19:22,756 - #48 int
INFO  00:19:22,756 - #45 [
INFO  00:19:22,756 - #48 size
INFO  00:19:22,756 - #46 ]
INFO  00:19:22,757 - #37 ;
INFO  00:19:22,757 - #48 val
INFO  00:19:22,757 - #30 .
INFO  00:19:22,757 - #48 neg
INFO  00:19:22,757 - #33 =
INFO  00:19:22,757 - #11 new
INFO  00:19:22,757 - #48 int
INFO  00:19:22,758 - #45 [
INFO  00:19:22,758 - #48 size
INFO  00:19:22,758 - #46 ]
INFO  00:19:22,758 - #37 ;
INFO  00:19:22,758 - #48 i
INFO  00:19:22,758 - #33 =
INFO  00:19:22,758 - #47 0
INFO  00:19:22,758 - #37 ;
INFO  00:19:22,758 - #9 do
INFO  00:19:22,758 - #35 {
ERROR 00:19:22,758 - 
Sintaksna greska na liniji 47
INFO  00:19:22,758 - #48 val
INFO  00:19:22,758 - #30 .
INFO  00:19:22,758 - #48 putp
INFO  00:19:22,759 - #38 (
INFO  00:19:22,759 - #47 0
INFO  00:19:22,759 - #42 ,
INFO  00:19:22,759 - #48 i
INFO  00:19:22,759 - #39 )
INFO  00:19:22,759 - #37 ;
INFO  00:19:22,759 - #48 val
INFO  00:19:22,759 - #30 .
INFO  00:19:22,759 - #48 putn
INFO  00:19:22,759 - #38 (
INFO  00:19:22,760 - #47 0
INFO  00:19:22,760 - #42 ,
INFO  00:19:22,760 - #48 i
INFO  00:19:22,760 - #39 )
INFO  00:19:22,760 - #37 ;
INFO  00:19:22,760 - #48 i
INFO  00:19:22,760 - #28 ++
INFO  00:19:22,760 - #37 ;
INFO  00:19:22,760 - #36 }
INFO  00:19:22,760 - #10 while
INFO  00:19:22,761 - #38 (
INFO  00:19:22,761 - #48 i
INFO  00:19:22,761 - #24 <
INFO  00:19:22,761 - #48 size
INFO  00:19:22,761 - #39 )
INFO  00:19:22,761 - #37 ;
INFO  00:19:22,761 - #48 f
INFO  00:19:22,761 - #38 (
INFO  00:19:22,761 - #48 c
INFO  00:19:22,761 - #42 ,
INFO  00:19:22,761 - #48 x
INFO  00:19:22,761 - #42 ,
INFO  00:19:22,761 - #48 i
INFO  00:19:22,762 - #39 )
INFO  00:19:22,762 - #37 ;
INFO  00:19:22,762 - #12 read
INFO  00:19:22,762 - #38 (
INFO  00:19:22,762 - #48 x
INFO  00:19:22,762 - #39 )
INFO  00:19:22,762 - #37 ;
INFO  00:19:22,762 - #9 do
INFO  00:19:22,762 - #35 {
INFO  00:19:22,762 - #49 if
INFO  00:19:22,762 - #38 (
INFO  00:19:22,762 - #48 x
INFO  00:19:22,762 - #25 <=
INFO  00:19:22,762 - #47 0
INFO  00:19:22,762 - #39 )
INFO  00:19:22,762 - #4 break
INFO  00:19:22,762 - #37 ;
INFO  00:19:22,762 - #49 if
INFO  00:19:22,762 - #38 (
INFO  00:19:22,762 - #47 0
INFO  00:19:22,763 - #25 <=
INFO  00:19:22,763 - #48 x
INFO  00:19:22,763 - #26 &&
INFO  00:19:22,764 - #48 x
INFO  00:19:22,764 - #24 <
INFO  00:19:22,764 - #48 size
INFO  00:19:22,764 - #39 )
INFO  00:19:22,764 - #35 {
INFO  00:19:22,764 - #48 val
INFO  00:19:22,764 - #30 .
INFO  00:19:22,764 - #48 putp
INFO  00:19:22,764 - #38 (
INFO  00:19:22,764 - #48 val
INFO  00:19:22,764 - #30 .
INFO  00:19:22,764 - #48 getp
INFO  00:19:22,764 - #38 (
INFO  00:19:22,764 - #48 x
INFO  00:19:22,764 - #39 )
INFO  00:19:22,764 - #41 +
INFO  00:19:22,764 - #47 1
INFO  00:19:22,764 - #39 )
INFO  00:19:22,764 - #37 ;
INFO  00:19:22,764 - #36 }
INFO  00:19:22,764 - #50 else
INFO  00:19:22,764 - #49 if
INFO  00:19:22,764 - #38 (
INFO  00:19:22,765 - #16 -
INFO  00:19:22,765 - #48 size
INFO  00:19:22,765 - #24 <
INFO  00:19:22,765 - #48 x
INFO  00:19:22,765 - #26 &&
INFO  00:19:22,765 - #48 x
INFO  00:19:22,765 - #24 <
INFO  00:19:22,765 - #47 0
INFO  00:19:22,765 - #39 )
INFO  00:19:22,765 - #35 {
INFO  00:19:22,765 - #48 val
INFO  00:19:22,765 - #30 .
INFO  00:19:22,765 - #48 putn
INFO  00:19:22,765 - #38 (
INFO  00:19:22,765 - #48 val
INFO  00:19:22,765 - #30 .
INFO  00:19:22,765 - #48 getn
INFO  00:19:22,765 - #38 (
INFO  00:19:22,765 - #16 -
INFO  00:19:22,765 - #48 x
INFO  00:19:22,766 - #39 )
INFO  00:19:22,766 - #41 +
INFO  00:19:22,766 - #47 1
INFO  00:19:22,766 - #39 )
INFO  00:19:22,766 - #37 ;
INFO  00:19:22,766 - #36 }
INFO  00:19:22,766 - #12 read
INFO  00:19:22,766 - #38 (
INFO  00:19:22,766 - #48 x
INFO  00:19:22,766 - #39 )
INFO  00:19:22,766 - #37 ;
INFO  00:19:22,766 - #36 }
INFO  00:19:22,766 - #10 while
INFO  00:19:22,766 - #38 (
INFO  00:19:22,766 - #3 true
INFO  00:19:22,766 - #39 )
INFO  00:19:22,766 - #37 ;
INFO  00:19:22,767 - #36 }
INFO  00:19:22,767 - #36 }
ERROR 00:19:22,767 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 73
