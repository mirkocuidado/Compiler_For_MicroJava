INFO  23:24:54,805 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  23:24:54,857 - #34 program
INFO  23:24:54,857 - #48 MJProgram
INFO  23:24:54,857 - #48 int
INFO  23:24:54,858 - #37 ;
ERROR 23:24:54,858 - 
Sintaksna greska na liniji 2
INFO  23:24:54,858 - #48 int
INFO  23:24:54,858 - #48 t
INFO  23:24:54,858 - #48 a
ERROR 23:24:54,859 - Successful error recovery by parser on line 8 -> Variable Declaration Semi
ERROR 23:24:54,860 - 
Sintaksna greska na liniji 3
INFO  23:24:54,860 - #42 ,
INFO  23:24:54,860 - #48 b
INFO  23:24:54,860 - #42 ,
INFO  23:24:54,861 - #48 c
ERROR 23:24:54,861 - Successful error recovery by parser on line 3 -> Variable Declaration Comma
INFO  23:24:54,862 - #37 ;
INFO  23:24:54,862 - #48 int
INFO  23:24:54,862 - #48 a
INFO  23:24:54,862 - #42 ,
INFO  23:24:54,862 - #48 x
INFO  23:24:54,862 - #42 ,
INFO  23:24:54,862 - #48 dd
INFO  23:24:54,862 - #42 ,
INFO  23:24:54,862 - #48 b
INFO  23:24:54,862 - #42 ,
INFO  23:24:54,862 - #48 c
INFO  23:24:54,862 - #37 ;
INFO  23:24:54,862 - #35 {
INFO  23:24:54,863 - #44 void
INFO  23:24:54,863 - #48 main
INFO  23:24:54,864 - #38 (
INFO  23:24:54,864 - #39 )
INFO  23:24:54,864 - #35 {
INFO  23:24:54,865 - #49 if
INFO  23:24:54,866 - #38 (
INFO  23:24:54,866 - #48 a
INFO  23:24:54,866 - #20 ==
INFO  23:24:54,868 - #39 )
ERROR 23:24:54,868 - 
Sintaksna greska na liniji 10
INFO  23:24:54,868 - #35 {
INFO  23:24:54,869 - #48 z
INFO  23:24:54,869 - #33 =
ERROR 23:24:54,869 - Successful error recovery by parser on line 10 -> ConditionOptional
INFO  23:24:54,869 - #47 2
INFO  23:24:54,870 - #37 ;
INFO  23:24:54,871 - #36 }
INFO  23:24:54,871 - #36 }
INFO  23:24:54,871 - #36 }
INFO  23:24:54,873 - Program(
 MJProgram
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclYesError(
          ) [VarDeclYesError]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListClass(
              ErrorVarList(
              ) [ErrorVarList]
              VarClassNoArray(
               b
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             c
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         int
        ) [Type]
        VarListClass(
          VarListClass(
            VarListClass(
              VarListClass(
                VarListSingle(
                  VarClassNoArray(
                   a
                  ) [VarClassNoArray]
                ) [VarListSingle]
                VarClassNoArray(
                 x
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               dd
              ) [VarClassNoArray]
            ) [VarListClass]
            VarClassNoArray(
             b
            ) [VarClassNoArray]
          ) [VarListClass]
          VarClassNoArray(
           c
          ) [VarClassNoArray]
        ) [VarListClass]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
      ) [ReturnValueClassVoid]
     main
      NoFormParam(
      ) [NoFormParam]
      NoVarDeclList(
      ) [NoVarDeclList]
      Statements(
        NoStmt(
        ) [NoStmt]
        IfStatement(
          IfConditionNoError(
            IfConditionYesErrorTwo(
            ) [IfConditionYesErrorTwo]
          ) [IfConditionNoError]
          StatementStatement(
            Statements(
              NoStmt(
              ) [NoStmt]
              Assignment(
                DesignatorStatementClass(
                  Designator(
                   z
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  DesignatorStatementOptionsClassAssignExpression(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             2
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [DesignatorStatementClass]
              ) [Assignment]
            ) [Statements]
          ) [StatementStatement]
          NoOptionalStatement(
          ) [NoOptionalStatement]
        ) [IfStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:24:54,874 - ===================================
