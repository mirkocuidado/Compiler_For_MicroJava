INFO  22:50:26,409 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  22:50:26,486 - #2 program
INFO  22:50:26,486 - #43 MJProgram
INFO  22:50:26,486 - #35 {
INFO  22:50:26,487 - #5 void
INFO  22:50:26,488 - #43 main
INFO  22:50:26,488 - #37 (
INFO  22:50:26,488 - #38 )
INFO  22:50:26,489 - #43 bool
INFO  22:50:26,490 - #43 e
INFO  22:50:26,490 - #33 ;
INFO  22:50:26,490 - #43 char
INFO  22:50:26,491 - #43 pr
INFO  22:50:26,491 - #33 ;
INFO  22:50:26,491 - #43 bool
INFO  22:50:26,491 - #43 k
INFO  22:50:26,491 - #33 ;
INFO  22:50:26,491 - #43 bool
INFO  22:50:26,491 - #43 prr
INFO  22:50:26,491 - #33 ;
INFO  22:50:26,491 - #43 int
INFO  22:50:26,492 - #43 c
INFO  22:50:26,502 - #33 ;
INFO  22:50:26,502 - #43 int
INFO  22:50:26,502 - #43 r
INFO  22:50:26,502 - #33 ;
INFO  22:50:26,502 - #43 int
INFO  22:50:26,502 - #43 a
INFO  22:50:26,502 - #31 ,
INFO  22:50:26,502 - #43 b
INFO  22:50:26,502 - #33 ;
INFO  22:50:26,503 - #35 {
INFO  22:50:26,503 - #43 e
INFO  22:50:26,506 - #19 =
INFO  22:50:26,508 - #45 false
INFO  22:50:26,509 - #33 ;
INFO  22:50:26,511 - #43 pr
INFO  22:50:26,512 - #19 =
INFO  22:50:26,512 - #45 true
INFO  22:50:26,512 - #34 ?
INFO  22:50:26,512 - #37 (
INFO  22:50:26,513 - #43 e
INFO  22:50:26,514 - #34 ?
INFO  22:50:26,514 - #44 k
INFO  22:50:26,514 - #32 :
INFO  22:50:26,514 - #44 a
INFO  22:50:26,516 - #38 )
INFO  22:50:26,516 - #32 :
INFO  22:50:26,516 - #44 b
INFO  22:50:26,516 - #33 ;
INFO  22:50:26,516 - #18 print
INFO  22:50:26,517 - #37 (
INFO  22:50:26,517 - #43 pr
INFO  22:50:26,517 - #38 )
INFO  22:50:26,518 - #33 ;
INFO  22:50:26,518 - #43 k
INFO  22:50:26,518 - #19 =
INFO  22:50:26,518 - #45 true
INFO  22:50:26,518 - #33 ;
INFO  22:50:26,518 - #43 prr
INFO  22:50:26,519 - #19 =
INFO  22:50:26,519 - #45 false
INFO  22:50:26,519 - #33 ;
INFO  22:50:26,519 - #43 c
INFO  22:50:26,519 - #19 =
INFO  22:50:26,519 - #42 2
INFO  22:50:26,519 - #33 ;
INFO  22:50:26,519 - #43 r
INFO  22:50:26,520 - #19 =
INFO  22:50:26,520 - #42 4
INFO  22:50:26,520 - #33 ;
INFO  22:50:26,520 - #14 if
INFO  22:50:26,520 - #37 (
INFO  22:50:26,520 - #43 a
INFO  22:50:26,520 - #24 >=
INFO  22:50:26,520 - #43 b
INFO  22:50:26,521 - #26 &&
INFO  22:50:26,522 - #43 k
INFO  22:50:26,523 - #27 ||
INFO  22:50:26,524 - #43 e
INFO  22:50:26,525 - #26 &&
INFO  22:50:26,526 - #43 k
INFO  22:50:26,526 - #38 )
INFO  22:50:26,526 - #35 {
INFO  22:50:26,526 - #43 c
INFO  22:50:26,526 - #19 =
INFO  22:50:26,526 - #42 5
INFO  22:50:26,526 - #33 ;
INFO  22:50:26,526 - #14 if
INFO  22:50:26,526 - #37 (
INFO  22:50:26,526 - #43 prr
INFO  22:50:26,526 - #38 )
INFO  22:50:26,526 - #35 {
INFO  22:50:26,527 - #43 c
INFO  22:50:26,527 - #19 =
INFO  22:50:26,527 - #42 4
INFO  22:50:26,527 - #33 ;
INFO  22:50:26,527 - #36 }
INFO  22:50:26,527 - #15 else
INFO  22:50:26,528 - #35 {
INFO  22:50:26,528 - #43 c
INFO  22:50:26,528 - #19 =
INFO  22:50:26,528 - #42 3
INFO  22:50:26,528 - #33 ;
INFO  22:50:26,528 - #36 }
INFO  22:50:26,528 - #36 }
INFO  22:50:26,529 - #15 else
INFO  22:50:26,529 - #35 {
INFO  22:50:26,529 - #43 c
INFO  22:50:26,529 - #19 =
INFO  22:50:26,529 - #42 9
INFO  22:50:26,529 - #33 ;
INFO  22:50:26,529 - #36 }
INFO  22:50:26,529 - #36 }
INFO  22:50:26,529 - #36 }
INFO  22:50:26,539 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  NoGroupDecl(
  ) [NoGroupDecl]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  VarDeclListClass(
                    NoVarDeclList(
                    ) [NoVarDeclList]
                    VarDeclClass(
                      Type(
                       bool
                      ) [Type]
                      VarListSingle(
                        VarClassNoArray(
                         e
                        ) [VarClassNoArray]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [VarDeclListClass]
                  VarDeclClass(
                    Type(
                     char
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       pr
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   bool
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     k
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 bool
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   prr
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               r
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListClass(
            VarListSingle(
              VarClassNoArray(
               a
              ) [VarClassNoArray]
            ) [VarListSingle]
            VarClassNoArray(
             b
            ) [VarClassNoArray]
          ) [VarListClass]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      Assignment(
                        DesignatorStatementOptionsClassAssignExpression(
                          Designator(
                            DesigIdent(
                             e
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  BooleanClassConstFactor(
                                   false
                                  ) [BooleanClassConstFactor]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [Assignment]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           pr
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassTwoClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                BooleanClassConstFactor(
                                 true
                                ) [BooleanClassConstFactor]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                          TernaryClass(
                          ) [TernaryClass]
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                ParenFactorClass(
                                  ClassTwoClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               e
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                    TernaryClass(
                                    ) [TernaryClass]
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          CharConst(
                                           k
                                          ) [CharConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                    ColonClass(
                                    ) [ColonClass]
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          CharConst(
                                           a
                                          ) [CharConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassTwoClass]
                                ) [ParenFactorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                          ColonClass(
                          ) [ColonClass]
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                CharConst(
                                 b
                                ) [CharConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassTwoClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 pr
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       k
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            BooleanClassConstFactor(
                             true
                            ) [BooleanClassConstFactor]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     prr
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          BooleanClassConstFactor(
                           false
                          ) [BooleanClassConstFactor]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                  DesigIdent(
                   c
                  ) [DesigIdent]
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        NumberConst(
                         2
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          Assignment(
            DesignatorStatementOptionsClassAssignExpression(
              Designator(
                DesigIdent(
                 r
                ) [DesigIdent]
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       4
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [Assignment]
        ) [Statements]
        IfStatement(
          IfConditionNoError(
            ConditionClass(
              CondTermClass(
                CondFactClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                            DesigIdent(
                             a
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                        ) [DesignatorClass]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                  CondFactOptionalClass(
                    GreaterOrEqualOperationClass(
                    ) [GreaterOrEqualOperationClass]
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               b
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [CondFactOptionalClass]
                ) [CondFactClass]
                CondTermOptionalClass(
                  NoCondTermOptionalClass(
                  ) [NoCondTermOptionalClass]
                  FakeAndClass(
                  ) [FakeAndClass]
                  CondFactClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               k
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                    NoCondFactOptionalClass(
                    ) [NoCondFactOptionalClass]
                  ) [CondFactClass]
                ) [CondTermOptionalClass]
              ) [CondTermClass]
              ConditionOptionalClass(
                NoConditionOptionalClass(
                ) [NoConditionOptionalClass]
                FakeOrClass(
                ) [FakeOrClass]
                CondTermClass(
                  CondFactClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               e
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                    NoCondFactOptionalClass(
                    ) [NoCondFactOptionalClass]
                  ) [CondFactClass]
                  CondTermOptionalClass(
                    NoCondTermOptionalClass(
                    ) [NoCondTermOptionalClass]
                    FakeAndClass(
                    ) [FakeAndClass]
                    CondFactClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 k
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                      NoCondFactOptionalClass(
                      ) [NoCondFactOptionalClass]
                    ) [CondFactClass]
                  ) [CondTermOptionalClass]
                ) [CondTermClass]
              ) [ConditionOptionalClass]
            ) [ConditionClass]
          ) [IfConditionNoError]
          StatementStatement(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       c
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             5
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              IfStatement(
                IfConditionNoError(
                  ConditionClass(
                    CondTermClass(
                      CondFactClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   prr
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                        NoCondFactOptionalClass(
                        ) [NoCondFactOptionalClass]
                      ) [CondFactClass]
                      NoCondTermOptionalClass(
                      ) [NoCondTermOptionalClass]
                    ) [CondTermClass]
                    NoConditionOptionalClass(
                    ) [NoConditionOptionalClass]
                  ) [ConditionClass]
                ) [IfConditionNoError]
                StatementStatement(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           c
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 4
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                ) [StatementStatement]
                Empty(
                ) [Empty]
                YesOptionalStatement(
                  StatementStatement(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      Assignment(
                        DesignatorStatementOptionsClassAssignExpression(
                          Designator(
                            DesigIdent(
                             c
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [Assignment]
                    ) [Statements]
                  ) [StatementStatement]
                ) [YesOptionalStatement]
              ) [IfStatement]
            ) [Statements]
          ) [StatementStatement]
          Empty(
          ) [Empty]
          YesOptionalStatement(
            StatementStatement(
              Statements(
                NoStmt(
                ) [NoStmt]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       c
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             9
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
            ) [StatementStatement]
          ) [YesOptionalStatement]
        ) [IfStatement]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:50:26,541 - ===================================
INFO  22:50:26,545 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  22:50:26,545 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 4
INFO  22:50:26,546 - VARIABLE e IS BEING DEFINED! ON LINE 5
INFO  22:50:26,546 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 5
INFO  22:50:26,546 - VARIABLE pr IS BEING DEFINED! ON LINE 6
INFO  22:50:26,546 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 6
INFO  22:50:26,546 - VARIABLE k IS BEING DEFINED! ON LINE 7
INFO  22:50:26,546 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 7
INFO  22:50:26,546 - VARIABLE prr IS BEING DEFINED! ON LINE 8
INFO  22:50:26,546 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 8
INFO  22:50:26,546 - VARIABLE c IS BEING DEFINED! ON LINE 9
INFO  22:50:26,547 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  22:50:26,547 - VARIABLE r IS BEING DEFINED! ON LINE 10
INFO  22:50:26,547 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 10
INFO  22:50:26,547 - VARIABLE a IS BEING DEFINED! ON LINE 11
INFO  22:50:26,547 - VARIABLE b IS BEING DEFINED! ON LINE 11
INFO  22:50:26,547 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 11
INFO  22:50:26,547 - METHOD BODY STARTING!
INFO  22:50:26,547 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:50:26,547 - BEGINNING OF AN ASSIGNEMENT! ON LINE 14
INFO  22:50:26,547 - CONST CHAR false ON LINE 14
INFO  22:50:26,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  22:50:26,547 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 14
INFO  22:50:26,547 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 14
INFO  22:50:26,548 - CURRENT VARIABLE IN USE IS pr AND IT IS OF TYPE char
INFO  22:50:26,548 - BEGINNING OF AN ASSIGNEMENT! ON LINE 15
INFO  22:50:26,548 - CONST CHAR true ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:50:26,548 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - CONST CHAR k ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - CONST CHAR a ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - SUCCESSFUL TERNARY! TYPES: char AND char ! ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,548 - CONST CHAR b ON LINE 15
INFO  22:50:26,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 15
INFO  22:50:26,549 - SUCCESSFUL TERNARY! TYPES: char AND char ! ON LINE 15
INFO  22:50:26,549 - SUCCESSFUL ASSIGNEMENT! TYPES: char AND char ! ON LINE 15
INFO  22:50:26,549 - CURRENT VARIABLE IN USE IS pr AND IT IS OF TYPE char
INFO  22:50:26,549 - WE ARE USING A VARIABLE OF TYPE char ON LINE 16
INFO  22:50:26,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  22:50:26,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  22:50:26,549 - PRINT FUNCTION CALL IN USE! ON LINE 16
INFO  22:50:26,549 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:50:26,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 18
INFO  22:50:26,549 - CONST CHAR true ON LINE 18
INFO  22:50:26,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  22:50:26,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 18
INFO  22:50:26,549 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 18
INFO  22:50:26,549 - CURRENT VARIABLE IN USE IS prr AND IT IS OF TYPE boolean
INFO  22:50:26,549 - BEGINNING OF AN ASSIGNEMENT! ON LINE 19
INFO  22:50:26,549 - CONST CHAR false ON LINE 19
INFO  22:50:26,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:50:26,549 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  22:50:26,549 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 19
INFO  22:50:26,549 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:50:26,550 - BEGINNING OF AN ASSIGNEMENT! ON LINE 20
INFO  22:50:26,550 - CONST NUMBER 2 ON LINE 20
INFO  22:50:26,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:50:26,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  22:50:26,550 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 20
INFO  22:50:26,550 - CURRENT VARIABLE IN USE IS r AND IT IS OF TYPE int
INFO  22:50:26,550 - BEGINNING OF AN ASSIGNEMENT! ON LINE 21
INFO  22:50:26,550 - CONST NUMBER 4 ON LINE 21
INFO  22:50:26,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  22:50:26,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 21
INFO  22:50:26,550 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 21
INFO  22:50:26,550 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE int
INFO  22:50:26,550 - WE ARE USING A VARIABLE OF TYPE int ON LINE 22
INFO  22:50:26,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,550 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  22:50:26,550 - WE ARE USING A VARIABLE OF TYPE int ON LINE 22
INFO  22:50:26,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,550 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,550 - USING TWO EXPRESSIONS OF TYPE int ON LINE 22
INFO  22:50:26,550 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:50:26,551 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 22
INFO  22:50:26,551 - CURRENT VARIABLE IN USE IS e AND IT IS OF TYPE boolean
INFO  22:50:26,551 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 22
INFO  22:50:26,551 - CURRENT VARIABLE IN USE IS k AND IT IS OF TYPE boolean
INFO  22:50:26,551 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  22:50:26,551 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 22
INFO  22:50:26,551 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:50:26,552 - BEGINNING OF AN ASSIGNEMENT! ON LINE 23
INFO  22:50:26,552 - CONST NUMBER 5 ON LINE 23
INFO  22:50:26,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:50:26,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 23
INFO  22:50:26,552 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 23
INFO  22:50:26,552 - CURRENT VARIABLE IN USE IS prr AND IT IS OF TYPE boolean
INFO  22:50:26,552 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 24
INFO  22:50:26,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 24
INFO  22:50:26,552 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 24
INFO  22:50:26,552 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 24
INFO  22:50:26,552 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:50:26,553 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  22:50:26,553 - CONST NUMBER 4 ON LINE 25
INFO  22:50:26,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  22:50:26,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  22:50:26,553 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  22:50:26,553 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:50:26,553 - BEGINNING OF AN ASSIGNEMENT! ON LINE 27
INFO  22:50:26,553 - CONST NUMBER 3 ON LINE 27
INFO  22:50:26,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  22:50:26,553 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  22:50:26,553 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 27
INFO  22:50:26,553 - CURRENT VARIABLE IN USE IS c AND IT IS OF TYPE int
INFO  22:50:26,553 - BEGINNING OF AN ASSIGNEMENT! ON LINE 30
INFO  22:50:26,553 - CONST NUMBER 9 ON LINE 30
INFO  22:50:26,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  22:50:26,554 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  22:50:26,554 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 30
INFO  22:50:26,554 - METHOD BODY ENDING!
INFO  22:50:26,554 - END OF DEFINING FUNCTION main
INFO  22:50:26,554 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  22:50:26,554 -  Deklarisanih promenljivih ima = 8
INFO  22:50:26,554 - ===================================
INFO  22:50:26,560 - Parsiranje uspesno zavrseno!
