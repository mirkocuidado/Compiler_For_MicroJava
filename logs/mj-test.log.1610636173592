INFO  15:55:52,182 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  15:55:52,249 - #2 program
INFO  15:55:52,249 - #43 MJProgram
INFO  15:55:52,249 - #43 int
INFO  15:55:52,251 - #43 a
INFO  15:55:52,251 - #31 ,
INFO  15:55:52,252 - #43 b
INFO  15:55:52,252 - #31 ,
INFO  15:55:52,252 - #43 c
INFO  15:55:52,252 - #31 ,
INFO  15:55:52,252 - #43 d
INFO  15:55:52,252 - #33 ;
INFO  15:55:52,252 - #9 const
INFO  15:55:52,253 - #43 int
INFO  15:55:52,253 - #43 term
INFO  15:55:52,253 - #19 =
INFO  15:55:52,253 - #42 0
INFO  15:55:52,253 - #33 ;
INFO  15:55:52,254 - #9 const
INFO  15:55:52,254 - #43 int
INFO  15:55:52,254 - #43 y
INFO  15:55:52,254 - #19 =
INFO  15:55:52,264 - #42 3
INFO  15:55:52,264 - #33 ;
INFO  15:55:52,264 - #35 {
INFO  15:55:52,264 - #43 int
INFO  15:55:52,265 - #43 k
INFO  15:55:52,266 - #37 (
INFO  15:55:52,266 - #43 int
INFO  15:55:52,266 - #43 a
INFO  15:55:52,266 - #31 ,
INFO  15:55:52,266 - #43 int
INFO  15:55:52,266 - #43 b
INFO  15:55:52,266 - #38 )
INFO  15:55:52,267 - #35 {
INFO  15:55:52,267 - #41 return
INFO  15:55:52,269 - #43 b
INFO  15:55:52,270 - #33 ;
INFO  15:55:52,273 - #36 }
INFO  15:55:52,274 - #5 void
INFO  15:55:52,275 - #43 main
INFO  15:55:52,275 - #37 (
INFO  15:55:52,276 - #38 )
INFO  15:55:52,276 - #43 int
INFO  15:55:52,276 - #43 x
INFO  15:55:52,277 - #33 ;
INFO  15:55:52,277 - #43 bool
INFO  15:55:52,277 - #43 p
INFO  15:55:52,277 - #33 ;
INFO  15:55:52,277 - #43 bool
INFO  15:55:52,277 - #43 r
INFO  15:55:52,277 - #33 ;
INFO  15:55:52,277 - #43 bool
INFO  15:55:52,277 - #43 q
INFO  15:55:52,277 - #33 ;
INFO  15:55:52,277 - #43 int
INFO  15:55:52,277 - #43 dd
INFO  15:55:52,278 - #33 ;
INFO  15:55:52,278 - #43 int
INFO  15:55:52,278 - #43 ee
INFO  15:55:52,278 - #33 ;
INFO  15:55:52,278 - #43 int
INFO  15:55:52,278 - #43 ff
INFO  15:55:52,278 - #33 ;
INFO  15:55:52,278 - #43 int
INFO  15:55:52,278 - #43 gg
INFO  15:55:52,278 - #33 ;
INFO  15:55:52,278 - #43 char
INFO  15:55:52,278 - #43 hh
INFO  15:55:52,278 - #33 ;
INFO  15:55:52,279 - #43 int
INFO  15:55:52,279 - #43 ii
INFO  15:55:52,279 - #33 ;
INFO  15:55:52,279 - #35 {
INFO  15:55:52,279 - #43 x
INFO  15:55:52,279 - #19 =
INFO  15:55:52,279 - #42 3
INFO  15:55:52,280 - #33 ;
INFO  15:55:52,281 - #43 dd
INFO  15:55:52,281 - #19 =
INFO  15:55:52,281 - #42 6
INFO  15:55:52,281 - #33 ;
INFO  15:55:52,281 - #14 if
INFO  15:55:52,281 - #37 (
INFO  15:55:52,281 - #43 x
INFO  15:55:52,281 - #23 <
INFO  15:55:52,281 - #43 dd
INFO  15:55:52,282 - #38 )
INFO  15:55:52,284 - #35 {
INFO  15:55:52,284 - #14 if
INFO  15:55:52,284 - #37 (
INFO  15:55:52,284 - #43 x
INFO  15:55:52,284 - #20 ==
INFO  15:55:52,285 - #42 3
INFO  15:55:52,285 - #38 )
INFO  15:55:52,285 - #35 {
INFO  15:55:52,285 - #18 print
INFO  15:55:52,285 - #37 (
INFO  15:55:52,286 - #44 d
INFO  15:55:52,286 - #38 )
INFO  15:55:52,286 - #33 ;
INFO  15:55:52,287 - #18 print
INFO  15:55:52,287 - #37 (
INFO  15:55:52,287 - #44 a
INFO  15:55:52,287 - #38 )
INFO  15:55:52,287 - #33 ;
INFO  15:55:52,287 - #36 }
INFO  15:55:52,288 - #14 if
INFO  15:55:52,289 - #37 (
INFO  15:55:52,289 - #43 dd
INFO  15:55:52,289 - #21 !=
INFO  15:55:52,290 - #42 5
INFO  15:55:52,290 - #38 )
INFO  15:55:52,290 - #35 {
INFO  15:55:52,291 - #18 print
INFO  15:55:52,291 - #37 (
INFO  15:55:52,291 - #44 d
INFO  15:55:52,291 - #38 )
INFO  15:55:52,291 - #33 ;
INFO  15:55:52,291 - #18 print
INFO  15:55:52,291 - #37 (
INFO  15:55:52,291 - #44 a
INFO  15:55:52,291 - #38 )
INFO  15:55:52,291 - #33 ;
INFO  15:55:52,291 - #36 }
INFO  15:55:52,291 - #14 if
INFO  15:55:52,291 - #37 (
INFO  15:55:52,292 - #43 x
INFO  15:55:52,292 - #22 >
INFO  15:55:52,292 - #42 2
INFO  15:55:52,292 - #38 )
INFO  15:55:52,293 - #35 {
INFO  15:55:52,293 - #18 print
INFO  15:55:52,293 - #37 (
INFO  15:55:52,293 - #44 d
INFO  15:55:52,293 - #38 )
INFO  15:55:52,293 - #33 ;
INFO  15:55:52,293 - #18 print
INFO  15:55:52,293 - #37 (
INFO  15:55:52,293 - #44 a
INFO  15:55:52,293 - #38 )
INFO  15:55:52,293 - #33 ;
INFO  15:55:52,293 - #36 }
INFO  15:55:52,293 - #14 if
INFO  15:55:52,293 - #37 (
INFO  15:55:52,293 - #43 dd
INFO  15:55:52,293 - #23 <
INFO  15:55:52,293 - #42 7
INFO  15:55:52,294 - #38 )
INFO  15:55:52,294 - #35 {
INFO  15:55:52,294 - #18 print
INFO  15:55:52,294 - #37 (
INFO  15:55:52,294 - #44 d
INFO  15:55:52,294 - #38 )
INFO  15:55:52,294 - #33 ;
INFO  15:55:52,294 - #18 print
INFO  15:55:52,294 - #37 (
INFO  15:55:52,294 - #44 a
INFO  15:55:52,294 - #38 )
INFO  15:55:52,294 - #33 ;
INFO  15:55:52,294 - #36 }
INFO  15:55:52,294 - #14 if
INFO  15:55:52,294 - #37 (
INFO  15:55:52,294 - #43 dd
INFO  15:55:52,294 - #25 <=
INFO  15:55:52,294 - #42 6
INFO  15:55:52,295 - #38 )
INFO  15:55:52,295 - #35 {
INFO  15:55:52,295 - #18 print
INFO  15:55:52,295 - #37 (
INFO  15:55:52,295 - #44 d
INFO  15:55:52,296 - #38 )
INFO  15:55:52,296 - #33 ;
INFO  15:55:52,296 - #18 print
INFO  15:55:52,296 - #37 (
INFO  15:55:52,296 - #44 a
INFO  15:55:52,296 - #38 )
INFO  15:55:52,296 - #33 ;
INFO  15:55:52,296 - #36 }
INFO  15:55:52,296 - #14 if
INFO  15:55:52,296 - #37 (
INFO  15:55:52,296 - #43 x
INFO  15:55:52,296 - #24 >=
INFO  15:55:52,296 - #42 3
INFO  15:55:52,297 - #38 )
INFO  15:55:52,297 - #35 {
INFO  15:55:52,297 - #18 print
INFO  15:55:52,297 - #37 (
INFO  15:55:52,298 - #44 d
INFO  15:55:52,298 - #38 )
INFO  15:55:52,298 - #33 ;
INFO  15:55:52,298 - #18 print
INFO  15:55:52,298 - #37 (
INFO  15:55:52,298 - #44 a
INFO  15:55:52,298 - #38 )
INFO  15:55:52,298 - #33 ;
INFO  15:55:52,298 - #36 }
INFO  15:55:52,298 - #36 }
INFO  15:55:52,298 - #15 else
INFO  15:55:52,298 - #35 {
INFO  15:55:52,298 - #18 print
INFO  15:55:52,298 - #37 (
INFO  15:55:52,298 - #42 3
INFO  15:55:52,299 - #38 )
INFO  15:55:52,299 - #33 ;
INFO  15:55:52,299 - #36 }
INFO  15:55:52,299 - #43 x
INFO  15:55:52,299 - #19 =
INFO  15:55:52,299 - #42 10
INFO  15:55:52,299 - #33 ;
INFO  15:55:52,299 - #12 do
INFO  15:55:52,299 - #35 {
INFO  15:55:52,300 - #18 print
INFO  15:55:52,301 - #37 (
INFO  15:55:52,301 - #44 x
INFO  15:55:52,301 - #38 )
INFO  15:55:52,301 - #33 ;
INFO  15:55:52,301 - #18 print
INFO  15:55:52,301 - #37 (
INFO  15:55:52,301 - #44 =
INFO  15:55:52,301 - #38 )
INFO  15:55:52,301 - #33 ;
INFO  15:55:52,301 - #18 print
INFO  15:55:52,301 - #37 (
INFO  15:55:52,301 - #43 x
INFO  15:55:52,301 - #38 )
INFO  15:55:52,301 - #33 ;
INFO  15:55:52,301 - #18 print
INFO  15:55:52,301 - #37 (
INFO  15:55:52,302 - #44  
INFO  15:55:52,302 - #38 )
INFO  15:55:52,302 - #33 ;
INFO  15:55:52,302 - #43 x
INFO  15:55:52,302 - #29 --
INFO  15:55:52,302 - #33 ;
INFO  15:55:52,302 - #36 }
INFO  15:55:52,302 - #13 while
INFO  15:55:52,302 - #37 (
INFO  15:55:52,302 - #43 x
INFO  15:55:52,303 - #24 >=
INFO  15:55:52,303 - #42 0
INFO  15:55:52,303 - #38 )
INFO  15:55:52,304 - #33 ;
INFO  15:55:52,306 - #36 }
INFO  15:55:52,306 - #36 }
INFO  15:55:52,318 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListSingle(
                    VarClassNoArray(
                     a
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                  VarClassNoArray(
                   b
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               d
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           int
          ) [Type]
          ConstListSingle(
            ConstListNoArray(
             term
              ValuesNumber(
               0
              ) [ValuesNumber]
            ) [ConstListNoArray]
          ) [ConstListSingle]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassNoArray(
              Type(
               int
              ) [Type]
             b
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         b
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  VarDeclListClass(
                    VarDeclListClass(
                      VarDeclListClass(
                        VarDeclListClass(
                          NoVarDeclList(
                          ) [NoVarDeclList]
                          VarDeclClass(
                            Type(
                             int
                            ) [Type]
                            VarListSingle(
                              VarClassNoArray(
                               x
                              ) [VarClassNoArray]
                            ) [VarListSingle]
                          ) [VarDeclClass]
                        ) [VarDeclListClass]
                        VarDeclClass(
                          Type(
                           bool
                          ) [Type]
                          VarListSingle(
                            VarClassNoArray(
                             p
                            ) [VarClassNoArray]
                          ) [VarListSingle]
                        ) [VarDeclClass]
                      ) [VarDeclListClass]
                      VarDeclClass(
                        Type(
                         bool
                        ) [Type]
                        VarListSingle(
                          VarClassNoArray(
                           r
                          ) [VarClassNoArray]
                        ) [VarListSingle]
                      ) [VarDeclClass]
                    ) [VarDeclListClass]
                    VarDeclClass(
                      Type(
                       bool
                      ) [Type]
                      VarListSingle(
                        VarClassNoArray(
                         q
                        ) [VarClassNoArray]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [VarDeclListClass]
                  VarDeclClass(
                    Type(
                     int
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       dd
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     ee
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   ff
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 gg
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               hh
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             ii
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       x
                      ) [DesigIdent]
                      NoOptionalDesignatorClass(
                      ) [NoOptionalDesignatorClass]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             3
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     dd
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          NumberConst(
                           6
                          ) [NumberConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            IfStatement(
              IfConditionNoError(
                ConditionClass(
                  CondTermClass(
                    CondFactClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 x
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                      CondFactOptionalClass(
                        LessOperationClass(
                        ) [LessOperationClass]
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   dd
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [CondFactOptionalClass]
                    ) [CondFactClass]
                    NoCondTermOptionalClass(
                    ) [NoCondTermOptionalClass]
                  ) [CondTermClass]
                  NoConditionOptionalClass(
                  ) [NoConditionOptionalClass]
                ) [ConditionClass]
              ) [IfConditionNoError]
              StatementStatement(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            IfStatement(
                              IfConditionNoError(
                                ConditionClass(
                                  CondTermClass(
                                    CondFactClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 x
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                      CondFactOptionalClass(
                                        RelationOperationClassEqualComparation(
                                        ) [RelationOperationClassEqualComparation]
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              NumberConst(
                                               3
                                              ) [NumberConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [CondFactOptionalClass]
                                    ) [CondFactClass]
                                    NoCondTermOptionalClass(
                                    ) [NoCondTermOptionalClass]
                                  ) [CondTermClass]
                                  NoConditionOptionalClass(
                                  ) [NoConditionOptionalClass]
                                ) [ConditionClass]
                              ) [IfConditionNoError]
                              StatementStatement(
                                Statements(
                                  Statements(
                                    NoStmt(
                                    ) [NoStmt]
                                    PrintStmt(
                                      ClassOneClass(
                                        NormalExpressionClass(
                                          ExprFirstOptionClassWithMinus(
                                            TermClass(
                                              CharConst(
                                               d
                                              ) [CharConst]
                                              NoTermOptionalListClass(
                                              ) [NoTermOptionalListClass]
                                            ) [TermClass]
                                            NoExprOptionalListClass(
                                            ) [NoExprOptionalListClass]
                                          ) [ExprFirstOptionClassWithMinus]
                                        ) [NormalExpressionClass]
                                      ) [ClassOneClass]
                                      NoCommaNumberClass(
                                      ) [NoCommaNumberClass]
                                    ) [PrintStmt]
                                  ) [Statements]
                                  PrintStmt(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            CharConst(
                                             a
                                            ) [CharConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                    NoCommaNumberClass(
                                    ) [NoCommaNumberClass]
                                  ) [PrintStmt]
                                ) [Statements]
                              ) [StatementStatement]
                              Empty(
                              ) [Empty]
                              NoOptionalStatement(
                              ) [NoOptionalStatement]
                            ) [IfStatement]
                          ) [Statements]
                          IfStatement(
                            IfConditionNoError(
                              ConditionClass(
                                CondTermClass(
                                  CondFactClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               dd
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                    CondFactOptionalClass(
                                      RelationOperationClassNotEqualComparation(
                                      ) [RelationOperationClassNotEqualComparation]
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             5
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [CondFactOptionalClass]
                                  ) [CondFactClass]
                                  NoCondTermOptionalClass(
                                  ) [NoCondTermOptionalClass]
                                ) [CondTermClass]
                                NoConditionOptionalClass(
                                ) [NoConditionOptionalClass]
                              ) [ConditionClass]
                            ) [IfConditionNoError]
                            StatementStatement(
                              Statements(
                                Statements(
                                  NoStmt(
                                  ) [NoStmt]
                                  PrintStmt(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            CharConst(
                                             d
                                            ) [CharConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                    NoCommaNumberClass(
                                    ) [NoCommaNumberClass]
                                  ) [PrintStmt]
                                ) [Statements]
                                PrintStmt(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          CharConst(
                                           a
                                          ) [CharConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                  NoCommaNumberClass(
                                  ) [NoCommaNumberClass]
                                ) [PrintStmt]
                              ) [Statements]
                            ) [StatementStatement]
                            Empty(
                            ) [Empty]
                            NoOptionalStatement(
                            ) [NoOptionalStatement]
                          ) [IfStatement]
                        ) [Statements]
                        IfStatement(
                          IfConditionNoError(
                            ConditionClass(
                              CondTermClass(
                                CondFactClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        DesignatorClass(
                                          Designator(
                                            DesigIdent(
                                             x
                                            ) [DesigIdent]
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                  CondFactOptionalClass(
                                    GreaterOperationClass(
                                    ) [GreaterOperationClass]
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           2
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [CondFactOptionalClass]
                                ) [CondFactClass]
                                NoCondTermOptionalClass(
                                ) [NoCondTermOptionalClass]
                              ) [CondTermClass]
                              NoConditionOptionalClass(
                              ) [NoConditionOptionalClass]
                            ) [ConditionClass]
                          ) [IfConditionNoError]
                          StatementStatement(
                            Statements(
                              Statements(
                                NoStmt(
                                ) [NoStmt]
                                PrintStmt(
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          CharConst(
                                           d
                                          ) [CharConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                  NoCommaNumberClass(
                                  ) [NoCommaNumberClass]
                                ) [PrintStmt]
                              ) [Statements]
                              PrintStmt(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        CharConst(
                                         a
                                        ) [CharConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                                NoCommaNumberClass(
                                ) [NoCommaNumberClass]
                              ) [PrintStmt]
                            ) [Statements]
                          ) [StatementStatement]
                          Empty(
                          ) [Empty]
                          NoOptionalStatement(
                          ) [NoOptionalStatement]
                        ) [IfStatement]
                      ) [Statements]
                      IfStatement(
                        IfConditionNoError(
                          ConditionClass(
                            CondTermClass(
                              CondFactClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           dd
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                                CondFactOptionalClass(
                                  LessOperationClass(
                                  ) [LessOperationClass]
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         7
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [CondFactOptionalClass]
                              ) [CondFactClass]
                              NoCondTermOptionalClass(
                              ) [NoCondTermOptionalClass]
                            ) [CondTermClass]
                            NoConditionOptionalClass(
                            ) [NoConditionOptionalClass]
                          ) [ConditionClass]
                        ) [IfConditionNoError]
                        StatementStatement(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              PrintStmt(
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        CharConst(
                                         d
                                        ) [CharConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                                NoCommaNumberClass(
                                ) [NoCommaNumberClass]
                              ) [PrintStmt]
                            ) [Statements]
                            PrintStmt(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      CharConst(
                                       a
                                      ) [CharConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                              NoCommaNumberClass(
                              ) [NoCommaNumberClass]
                            ) [PrintStmt]
                          ) [Statements]
                        ) [StatementStatement]
                        Empty(
                        ) [Empty]
                        NoOptionalStatement(
                        ) [NoOptionalStatement]
                      ) [IfStatement]
                    ) [Statements]
                    IfStatement(
                      IfConditionNoError(
                        ConditionClass(
                          CondTermClass(
                            CondFactClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    DesignatorClass(
                                      Designator(
                                        DesigIdent(
                                         dd
                                        ) [DesigIdent]
                                        NoOptionalDesignatorClass(
                                        ) [NoOptionalDesignatorClass]
                                      ) [Designator]
                                    ) [DesignatorClass]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                              CondFactOptionalClass(
                                LessOrEqualOperationClass(
                                ) [LessOrEqualOperationClass]
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       6
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [CondFactOptionalClass]
                            ) [CondFactClass]
                            NoCondTermOptionalClass(
                            ) [NoCondTermOptionalClass]
                          ) [CondTermClass]
                          NoConditionOptionalClass(
                          ) [NoConditionOptionalClass]
                        ) [ConditionClass]
                      ) [IfConditionNoError]
                      StatementStatement(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            PrintStmt(
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      CharConst(
                                       d
                                      ) [CharConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                              NoCommaNumberClass(
                              ) [NoCommaNumberClass]
                            ) [PrintStmt]
                          ) [Statements]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    CharConst(
                                     a
                                    ) [CharConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                      ) [StatementStatement]
                      Empty(
                      ) [Empty]
                      NoOptionalStatement(
                      ) [NoOptionalStatement]
                    ) [IfStatement]
                  ) [Statements]
                  IfStatement(
                    IfConditionNoError(
                      ConditionClass(
                        CondTermClass(
                          CondFactClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       x
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                            CondFactOptionalClass(
                              GreaterOrEqualOperationClass(
                              ) [GreaterOrEqualOperationClass]
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    NumberConst(
                                     3
                                    ) [NumberConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [CondFactOptionalClass]
                          ) [CondFactClass]
                          NoCondTermOptionalClass(
                          ) [NoCondTermOptionalClass]
                        ) [CondTermClass]
                        NoConditionOptionalClass(
                        ) [NoConditionOptionalClass]
                      ) [ConditionClass]
                    ) [IfConditionNoError]
                    StatementStatement(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          PrintStmt(
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    CharConst(
                                     d
                                    ) [CharConst]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                            NoCommaNumberClass(
                            ) [NoCommaNumberClass]
                          ) [PrintStmt]
                        ) [Statements]
                        PrintStmt(
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  CharConst(
                                   a
                                  ) [CharConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                          NoCommaNumberClass(
                          ) [NoCommaNumberClass]
                        ) [PrintStmt]
                      ) [Statements]
                    ) [StatementStatement]
                    Empty(
                    ) [Empty]
                    NoOptionalStatement(
                    ) [NoOptionalStatement]
                  ) [IfStatement]
                ) [Statements]
              ) [StatementStatement]
              Empty(
              ) [Empty]
              YesOptionalStatement(
                StatementStatement(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              NumberConst(
                               3
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                ) [StatementStatement]
              ) [YesOptionalStatement]
            ) [IfStatement]
          ) [Statements]
          Assignment(
            DesignatorStatementOptionsClassAssignExpression(
              Designator(
                DesigIdent(
                 x
                ) [DesigIdent]
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       10
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [Assignment]
        ) [Statements]
        DoWhileStatement(
          DoClass(
          ) [DoClass]
          StatementStatement(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                CharConst(
                                 x
                                ) [CharConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              CharConst(
                               =
                              ) [CharConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  PrintStmt(
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            DesignatorClass(
                              Designator(
                                DesigIdent(
                                 x
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                            ) [DesignatorClass]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                    NoCommaNumberClass(
                    ) [NoCommaNumberClass]
                  ) [PrintStmt]
                ) [Statements]
                PrintStmt(
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          CharConst(
                            
                          ) [CharConst]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                  NoCommaNumberClass(
                  ) [NoCommaNumberClass]
                ) [PrintStmt]
              ) [Statements]
              Assignment(
                DesignatorStatementMinusMinus(
                  Designator(
                    DesigIdent(
                     x
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                ) [DesignatorStatementMinusMinus]
              ) [Assignment]
            ) [Statements]
          ) [StatementStatement]
          LParenClass(
          ) [LParenClass]
          ConditionClass(
            CondTermClass(
              CondFactClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      DesignatorClass(
                        Designator(
                          DesigIdent(
                           x
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                      ) [DesignatorClass]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
                CondFactOptionalClass(
                  GreaterOrEqualOperationClass(
                  ) [GreaterOrEqualOperationClass]
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        NumberConst(
                         0
                        ) [NumberConst]
                        NoTermOptionalListClass(
                        ) [NoTermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [CondFactOptionalClass]
              ) [CondFactClass]
              NoCondTermOptionalClass(
              ) [NoCondTermOptionalClass]
            ) [CondTermClass]
            NoConditionOptionalClass(
            ) [NoConditionOptionalClass]
          ) [ConditionClass]
          RParenClass(
          ) [RParenClass]
        ) [DoWhileStatement]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:55:52,320 - ===================================
INFO  15:55:52,324 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  15:55:52,325 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  15:55:52,325 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  15:55:52,325 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  15:55:52,326 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  15:55:52,326 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  15:55:52,326 - CONST VALUE 0 IS BEING USED! ON LINE 4
INFO  15:55:52,326 - CONST VARIABLE term IS BEING DEFINED! ON LINE 4
INFO  15:55:52,326 - CONST VALUE 3 IS BEING USED! ON LINE 5
INFO  15:55:52,326 - CONST VARIABLE y IS BEING DEFINED! ON LINE 5
INFO  15:55:52,326 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 9
INFO  15:55:52,326 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  15:55:52,326 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  15:55:52,327 - METHOD BODY STARTING!
INFO  15:55:52,327 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  15:55:52,327 - WE ARE USING A VARIABLE OF TYPE int ON LINE 9
INFO  15:55:52,327 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  15:55:52,327 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  15:55:52,327 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 9
INFO  15:55:52,327 - METHOD BODY ENDING!
INFO  15:55:52,327 - END OF DEFINING FUNCTION k
INFO  15:55:52,327 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 23
INFO  15:55:52,327 - VARIABLE x IS BEING DEFINED! ON LINE 24
INFO  15:55:52,327 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 24
INFO  15:55:52,328 - VARIABLE p IS BEING DEFINED! ON LINE 26
INFO  15:55:52,328 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 26
INFO  15:55:52,328 - VARIABLE r IS BEING DEFINED! ON LINE 27
INFO  15:55:52,328 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 27
INFO  15:55:52,328 - VARIABLE q IS BEING DEFINED! ON LINE 28
INFO  15:55:52,328 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 28
INFO  15:55:52,328 - VARIABLE dd IS BEING DEFINED! ON LINE 32
INFO  15:55:52,328 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 32
INFO  15:55:52,328 - VARIABLE ee IS BEING DEFINED! ON LINE 33
INFO  15:55:52,328 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 33
INFO  15:55:52,328 - VARIABLE ff IS BEING DEFINED! ON LINE 34
INFO  15:55:52,328 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 34
INFO  15:55:52,328 - VARIABLE gg IS BEING DEFINED! ON LINE 35
INFO  15:55:52,328 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 35
INFO  15:55:52,328 - VARIABLE hh IS BEING DEFINED! ON LINE 36
INFO  15:55:52,328 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 36
INFO  15:55:52,328 - VARIABLE ii IS BEING DEFINED! ON LINE 37
INFO  15:55:52,328 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 37
INFO  15:55:52,328 - METHOD BODY STARTING!
INFO  15:55:52,328 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,329 - BEGINNING OF AN ASSIGNEMENT! ON LINE 66
INFO  15:55:52,329 - CONST NUMBER 3 ON LINE 66
INFO  15:55:52,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 66
INFO  15:55:52,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 66
INFO  15:55:52,329 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 66
INFO  15:55:52,329 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:55:52,329 - BEGINNING OF AN ASSIGNEMENT! ON LINE 67
INFO  15:55:52,329 - CONST NUMBER 6 ON LINE 67
INFO  15:55:52,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 67
INFO  15:55:52,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 67
INFO  15:55:52,329 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 67
INFO  15:55:52,329 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,329 - WE ARE USING A VARIABLE OF TYPE int ON LINE 69
INFO  15:55:52,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  15:55:52,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  15:55:52,329 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:55:52,329 - WE ARE USING A VARIABLE OF TYPE int ON LINE 69
INFO  15:55:52,329 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 69
INFO  15:55:52,330 - USING TWO EXPRESSIONS OF TYPE int ON LINE 69
INFO  15:55:52,330 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,330 - WE ARE USING A VARIABLE OF TYPE int ON LINE 70
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  15:55:52,330 - CONST NUMBER 3 ON LINE 70
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 70
INFO  15:55:52,330 - USING TWO EXPRESSIONS OF TYPE int ON LINE 70
INFO  15:55:52,330 - CONST CHAR d ON LINE 71
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 71
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 71
INFO  15:55:52,330 - PRINT FUNCTION CALL IN USE! ON LINE 71
INFO  15:55:52,330 - CONST CHAR a ON LINE 72
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 72
INFO  15:55:52,330 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 72
INFO  15:55:52,330 - PRINT FUNCTION CALL IN USE! ON LINE 72
INFO  15:55:52,331 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:55:52,331 - WE ARE USING A VARIABLE OF TYPE int ON LINE 75
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  15:55:52,331 - CONST NUMBER 5 ON LINE 75
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 75
INFO  15:55:52,331 - USING TWO EXPRESSIONS OF TYPE int ON LINE 75
INFO  15:55:52,331 - CONST CHAR d ON LINE 76
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 76
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 76
INFO  15:55:52,331 - PRINT FUNCTION CALL IN USE! ON LINE 76
INFO  15:55:52,331 - CONST CHAR a ON LINE 77
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 77
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 77
INFO  15:55:52,331 - PRINT FUNCTION CALL IN USE! ON LINE 77
INFO  15:55:52,331 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,331 - WE ARE USING A VARIABLE OF TYPE int ON LINE 80
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  15:55:52,331 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  15:55:52,332 - CONST NUMBER 2 ON LINE 80
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 80
INFO  15:55:52,332 - USING TWO EXPRESSIONS OF TYPE int ON LINE 80
INFO  15:55:52,332 - CONST CHAR d ON LINE 81
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 81
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 81
INFO  15:55:52,332 - PRINT FUNCTION CALL IN USE! ON LINE 81
INFO  15:55:52,332 - CONST CHAR a ON LINE 82
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 82
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 82
INFO  15:55:52,332 - PRINT FUNCTION CALL IN USE! ON LINE 82
INFO  15:55:52,332 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:55:52,332 - WE ARE USING A VARIABLE OF TYPE int ON LINE 85
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  15:55:52,332 - CONST NUMBER 7 ON LINE 85
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 85
INFO  15:55:52,332 - USING TWO EXPRESSIONS OF TYPE int ON LINE 85
INFO  15:55:52,332 - CONST CHAR d ON LINE 86
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 86
INFO  15:55:52,332 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 86
INFO  15:55:52,332 - PRINT FUNCTION CALL IN USE! ON LINE 86
INFO  15:55:52,333 - CONST CHAR a ON LINE 87
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 87
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 87
INFO  15:55:52,333 - PRINT FUNCTION CALL IN USE! ON LINE 87
INFO  15:55:52,333 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  15:55:52,333 - WE ARE USING A VARIABLE OF TYPE int ON LINE 90
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  15:55:52,333 - CONST NUMBER 6 ON LINE 90
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 90
INFO  15:55:52,333 - USING TWO EXPRESSIONS OF TYPE int ON LINE 90
INFO  15:55:52,333 - CONST CHAR d ON LINE 91
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 91
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 91
INFO  15:55:52,333 - PRINT FUNCTION CALL IN USE! ON LINE 91
INFO  15:55:52,333 - CONST CHAR a ON LINE 92
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 92
INFO  15:55:52,333 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 92
INFO  15:55:52,333 - PRINT FUNCTION CALL IN USE! ON LINE 92
INFO  15:55:52,333 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,333 - WE ARE USING A VARIABLE OF TYPE int ON LINE 95
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 95
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 95
INFO  15:55:52,334 - CONST NUMBER 3 ON LINE 95
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 95
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 95
INFO  15:55:52,334 - USING TWO EXPRESSIONS OF TYPE int ON LINE 95
INFO  15:55:52,334 - CONST CHAR d ON LINE 96
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 96
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 96
INFO  15:55:52,334 - PRINT FUNCTION CALL IN USE! ON LINE 96
INFO  15:55:52,334 - CONST CHAR a ON LINE 97
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 97
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 97
INFO  15:55:52,334 - PRINT FUNCTION CALL IN USE! ON LINE 97
INFO  15:55:52,334 - CONST NUMBER 3 ON LINE 101
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 101
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 101
INFO  15:55:52,334 - PRINT FUNCTION CALL IN USE! ON LINE 101
INFO  15:55:52,334 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,334 - BEGINNING OF AN ASSIGNEMENT! ON LINE 104
INFO  15:55:52,334 - CONST NUMBER 10 ON LINE 104
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 104
INFO  15:55:52,334 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 104
INFO  15:55:52,334 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 104
INFO  15:55:52,335 - BEGINNING OF A DO...WHILE LOOP!
INFO  15:55:52,335 - CONST CHAR x ON LINE 106
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 106
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 106
INFO  15:55:52,335 - PRINT FUNCTION CALL IN USE! ON LINE 106
INFO  15:55:52,335 - CONST CHAR = ON LINE 107
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 107
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 107
INFO  15:55:52,335 - PRINT FUNCTION CALL IN USE! ON LINE 107
INFO  15:55:52,335 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,335 - WE ARE USING A VARIABLE OF TYPE int ON LINE 108
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 108
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 108
INFO  15:55:52,335 - PRINT FUNCTION CALL IN USE! ON LINE 108
INFO  15:55:52,335 - CONST CHAR   ON LINE 109
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 109
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 109
INFO  15:55:52,335 - PRINT FUNCTION CALL IN USE! ON LINE 109
INFO  15:55:52,335 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,335 - USING -- ON x ON LINE 110
INFO  15:55:52,335 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  15:55:52,335 - WE ARE USING A VARIABLE OF TYPE int ON LINE 112
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 112
INFO  15:55:52,335 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 112
INFO  15:55:52,335 - CONST NUMBER 0 ON LINE 112
INFO  15:55:52,336 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 112
INFO  15:55:52,336 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 112
INFO  15:55:52,336 - USING TWO EXPRESSIONS OF TYPE int ON LINE 112
INFO  15:55:52,336 - ENDING OF A DO...WHILE LOOP! ON LINE 105
INFO  15:55:52,336 - METHOD BODY ENDING!
INFO  15:55:52,336 - END OF DEFINING FUNCTION main
INFO  15:55:52,336 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  15:55:52,336 -  Deklarisanih promenljivih ima = 14
INFO  15:55:52,336 - ===================================
INFO  15:55:52,343 - Parsiranje uspesno zavrseno!
