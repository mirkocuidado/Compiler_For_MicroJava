INFO  16:36:03,011 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  16:36:03,087 - #2 program
INFO  16:36:03,087 - #43 test301
INFO  16:36:03,088 - #9 const
INFO  16:36:03,089 - #43 int
INFO  16:36:03,089 - #43 nula
INFO  16:36:03,090 - #19 =
INFO  16:36:03,090 - #42 0
INFO  16:36:03,090 - #33 ;
INFO  16:36:03,090 - #9 const
INFO  16:36:03,090 - #43 int
INFO  16:36:03,090 - #43 jedan
INFO  16:36:03,091 - #19 =
INFO  16:36:03,091 - #42 1
INFO  16:36:03,091 - #33 ;
INFO  16:36:03,091 - #9 const
INFO  16:36:03,091 - #43 int
INFO  16:36:03,091 - #43 pet
INFO  16:36:03,091 - #19 =
INFO  16:36:03,091 - #42 5
INFO  16:36:03,091 - #33 ;
INFO  16:36:03,091 - #43 int
INFO  16:36:03,099 - #43 niz
INFO  16:36:03,099 - #39 [
INFO  16:36:03,099 - #40 ]
INFO  16:36:03,099 - #33 ;
INFO  16:36:03,100 - #43 char
INFO  16:36:03,100 - #43 nizch
INFO  16:36:03,100 - #39 [
INFO  16:36:03,100 - #40 ]
INFO  16:36:03,101 - #33 ;
INFO  16:36:03,101 - #35 {
INFO  16:36:03,101 - #5 void
INFO  16:36:03,102 - #43 main
INFO  16:36:03,102 - #37 (
INFO  16:36:03,102 - #38 )
INFO  16:36:03,103 - #43 int
INFO  16:36:03,104 - #43 bodovi
INFO  16:36:03,104 - #33 ;
INFO  16:36:03,104 - #43 bool
INFO  16:36:03,104 - #43 bt
INFO  16:36:03,104 - #33 ;
INFO  16:36:03,105 - #35 {
INFO  16:36:03,105 - #43 bodovi
INFO  16:36:03,107 - #19 =
INFO  16:36:03,108 - #42 0
INFO  16:36:03,109 - #33 ;
INFO  16:36:03,111 - #43 bodovi
INFO  16:36:03,112 - #28 ++
INFO  16:36:03,112 - #33 ;
INFO  16:36:03,112 - #43 bodovi
INFO  16:36:03,112 - #19 =
INFO  16:36:03,112 - #43 bodovi
INFO  16:36:03,112 - #49 +
INFO  16:36:03,112 - #43 jedan
INFO  16:36:03,112 - #33 ;
INFO  16:36:03,113 - #43 bodovi
INFO  16:36:03,113 - #19 =
INFO  16:36:03,113 - #43 bodovi
INFO  16:36:03,113 - #46 *
INFO  16:36:03,113 - #43 pet
INFO  16:36:03,113 - #33 ;
INFO  16:36:03,113 - #43 bodovi
INFO  16:36:03,113 - #29 --
INFO  16:36:03,114 - #33 ;
INFO  16:36:03,114 - #18 print
INFO  16:36:03,114 - #37 (
INFO  16:36:03,114 - #43 bodovi
INFO  16:36:03,114 - #38 )
INFO  16:36:03,115 - #33 ;
INFO  16:36:03,115 - #43 niz
INFO  16:36:03,115 - #19 =
INFO  16:36:03,115 - #16 new
INFO  16:36:03,116 - #43 int
INFO  16:36:03,116 - #39 [
INFO  16:36:03,116 - #42 3
INFO  16:36:03,116 - #40 ]
INFO  16:36:03,116 - #33 ;
INFO  16:36:03,116 - #43 niz
INFO  16:36:03,116 - #39 [
INFO  16:36:03,117 - #43 nula
INFO  16:36:03,118 - #40 ]
INFO  16:36:03,118 - #19 =
INFO  16:36:03,119 - #43 jedan
INFO  16:36:03,119 - #33 ;
INFO  16:36:03,119 - #43 niz
INFO  16:36:03,119 - #39 [
INFO  16:36:03,119 - #42 1
INFO  16:36:03,119 - #40 ]
INFO  16:36:03,119 - #19 =
INFO  16:36:03,119 - #42 2
INFO  16:36:03,119 - #33 ;
INFO  16:36:03,119 - #43 niz
INFO  16:36:03,119 - #39 [
INFO  16:36:03,119 - #43 niz
INFO  16:36:03,119 - #39 [
INFO  16:36:03,119 - #43 jedan
INFO  16:36:03,120 - #40 ]
INFO  16:36:03,120 - #40 ]
INFO  16:36:03,120 - #19 =
INFO  16:36:03,120 - #43 niz
INFO  16:36:03,120 - #39 [
INFO  16:36:03,120 - #43 niz
INFO  16:36:03,120 - #39 [
INFO  16:36:03,120 - #42 0
INFO  16:36:03,120 - #40 ]
INFO  16:36:03,120 - #40 ]
INFO  16:36:03,120 - #46 *
INFO  16:36:03,120 - #42 3
INFO  16:36:03,120 - #33 ;
INFO  16:36:03,120 - #43 bodovi
INFO  16:36:03,120 - #19 =
INFO  16:36:03,120 - #43 niz
INFO  16:36:03,120 - #39 [
INFO  16:36:03,121 - #42 2
INFO  16:36:03,121 - #40 ]
INFO  16:36:03,121 - #47 /
INFO  16:36:03,121 - #43 niz
INFO  16:36:03,121 - #39 [
INFO  16:36:03,121 - #42 0
INFO  16:36:03,121 - #40 ]
INFO  16:36:03,121 - #33 ;
INFO  16:36:03,121 - #18 print
INFO  16:36:03,121 - #37 (
INFO  16:36:03,121 - #43 bodovi
INFO  16:36:03,121 - #38 )
INFO  16:36:03,121 - #33 ;
INFO  16:36:03,121 - #18 print
INFO  16:36:03,121 - #37 (
INFO  16:36:03,121 - #43 niz
INFO  16:36:03,122 - #39 [
INFO  16:36:03,122 - #42 2
INFO  16:36:03,122 - #40 ]
INFO  16:36:03,122 - #38 )
INFO  16:36:03,122 - #33 ;
INFO  16:36:03,122 - #36 }
INFO  16:36:03,122 - #36 }
INFO  16:36:03,132 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        GroupDeclarations(
          GroupDeclarations(
            NoGroupDecl(
            ) [NoGroupDecl]
            GroupDeclarationsConsts(
              ConstDeclClass(
                Type(
                 int
                ) [Type]
                ConstListSingle(
                  ConstListNoArray(
                   nula
                    ValuesNumber(
                     0
                    ) [ValuesNumber]
                  ) [ConstListNoArray]
                ) [ConstListSingle]
              ) [ConstDeclClass]
            ) [GroupDeclarationsConsts]
          ) [GroupDeclarations]
          GroupDeclarationsConsts(
            ConstDeclClass(
              Type(
               int
              ) [Type]
              ConstListSingle(
                ConstListNoArray(
                 jedan
                  ValuesNumber(
                   1
                  ) [ValuesNumber]
                ) [ConstListNoArray]
              ) [ConstListSingle]
            ) [ConstDeclClass]
          ) [GroupDeclarationsConsts]
        ) [GroupDeclarations]
        GroupDeclarationsConsts(
          ConstDeclClass(
            Type(
             int
            ) [Type]
            ConstListSingle(
              ConstListNoArray(
               pet
                ValuesNumber(
                 5
                ) [ValuesNumber]
              ) [ConstListNoArray]
            ) [ConstListSingle]
          ) [ConstDeclClass]
        ) [GroupDeclarationsConsts]
      ) [GroupDeclarations]
      GroupDeclarationVars(
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassArray(
             niz
            ) [VarClassArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [GroupDeclarationVars]
    ) [GroupDeclarations]
    GroupDeclarationVars(
      VarDeclClass(
        Type(
         char
        ) [Type]
        VarListSingle(
          VarClassArray(
           nizch
          ) [VarClassArray]
        ) [VarListSingle]
      ) [VarDeclClass]
    ) [GroupDeclarationVars]
  ) [GroupDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               bodovi
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           bool
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             bt
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                NoStmt(
                                ) [NoStmt]
                                Assignment(
                                  DesignatorStatementOptionsClassAssignExpression(
                                    Designator(
                                      DesigIdent(
                                       bodovi
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                    AssignOpClass(
                                      AssignOperationClass(
                                      ) [AssignOperationClass]
                                    ) [AssignOpClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [DesignatorStatementOptionsClassAssignExpression]
                                ) [Assignment]
                              ) [Statements]
                              Assignment(
                                DesignatorStatementPlusPlus(
                                  Designator(
                                    DesigIdent(
                                     bodovi
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorStatementPlusPlus]
                              ) [Assignment]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementOptionsClassAssignExpression(
                                Designator(
                                  DesigIdent(
                                   bodovi
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                AssignOpClass(
                                  AssignOperationClass(
                                  ) [AssignOperationClass]
                                ) [AssignOpClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        DesignatorClass(
                                          Designator(
                                            DesigIdent(
                                             bodovi
                                            ) [DesigIdent]
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      ExprOptionalListClass(
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                        PlusOperation(
                                         +
                                        ) [PlusOperation]
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               jedan
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                      ) [ExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [DesignatorStatementOptionsClassAssignExpression]
                            ) [Assignment]
                          ) [Statements]
                          Assignment(
                            DesignatorStatementOptionsClassAssignExpression(
                              Designator(
                                DesigIdent(
                                 bodovi
                                ) [DesigIdent]
                                NoOptionalDesignatorClass(
                                ) [NoOptionalDesignatorClass]
                              ) [Designator]
                              AssignOpClass(
                                AssignOperationClass(
                                ) [AssignOperationClass]
                              ) [AssignOpClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      DesignatorClass(
                                        Designator(
                                          DesigIdent(
                                           bodovi
                                          ) [DesigIdent]
                                          NoOptionalDesignatorClass(
                                          ) [NoOptionalDesignatorClass]
                                        ) [Designator]
                                      ) [DesignatorClass]
                                      TermOptionalListClass(
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                        MultiplyOperationClass(
                                         *
                                        ) [MultiplyOperationClass]
                                        DesignatorClass(
                                          Designator(
                                            DesigIdent(
                                             pet
                                            ) [DesigIdent]
                                            NoOptionalDesignatorClass(
                                            ) [NoOptionalDesignatorClass]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                      ) [TermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [DesignatorStatementOptionsClassAssignExpression]
                          ) [Assignment]
                        ) [Statements]
                        Assignment(
                          DesignatorStatementMinusMinus(
                            Designator(
                              DesigIdent(
                               bodovi
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorStatementMinusMinus]
                        ) [Assignment]
                      ) [Statements]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                DesignatorClass(
                                  Designator(
                                    DesigIdent(
                                     bodovi
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                ) [DesignatorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                    Assignment(
                      DesignatorStatementOptionsClassAssignExpression(
                        Designator(
                          DesigIdent(
                           niz
                          ) [DesigIdent]
                          NoOptionalDesignatorClass(
                          ) [NoOptionalDesignatorClass]
                        ) [Designator]
                        AssignOpClass(
                          AssignOperationClass(
                          ) [AssignOperationClass]
                        ) [AssignOpClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NewFactorClass(
                                  Type(
                                   int
                                  ) [Type]
                                  FactorOptionalSecondClass(
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            NumberConst(
                                             3
                                            ) [NumberConst]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [FactorOptionalSecondClass]
                                ) [NewFactorClass]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [DesignatorStatementOptionsClassAssignExpression]
                    ) [Assignment]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         niz
                        ) [DesigIdent]
                        OptionalDesignatorArray(
                          HelperClass(
                          ) [HelperClass]
                          LSquareClass(
                          ) [LSquareClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       nula
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [OptionalDesignatorArray]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   jedan
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
                Assignment(
                  DesignatorStatementOptionsClassAssignExpression(
                    Designator(
                      DesigIdent(
                       niz
                      ) [DesigIdent]
                      OptionalDesignatorArray(
                        HelperClass(
                        ) [HelperClass]
                        LSquareClass(
                        ) [LSquareClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 1
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [OptionalDesignatorArray]
                    ) [Designator]
                    AssignOpClass(
                      AssignOperationClass(
                      ) [AssignOperationClass]
                    ) [AssignOpClass]
                    ClassOneClass(
                      NormalExpressionClass(
                        ExprFirstOptionClassWithMinus(
                          TermClass(
                            NumberConst(
                             2
                            ) [NumberConst]
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                          ) [TermClass]
                          NoExprOptionalListClass(
                          ) [NoExprOptionalListClass]
                        ) [ExprFirstOptionClassWithMinus]
                      ) [NormalExpressionClass]
                    ) [ClassOneClass]
                  ) [DesignatorStatementOptionsClassAssignExpression]
                ) [Assignment]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     niz
                    ) [DesigIdent]
                    OptionalDesignatorArray(
                      HelperClass(
                      ) [HelperClass]
                      LSquareClass(
                      ) [LSquareClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   niz
                                  ) [DesigIdent]
                                  OptionalDesignatorArray(
                                    HelperClass(
                                    ) [HelperClass]
                                    LSquareClass(
                                    ) [LSquareClass]
                                    ClassOneClass(
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 jedan
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [ClassOneClass]
                                  ) [OptionalDesignatorArray]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [OptionalDesignatorArray]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               niz
                              ) [DesigIdent]
                              OptionalDesignatorArray(
                                HelperClass(
                                ) [HelperClass]
                                LSquareClass(
                                ) [LSquareClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        DesignatorClass(
                                          Designator(
                                            DesigIdent(
                                             niz
                                            ) [DesigIdent]
                                            OptionalDesignatorArray(
                                              HelperClass(
                                              ) [HelperClass]
                                              LSquareClass(
                                              ) [LSquareClass]
                                              ClassOneClass(
                                                NormalExpressionClass(
                                                  ExprFirstOptionClassWithMinus(
                                                    TermClass(
                                                      NumberConst(
                                                       0
                                                      ) [NumberConst]
                                                      NoTermOptionalListClass(
                                                      ) [NoTermOptionalListClass]
                                                    ) [TermClass]
                                                    NoExprOptionalListClass(
                                                    ) [NoExprOptionalListClass]
                                                  ) [ExprFirstOptionClassWithMinus]
                                                ) [NormalExpressionClass]
                                              ) [ClassOneClass]
                                            ) [OptionalDesignatorArray]
                                          ) [Designator]
                                        ) [DesignatorClass]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [OptionalDesignatorArray]
                            ) [Designator]
                          ) [DesignatorClass]
                          TermOptionalListClass(
                            NoTermOptionalListClass(
                            ) [NoTermOptionalListClass]
                            MultiplyOperationClass(
                             *
                            ) [MultiplyOperationClass]
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [TermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementOptionsClassAssignExpression(
                Designator(
                  DesigIdent(
                   bodovi
                  ) [DesigIdent]
                  NoOptionalDesignatorClass(
                  ) [NoOptionalDesignatorClass]
                ) [Designator]
                AssignOpClass(
                  AssignOperationClass(
                  ) [AssignOperationClass]
                ) [AssignOpClass]
                ClassOneClass(
                  NormalExpressionClass(
                    ExprFirstOptionClassWithMinus(
                      TermClass(
                        DesignatorClass(
                          Designator(
                            DesigIdent(
                             niz
                            ) [DesigIdent]
                            OptionalDesignatorArray(
                              HelperClass(
                              ) [HelperClass]
                              LSquareClass(
                              ) [LSquareClass]
                              ClassOneClass(
                                NormalExpressionClass(
                                  ExprFirstOptionClassWithMinus(
                                    TermClass(
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                      NoTermOptionalListClass(
                                      ) [NoTermOptionalListClass]
                                    ) [TermClass]
                                    NoExprOptionalListClass(
                                    ) [NoExprOptionalListClass]
                                  ) [ExprFirstOptionClassWithMinus]
                                ) [NormalExpressionClass]
                              ) [ClassOneClass]
                            ) [OptionalDesignatorArray]
                          ) [Designator]
                        ) [DesignatorClass]
                        TermOptionalListClass(
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                          DivideOperationClass(
                           /
                          ) [DivideOperationClass]
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               niz
                              ) [DesigIdent]
                              OptionalDesignatorArray(
                                HelperClass(
                                ) [HelperClass]
                                LSquareClass(
                                ) [LSquareClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         0
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [OptionalDesignatorArray]
                            ) [Designator]
                          ) [DesignatorClass]
                        ) [TermOptionalListClass]
                      ) [TermClass]
                      NoExprOptionalListClass(
                      ) [NoExprOptionalListClass]
                    ) [ExprFirstOptionClassWithMinus]
                  ) [NormalExpressionClass]
                ) [ClassOneClass]
              ) [DesignatorStatementOptionsClassAssignExpression]
            ) [Assignment]
          ) [Statements]
          PrintStmt(
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         bodovi
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
            NoCommaNumberClass(
            ) [NoCommaNumberClass]
          ) [PrintStmt]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  DesignatorClass(
                    Designator(
                      DesigIdent(
                       niz
                      ) [DesigIdent]
                      OptionalDesignatorArray(
                        HelperClass(
                        ) [HelperClass]
                        LSquareClass(
                        ) [LSquareClass]
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 2
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                      ) [OptionalDesignatorArray]
                    ) [Designator]
                  ) [DesignatorClass]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:36:03,133 - ===================================
INFO  16:36:03,137 - PROGRAM NAME DETECTED => test301 ON LINE 3
INFO  16:36:03,137 - CONST VALUE 0 IS BEING USED! ON LINE 5
INFO  16:36:03,137 - CONST VARIABLE nula IS BEING DEFINED! ON LINE 5
INFO  16:36:03,137 - CONST VALUE 1 IS BEING USED! ON LINE 6
INFO  16:36:03,137 - CONST VARIABLE jedan IS BEING DEFINED! ON LINE 6
INFO  16:36:03,137 - CONST VALUE 5 IS BEING USED! ON LINE 7
INFO  16:36:03,137 - CONST VARIABLE pet IS BEING DEFINED! ON LINE 7
INFO  16:36:03,137 - ARRAY VARIABLE niz IS BEING DEFINED! ON LINE 9
INFO  16:36:03,137 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 9
INFO  16:36:03,138 - ARRAY VARIABLE nizch IS BEING DEFINED! ON LINE 10
INFO  16:36:03,138 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 10
INFO  16:36:03,138 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 13
INFO  16:36:03,138 - VARIABLE bodovi IS BEING DEFINED! ON LINE 14
INFO  16:36:03,138 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 14
INFO  16:36:03,138 - VARIABLE bt IS BEING DEFINED! ON LINE 15
INFO  16:36:03,138 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 15
INFO  16:36:03,138 - METHOD BODY STARTING!
INFO  16:36:03,138 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,138 - BEGINNING OF AN ASSIGNEMENT! ON LINE 17
INFO  16:36:03,138 - CONST NUMBER 0 ON LINE 17
INFO  16:36:03,138 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  16:36:03,138 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 17
INFO  16:36:03,138 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 17
INFO  16:36:03,139 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,139 - USING ++ ON bodovi ON LINE 18
INFO  16:36:03,139 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,139 - BEGINNING OF AN ASSIGNEMENT! ON LINE 19
INFO  16:36:03,139 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,140 - WE ARE USING A VARIABLE OF TYPE int ON LINE 19
INFO  16:36:03,140 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  16:36:03,140 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  16:36:03,140 - WE ARE USING A VARIABLE OF TYPE int ON LINE 19
INFO  16:36:03,140 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 19
INFO  16:36:03,140 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  16:36:03,140 - USING INTEGERS IN TERM! ON LINE 19
INFO  16:36:03,140 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 19
INFO  16:36:03,140 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,140 - BEGINNING OF AN ASSIGNEMENT! ON LINE 20
INFO  16:36:03,140 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,140 - WE ARE USING A VARIABLE OF TYPE int ON LINE 20
INFO  16:36:03,140 - CURRENT VARIABLE IN USE IS pet AND IT IS OF TYPE int
INFO  16:36:03,140 - WE ARE USING A VARIABLE OF TYPE int ON LINE 20
INFO  16:36:03,140 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 11
INFO  16:36:03,141 - USING INTEGERS IN TERM! ON LINE 20
INFO  16:36:03,141 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 20
INFO  16:36:03,141 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 20
INFO  16:36:03,141 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,141 - USING -- ON bodovi ON LINE 21
INFO  16:36:03,141 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,141 - WE ARE USING A VARIABLE OF TYPE int ON LINE 22
INFO  16:36:03,141 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  16:36:03,141 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 22
INFO  16:36:03,141 - PRINT FUNCTION CALL IN USE! ON LINE 22
INFO  16:36:03,141 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,141 - BEGINNING OF AN ASSIGNEMENT! ON LINE 25
INFO  16:36:03,141 - CONST NUMBER 3 ON LINE 25
INFO  16:36:03,141 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  16:36:03,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  16:36:03,142 - USAGE OF KEYWORD NEW! ON LINE 25
INFO  16:36:03,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  16:36:03,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 25
INFO  16:36:03,142 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 25
INFO  16:36:03,142 - CURRENT VARIABLE IN USE IS nula AND IT IS OF TYPE int
INFO  16:36:03,142 - WE ARE USING A VARIABLE OF TYPE int ON LINE 26
INFO  16:36:03,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:36:03,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:36:03,142 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,142 - BEGINNING OF AN ASSIGNEMENT! ON LINE 26
INFO  16:36:03,142 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  16:36:03,142 - WE ARE USING A VARIABLE OF TYPE int ON LINE 26
INFO  16:36:03,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:36:03,142 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 26
INFO  16:36:03,142 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 26
INFO  16:36:03,142 - CONST NUMBER 1 ON LINE 27
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  16:36:03,143 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,143 - BEGINNING OF AN ASSIGNEMENT! ON LINE 27
INFO  16:36:03,143 - CONST NUMBER 2 ON LINE 27
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 27
INFO  16:36:03,143 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 27
INFO  16:36:03,143 - CURRENT VARIABLE IN USE IS jedan AND IT IS OF TYPE int
INFO  16:36:03,143 - WE ARE USING A VARIABLE OF TYPE int ON LINE 28
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,143 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,143 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,143 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,143 - BEGINNING OF AN ASSIGNEMENT! ON LINE 28
INFO  16:36:03,143 - CONST NUMBER 0 ON LINE 28
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,143 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,143 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,143 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  16:36:03,144 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,144 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,144 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,144 - WE ARE USING AN ARRAY OF TYPE int ON LINE 28
INFO  16:36:03,144 - CONST NUMBER 3 ON LINE 28
INFO  16:36:03,144 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  16:36:03,144 - USING INTEGERS IN TERM! ON LINE 28
INFO  16:36:03,144 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 28
INFO  16:36:03,144 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 28
INFO  16:36:03,144 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,144 - BEGINNING OF AN ASSIGNEMENT! ON LINE 29
INFO  16:36:03,144 - CONST NUMBER 2 ON LINE 29
INFO  16:36:03,144 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:03,144 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:03,144 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,144 - WE ARE USING AN ARRAY OF TYPE int ON LINE 29
INFO  16:36:03,145 - CONST NUMBER 0 ON LINE 29
INFO  16:36:03,145 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:03,145 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:03,145 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,145 - WE ARE USING AN ARRAY OF TYPE int ON LINE 29
INFO  16:36:03,145 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 16
INFO  16:36:03,145 - USING INTEGERS IN TERM! ON LINE 29
INFO  16:36:03,145 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 29
INFO  16:36:03,145 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 29
INFO  16:36:03,145 - CURRENT VARIABLE IN USE IS bodovi AND IT IS OF TYPE int
INFO  16:36:03,145 - WE ARE USING A VARIABLE OF TYPE int ON LINE 30
INFO  16:36:03,145 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  16:36:03,145 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 30
INFO  16:36:03,145 - PRINT FUNCTION CALL IN USE! ON LINE 30
INFO  16:36:03,145 - CONST NUMBER 2 ON LINE 31
INFO  16:36:03,146 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  16:36:03,146 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  16:36:03,146 - CURRENT VARIABLE IN USE IS niz AND IT IS OF TYPE array
INFO  16:36:03,146 - WE ARE USING AN ARRAY OF TYPE int ON LINE 31
INFO  16:36:03,146 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  16:36:03,146 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 31
INFO  16:36:03,146 - PRINT FUNCTION CALL IN USE! ON LINE 31
INFO  16:36:03,146 - METHOD BODY ENDING!
INFO  16:36:03,146 - END OF DEFINING FUNCTION main
INFO  16:36:03,146 - PROGRAM ENDED => test301 ON LINE 3
INFO  16:36:03,146 -  Deklarisanih promenljivih ima = 4
INFO  16:36:03,146 - ===================================
INFO  16:36:03,150 - Parsiranje uspesno zavrseno!
