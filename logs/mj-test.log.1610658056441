INFO  21:58:20,787 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  21:58:20,874 - #2 program
INFO  21:58:20,874 - #43 MJProgram
INFO  21:58:20,874 - #43 int
INFO  21:58:20,875 - #43 a
INFO  21:58:20,876 - #31 ,
INFO  21:58:20,877 - #43 b
INFO  21:58:20,877 - #31 ,
INFO  21:58:20,877 - #43 c
INFO  21:58:20,877 - #31 ,
INFO  21:58:20,877 - #43 d
INFO  21:58:20,877 - #33 ;
INFO  21:58:20,877 - #9 const
INFO  21:58:20,878 - #43 int
INFO  21:58:20,878 - #43 term
INFO  21:58:20,878 - #19 =
INFO  21:58:20,878 - #42 0
INFO  21:58:20,878 - #33 ;
INFO  21:58:20,878 - #9 const
INFO  21:58:20,879 - #43 int
INFO  21:58:20,879 - #43 y
INFO  21:58:20,879 - #19 =
INFO  21:58:20,888 - #42 3
INFO  21:58:20,888 - #33 ;
INFO  21:58:20,888 - #35 {
INFO  21:58:20,888 - #43 int
INFO  21:58:20,890 - #43 k
INFO  21:58:20,891 - #37 (
INFO  21:58:20,891 - #43 int
INFO  21:58:20,891 - #43 a
INFO  21:58:20,891 - #39 [
INFO  21:58:20,891 - #40 ]
INFO  21:58:20,891 - #31 ,
INFO  21:58:20,893 - #43 int
INFO  21:58:20,893 - #43 b
INFO  21:58:20,893 - #38 )
INFO  21:58:20,893 - #35 {
INFO  21:58:20,894 - #41 return
INFO  21:58:20,897 - #43 a
INFO  21:58:20,898 - #39 [
INFO  21:58:20,900 - #43 b
INFO  21:58:20,901 - #40 ]
INFO  21:58:20,905 - #33 ;
INFO  21:58:20,905 - #36 }
INFO  21:58:20,905 - #5 void
INFO  21:58:20,907 - #43 main
INFO  21:58:20,907 - #37 (
INFO  21:58:20,908 - #38 )
INFO  21:58:20,908 - #43 int
INFO  21:58:20,908 - #43 x
INFO  21:58:20,908 - #33 ;
INFO  21:58:20,909 - #43 bool
INFO  21:58:20,909 - #43 p
INFO  21:58:20,909 - #33 ;
INFO  21:58:20,909 - #43 bool
INFO  21:58:20,909 - #43 r
INFO  21:58:20,909 - #33 ;
INFO  21:58:20,909 - #43 bool
INFO  21:58:20,909 - #43 q
INFO  21:58:20,909 - #33 ;
INFO  21:58:20,909 - #43 int
INFO  21:58:20,909 - #43 br
INFO  21:58:20,909 - #39 [
INFO  21:58:20,909 - #40 ]
INFO  21:58:20,909 - #33 ;
INFO  21:58:20,910 - #43 int
INFO  21:58:20,910 - #43 indexes
INFO  21:58:20,910 - #39 [
INFO  21:58:20,910 - #40 ]
INFO  21:58:20,910 - #33 ;
INFO  21:58:20,910 - #43 int
INFO  21:58:20,910 - #43 dd
INFO  21:58:20,910 - #33 ;
INFO  21:58:20,910 - #43 int
INFO  21:58:20,910 - #43 ee
INFO  21:58:20,910 - #33 ;
INFO  21:58:20,910 - #43 int
INFO  21:58:20,910 - #43 ff
INFO  21:58:20,910 - #33 ;
INFO  21:58:20,910 - #43 int
INFO  21:58:20,910 - #43 gg
INFO  21:58:20,911 - #33 ;
INFO  21:58:20,911 - #43 char
INFO  21:58:20,911 - #43 hh
INFO  21:58:20,911 - #33 ;
INFO  21:58:20,911 - #43 int
INFO  21:58:20,911 - #43 ii
INFO  21:58:20,911 - #33 ;
INFO  21:58:20,911 - #35 {
INFO  21:58:20,912 - #36 }
INFO  21:58:20,912 - #36 }
INFO  21:58:20,919 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListSingle(
                    VarClassNoArray(
                     a
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                  VarClassNoArray(
                   b
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               d
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           int
          ) [Type]
          ConstListSingle(
            ConstListNoArray(
             term
              ValuesNumber(
               0
              ) [ValuesNumber]
            ) [ConstListNoArray]
          ) [ConstListSingle]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassArray(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclClassArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassNoArray(
              Type(
               int
              ) [Type]
             b
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         a
                        ) [DesigIdent]
                        OptionalDesignatorArray(
                          HelperClass(
                          ) [HelperClass]
                          LSquareClass(
                          ) [LSquareClass]
                          ClassOneClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       b
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassOneClass]
                        ) [OptionalDesignatorArray]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                VarDeclListClass(
                  VarDeclListClass(
                    VarDeclListClass(
                      VarDeclListClass(
                        VarDeclListClass(
                          VarDeclListClass(
                            VarDeclListClass(
                              NoVarDeclList(
                              ) [NoVarDeclList]
                              VarDeclClass(
                                Type(
                                 int
                                ) [Type]
                                VarListSingle(
                                  VarClassNoArray(
                                   x
                                  ) [VarClassNoArray]
                                ) [VarListSingle]
                              ) [VarDeclClass]
                            ) [VarDeclListClass]
                            VarDeclClass(
                              Type(
                               bool
                              ) [Type]
                              VarListSingle(
                                VarClassNoArray(
                                 p
                                ) [VarClassNoArray]
                              ) [VarListSingle]
                            ) [VarDeclClass]
                          ) [VarDeclListClass]
                          VarDeclClass(
                            Type(
                             bool
                            ) [Type]
                            VarListSingle(
                              VarClassNoArray(
                               r
                              ) [VarClassNoArray]
                            ) [VarListSingle]
                          ) [VarDeclClass]
                        ) [VarDeclListClass]
                        VarDeclClass(
                          Type(
                           bool
                          ) [Type]
                          VarListSingle(
                            VarClassNoArray(
                             q
                            ) [VarClassNoArray]
                          ) [VarListSingle]
                        ) [VarDeclClass]
                      ) [VarDeclListClass]
                      VarDeclClass(
                        Type(
                         int
                        ) [Type]
                        VarListSingle(
                          VarClassArray(
                           br
                          ) [VarClassArray]
                        ) [VarListSingle]
                      ) [VarDeclClass]
                    ) [VarDeclListClass]
                    VarDeclClass(
                      Type(
                       int
                      ) [Type]
                      VarListSingle(
                        VarClassArray(
                         indexes
                        ) [VarClassArray]
                      ) [VarListSingle]
                    ) [VarDeclClass]
                  ) [VarDeclListClass]
                  VarDeclClass(
                    Type(
                     int
                    ) [Type]
                    VarListSingle(
                      VarClassNoArray(
                       dd
                      ) [VarClassNoArray]
                    ) [VarListSingle]
                  ) [VarDeclClass]
                ) [VarDeclListClass]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     ee
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 int
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   ff
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 gg
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             char
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               hh
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             ii
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      NoStmt(
      ) [NoStmt]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:58:20,920 - ===================================
INFO  21:58:20,923 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  21:58:20,924 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  21:58:20,924 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  21:58:20,924 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  21:58:20,924 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  21:58:20,924 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  21:58:20,924 - CONST VALUE 0 IS BEING USED! ON LINE 4
INFO  21:58:20,924 - CONST VARIABLE term IS BEING DEFINED! ON LINE 4
INFO  21:58:20,924 - CONST VALUE 3 IS BEING USED! ON LINE 5
INFO  21:58:20,924 - CONST VARIABLE y IS BEING DEFINED! ON LINE 5
INFO  21:58:20,924 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 9
INFO  21:58:20,924 - FORMAL ARRAY PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  21:58:20,924 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  21:58:20,925 - METHOD BODY STARTING!
INFO  21:58:20,925 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  21:58:20,925 - WE ARE USING A VARIABLE OF TYPE int ON LINE 9
INFO  21:58:20,925 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  21:58:20,925 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  21:58:20,925 - CURRENT VARIABLE IN USE IS a AND IT IS OF TYPE array
INFO  21:58:20,925 - WE ARE USING AN ARRAY OF TYPE int ON LINE 9
INFO  21:58:20,925 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  21:58:20,925 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  21:58:20,925 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 9
INFO  21:58:20,925 - METHOD BODY ENDING!
INFO  21:58:20,925 - END OF DEFINING FUNCTION k
INFO  21:58:20,925 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 23
INFO  21:58:20,925 - VARIABLE x IS BEING DEFINED! ON LINE 24
INFO  21:58:20,925 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 24
INFO  21:58:20,925 - VARIABLE p IS BEING DEFINED! ON LINE 26
INFO  21:58:20,925 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 26
INFO  21:58:20,926 - VARIABLE r IS BEING DEFINED! ON LINE 27
INFO  21:58:20,926 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 27
INFO  21:58:20,926 - VARIABLE q IS BEING DEFINED! ON LINE 28
INFO  21:58:20,926 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 28
INFO  21:58:20,926 - ARRAY VARIABLE br IS BEING DEFINED! ON LINE 31
INFO  21:58:20,926 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 31
INFO  21:58:20,926 - ARRAY VARIABLE indexes IS BEING DEFINED! ON LINE 32
INFO  21:58:20,926 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 32
INFO  21:58:20,926 - VARIABLE dd IS BEING DEFINED! ON LINE 33
INFO  21:58:20,926 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 33
INFO  21:58:20,926 - VARIABLE ee IS BEING DEFINED! ON LINE 34
INFO  21:58:20,926 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 34
INFO  21:58:20,926 - VARIABLE ff IS BEING DEFINED! ON LINE 35
INFO  21:58:20,926 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 35
INFO  21:58:20,926 - VARIABLE gg IS BEING DEFINED! ON LINE 36
INFO  21:58:20,927 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 36
INFO  21:58:20,927 - VARIABLE hh IS BEING DEFINED! ON LINE 37
INFO  21:58:20,927 - VARIABLES OF TYPE char HAVE BEEN DEFINED! ON LINE 37
INFO  21:58:20,927 - VARIABLE ii IS BEING DEFINED! ON LINE 38
INFO  21:58:20,927 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 38
INFO  21:58:20,927 - METHOD BODY STARTING!
INFO  21:58:20,927 - METHOD BODY ENDING!
INFO  21:58:20,927 - END OF DEFINING FUNCTION main
INFO  21:58:20,927 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  21:58:20,927 -  Deklarisanih promenljivih ima = 16
INFO  21:58:20,927 - ===================================
INFO  21:58:20,935 - Parsiranje uspesno zavrseno!
