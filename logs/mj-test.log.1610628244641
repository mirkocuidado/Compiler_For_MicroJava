INFO  13:43:42,482 - Compiling source file: C:\Users\38164\OneDrive\Desktop\Izvorni kod plz\MJCompiler\test\program.mj
INFO  13:43:42,600 - #2 program
INFO  13:43:42,601 - #43 MJProgram
INFO  13:43:42,601 - #43 int
INFO  13:43:42,603 - #43 a
INFO  13:43:42,604 - #31 ,
INFO  13:43:42,605 - #43 b
INFO  13:43:42,605 - #31 ,
INFO  13:43:42,605 - #43 c
INFO  13:43:42,605 - #31 ,
INFO  13:43:42,605 - #43 d
INFO  13:43:42,605 - #33 ;
INFO  13:43:42,606 - #9 const
INFO  13:43:42,606 - #43 int
INFO  13:43:42,606 - #43 term
INFO  13:43:42,607 - #19 =
INFO  13:43:42,607 - #42 0
INFO  13:43:42,607 - #33 ;
INFO  13:43:42,608 - #9 const
INFO  13:43:42,609 - #43 int
INFO  13:43:42,609 - #43 y
INFO  13:43:42,609 - #19 =
INFO  13:43:42,618 - #42 3
INFO  13:43:42,618 - #33 ;
INFO  13:43:42,618 - #35 {
INFO  13:43:42,618 - #43 int
INFO  13:43:42,620 - #43 k
INFO  13:43:42,620 - #37 (
INFO  13:43:42,620 - #43 int
INFO  13:43:42,620 - #43 a
INFO  13:43:42,620 - #31 ,
INFO  13:43:42,621 - #43 int
INFO  13:43:42,621 - #43 b
INFO  13:43:42,621 - #38 )
INFO  13:43:42,621 - #35 {
INFO  13:43:42,622 - #41 return
INFO  13:43:42,626 - #43 b
INFO  13:43:42,627 - #33 ;
INFO  13:43:42,631 - #36 }
INFO  13:43:42,632 - #5 void
INFO  13:43:42,635 - #43 main
INFO  13:43:42,636 - #37 (
INFO  13:43:42,636 - #38 )
INFO  13:43:42,637 - #43 int
INFO  13:43:42,637 - #43 x
INFO  13:43:42,637 - #33 ;
INFO  13:43:42,637 - #43 bool
INFO  13:43:42,638 - #43 p
INFO  13:43:42,638 - #33 ;
INFO  13:43:42,638 - #43 bool
INFO  13:43:42,638 - #43 r
INFO  13:43:42,638 - #33 ;
INFO  13:43:42,638 - #43 bool
INFO  13:43:42,638 - #43 q
INFO  13:43:42,638 - #33 ;
INFO  13:43:42,638 - #43 int
INFO  13:43:42,639 - #43 dd
INFO  13:43:42,639 - #33 ;
INFO  13:43:42,639 - #35 {
INFO  13:43:42,639 - #43 x
INFO  13:43:42,639 - #19 =
INFO  13:43:42,639 - #42 2
INFO  13:43:42,641 - #33 ;
INFO  13:43:42,642 - #43 dd
INFO  13:43:42,642 - #19 =
INFO  13:43:42,642 - #42 2
INFO  13:43:42,643 - #33 ;
INFO  13:43:42,643 - #14 if
INFO  13:43:42,643 - #37 (
INFO  13:43:42,643 - #43 x
INFO  13:43:42,643 - #20 ==
INFO  13:43:42,643 - #43 dd
INFO  13:43:42,645 - #38 )
INFO  13:43:42,648 - #43 p
INFO  13:43:42,648 - #19 =
INFO  13:43:42,648 - #45 false
INFO  13:43:42,648 - #33 ;
INFO  13:43:42,648 - #43 elsep
INFO  13:43:42,651 - #19 =
INFO  13:43:42,651 - #45 true
INFO  13:43:42,652 - #33 ;
INFO  13:43:42,652 - #43 x
INFO  13:43:42,652 - #19 =
INFO  13:43:42,652 - #43 p
INFO  13:43:42,652 - #34 ?
INFO  13:43:42,652 - #42 10
INFO  13:43:42,654 - #32 :
INFO  13:43:42,654 - #42 20
INFO  13:43:42,656 - #33 ;
INFO  13:43:42,656 - #18 print
INFO  13:43:42,656 - #37 (
INFO  13:43:42,656 - #43 x
INFO  13:43:42,656 - #38 )
INFO  13:43:42,658 - #33 ;
INFO  13:43:42,659 - #43 p
INFO  13:43:42,659 - #19 =
INFO  13:43:42,660 - #45 false
INFO  13:43:42,660 - #33 ;
INFO  13:43:42,661 - #12 do
INFO  13:43:42,661 - #35 {
INFO  13:43:42,662 - #18 print
INFO  13:43:42,664 - #37 (
INFO  13:43:42,664 - #42 0
INFO  13:43:42,664 - #38 )
INFO  13:43:42,664 - #33 ;
INFO  13:43:42,664 - #36 }
INFO  13:43:42,664 - #13 while
INFO  13:43:42,664 - #37 (
INFO  13:43:42,664 - #43 p
INFO  13:43:42,666 - #38 )
INFO  13:43:42,668 - #33 ;
INFO  13:43:42,669 - #43 r
INFO  13:43:42,669 - #19 =
INFO  13:43:42,670 - #45 true
INFO  13:43:42,670 - #33 ;
INFO  13:43:42,670 - #12 do
INFO  13:43:42,670 - #35 {
INFO  13:43:42,670 - #18 print
INFO  13:43:42,670 - #37 (
INFO  13:43:42,670 - #42 1
INFO  13:43:42,670 - #38 )
INFO  13:43:42,670 - #33 ;
INFO  13:43:42,670 - #43 r
INFO  13:43:42,671 - #19 =
INFO  13:43:42,671 - #45 false
INFO  13:43:42,671 - #33 ;
INFO  13:43:42,671 - #36 }
INFO  13:43:42,671 - #13 while
INFO  13:43:42,671 - #37 (
INFO  13:43:42,671 - #43 r
INFO  13:43:42,671 - #38 )
INFO  13:43:42,672 - #33 ;
INFO  13:43:42,672 - #43 x
INFO  13:43:42,672 - #19 =
INFO  13:43:42,672 - #42 2
INFO  13:43:42,672 - #33 ;
INFO  13:43:42,673 - #18 print
INFO  13:43:42,673 - #37 (
INFO  13:43:42,673 - #44 a
INFO  13:43:42,673 - #38 )
INFO  13:43:42,674 - #33 ;
INFO  13:43:42,674 - #36 }
INFO  13:43:42,675 - #36 }
INFO  13:43:42,694 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  GroupDeclarations(
    GroupDeclarations(
      GroupDeclarations(
        NoGroupDecl(
        ) [NoGroupDecl]
        GroupDeclarationVars(
          VarDeclClass(
            Type(
             int
            ) [Type]
            VarListClass(
              VarListClass(
                VarListClass(
                  VarListSingle(
                    VarClassNoArray(
                     a
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                  VarClassNoArray(
                   b
                  ) [VarClassNoArray]
                ) [VarListClass]
                VarClassNoArray(
                 c
                ) [VarClassNoArray]
              ) [VarListClass]
              VarClassNoArray(
               d
              ) [VarClassNoArray]
            ) [VarListClass]
          ) [VarDeclClass]
        ) [GroupDeclarationVars]
      ) [GroupDeclarations]
      GroupDeclarationsConsts(
        ConstDeclClass(
          Type(
           int
          ) [Type]
          ConstListSingle(
            ConstListNoArray(
             term
              ValuesNumber(
               0
              ) [ValuesNumber]
            ) [ConstListNoArray]
          ) [ConstListSingle]
        ) [ConstDeclClass]
      ) [GroupDeclarationsConsts]
    ) [GroupDeclarations]
    GroupDeclarationsConsts(
      ConstDeclClass(
        Type(
         int
        ) [Type]
        ConstListSingle(
          ConstListNoArray(
           y
            ValuesNumber(
             3
            ) [ValuesNumber]
          ) [ConstListNoArray]
        ) [ConstListSingle]
      ) [ConstDeclClass]
    ) [GroupDeclarationsConsts]
  ) [GroupDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        ReturnValueClassNoVoid(
          Type(
           int
          ) [Type]
         k
        ) [ReturnValueClassNoVoid]
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclClassNoArray(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclClassNoArray]
            ) [SingleFormalParamDecl]
            FormalParamDeclClassNoArray(
              Type(
               int
              ) [Type]
             b
            ) [FormalParamDeclClassNoArray]
          ) [FormalParamDecls]
        ) [FormParams]
        NoVarDeclList(
        ) [NoVarDeclList]
        LBraceClass(
        ) [LBraceClass]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            ReturnNonTerminalClass(
            ) [ReturnNonTerminalClass]
            ClassOneClass(
              NormalExpressionClass(
                ExprFirstOptionClassWithMinus(
                  TermClass(
                    DesignatorClass(
                      Designator(
                        DesigIdent(
                         b
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                    ) [DesignatorClass]
                    NoTermOptionalListClass(
                    ) [NoTermOptionalListClass]
                  ) [TermClass]
                  NoExprOptionalListClass(
                  ) [NoExprOptionalListClass]
                ) [ExprFirstOptionClassWithMinus]
              ) [NormalExpressionClass]
            ) [ClassOneClass]
          ) [ReturnExpr]
        ) [Statements]
        RBraceClass(
        ) [RBraceClass]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      ReturnValueClassVoid(
       main
      ) [ReturnValueClassVoid]
      NoFormParam(
      ) [NoFormParam]
      VarDeclListClass(
        VarDeclListClass(
          VarDeclListClass(
            VarDeclListClass(
              VarDeclListClass(
                NoVarDeclList(
                ) [NoVarDeclList]
                VarDeclClass(
                  Type(
                   int
                  ) [Type]
                  VarListSingle(
                    VarClassNoArray(
                     x
                    ) [VarClassNoArray]
                  ) [VarListSingle]
                ) [VarDeclClass]
              ) [VarDeclListClass]
              VarDeclClass(
                Type(
                 bool
                ) [Type]
                VarListSingle(
                  VarClassNoArray(
                   p
                  ) [VarClassNoArray]
                ) [VarListSingle]
              ) [VarDeclClass]
            ) [VarDeclListClass]
            VarDeclClass(
              Type(
               bool
              ) [Type]
              VarListSingle(
                VarClassNoArray(
                 r
                ) [VarClassNoArray]
              ) [VarListSingle]
            ) [VarDeclClass]
          ) [VarDeclListClass]
          VarDeclClass(
            Type(
             bool
            ) [Type]
            VarListSingle(
              VarClassNoArray(
               q
              ) [VarClassNoArray]
            ) [VarListSingle]
          ) [VarDeclClass]
        ) [VarDeclListClass]
        VarDeclClass(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarClassNoArray(
             dd
            ) [VarClassNoArray]
          ) [VarListSingle]
        ) [VarDeclClass]
      ) [VarDeclListClass]
      LBraceClass(
      ) [LBraceClass]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              Assignment(
                                DesignatorStatementOptionsClassAssignExpression(
                                  Designator(
                                    DesigIdent(
                                     x
                                    ) [DesigIdent]
                                    NoOptionalDesignatorClass(
                                    ) [NoOptionalDesignatorClass]
                                  ) [Designator]
                                  AssignOpClass(
                                    AssignOperationClass(
                                    ) [AssignOperationClass]
                                  ) [AssignOpClass]
                                  ClassOneClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          NumberConst(
                                           2
                                          ) [NumberConst]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                  ) [ClassOneClass]
                                ) [DesignatorStatementOptionsClassAssignExpression]
                              ) [Assignment]
                            ) [Statements]
                            Assignment(
                              DesignatorStatementOptionsClassAssignExpression(
                                Designator(
                                  DesigIdent(
                                   dd
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                AssignOpClass(
                                  AssignOperationClass(
                                  ) [AssignOperationClass]
                                ) [AssignOpClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        NumberConst(
                                         2
                                        ) [NumberConst]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [DesignatorStatementOptionsClassAssignExpression]
                            ) [Assignment]
                          ) [Statements]
                          IfStatement(
                            IfConditionNoError(
                              ConditionClass(
                                CondTermClass(
                                  CondFactClass(
                                    NormalExpressionClass(
                                      ExprFirstOptionClassWithMinus(
                                        TermClass(
                                          DesignatorClass(
                                            Designator(
                                              DesigIdent(
                                               x
                                              ) [DesigIdent]
                                              NoOptionalDesignatorClass(
                                              ) [NoOptionalDesignatorClass]
                                            ) [Designator]
                                          ) [DesignatorClass]
                                          NoTermOptionalListClass(
                                          ) [NoTermOptionalListClass]
                                        ) [TermClass]
                                        NoExprOptionalListClass(
                                        ) [NoExprOptionalListClass]
                                      ) [ExprFirstOptionClassWithMinus]
                                    ) [NormalExpressionClass]
                                    CondFactOptionalClass(
                                      RelationOperationClassEqualComparation(
                                      ) [RelationOperationClassEqualComparation]
                                      NormalExpressionClass(
                                        ExprFirstOptionClassWithMinus(
                                          TermClass(
                                            DesignatorClass(
                                              Designator(
                                                DesigIdent(
                                                 dd
                                                ) [DesigIdent]
                                                NoOptionalDesignatorClass(
                                                ) [NoOptionalDesignatorClass]
                                              ) [Designator]
                                            ) [DesignatorClass]
                                            NoTermOptionalListClass(
                                            ) [NoTermOptionalListClass]
                                          ) [TermClass]
                                          NoExprOptionalListClass(
                                          ) [NoExprOptionalListClass]
                                        ) [ExprFirstOptionClassWithMinus]
                                      ) [NormalExpressionClass]
                                    ) [CondFactOptionalClass]
                                  ) [CondFactClass]
                                  NoCondTermOptionalClass(
                                  ) [NoCondTermOptionalClass]
                                ) [CondTermClass]
                                NoConditionOptionalClass(
                                ) [NoConditionOptionalClass]
                              ) [ConditionClass]
                            ) [IfConditionNoError]
                            Assignment(
                              DesignatorStatementOptionsClassAssignExpression(
                                Designator(
                                  DesigIdent(
                                   p
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                                AssignOpClass(
                                  AssignOperationClass(
                                  ) [AssignOperationClass]
                                ) [AssignOpClass]
                                ClassOneClass(
                                  NormalExpressionClass(
                                    ExprFirstOptionClassWithMinus(
                                      TermClass(
                                        BooleanClassConstFactor(
                                         false
                                        ) [BooleanClassConstFactor]
                                        NoTermOptionalListClass(
                                        ) [NoTermOptionalListClass]
                                      ) [TermClass]
                                      NoExprOptionalListClass(
                                      ) [NoExprOptionalListClass]
                                    ) [ExprFirstOptionClassWithMinus]
                                  ) [NormalExpressionClass]
                                ) [ClassOneClass]
                              ) [DesignatorStatementOptionsClassAssignExpression]
                            ) [Assignment]
                            Empty(
                            ) [Empty]
                            NoOptionalStatement(
                            ) [NoOptionalStatement]
                          ) [IfStatement]
                        ) [Statements]
                        Assignment(
                          DesignatorStatementOptionsClassAssignExpression(
                            Designator(
                              DesigIdent(
                               elsep
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                            AssignOpClass(
                              AssignOperationClass(
                              ) [AssignOperationClass]
                            ) [AssignOpClass]
                            ClassOneClass(
                              NormalExpressionClass(
                                ExprFirstOptionClassWithMinus(
                                  TermClass(
                                    BooleanClassConstFactor(
                                     true
                                    ) [BooleanClassConstFactor]
                                    NoTermOptionalListClass(
                                    ) [NoTermOptionalListClass]
                                  ) [TermClass]
                                  NoExprOptionalListClass(
                                  ) [NoExprOptionalListClass]
                                ) [ExprFirstOptionClassWithMinus]
                              ) [NormalExpressionClass]
                            ) [ClassOneClass]
                          ) [DesignatorStatementOptionsClassAssignExpression]
                        ) [Assignment]
                      ) [Statements]
                      Assignment(
                        DesignatorStatementOptionsClassAssignExpression(
                          Designator(
                            DesigIdent(
                             x
                            ) [DesigIdent]
                            NoOptionalDesignatorClass(
                            ) [NoOptionalDesignatorClass]
                          ) [Designator]
                          AssignOpClass(
                            AssignOperationClass(
                            ) [AssignOperationClass]
                          ) [AssignOpClass]
                          ClassTwoClass(
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  DesignatorClass(
                                    Designator(
                                      DesigIdent(
                                       p
                                      ) [DesigIdent]
                                      NoOptionalDesignatorClass(
                                      ) [NoOptionalDesignatorClass]
                                    ) [Designator]
                                  ) [DesignatorClass]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                            TernaryClass(
                            ) [TernaryClass]
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   10
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                            ColonClass(
                            ) [ColonClass]
                            NormalExpressionClass(
                              ExprFirstOptionClassWithMinus(
                                TermClass(
                                  NumberConst(
                                   20
                                  ) [NumberConst]
                                  NoTermOptionalListClass(
                                  ) [NoTermOptionalListClass]
                                ) [TermClass]
                                NoExprOptionalListClass(
                                ) [NoExprOptionalListClass]
                              ) [ExprFirstOptionClassWithMinus]
                            ) [NormalExpressionClass]
                          ) [ClassTwoClass]
                        ) [DesignatorStatementOptionsClassAssignExpression]
                      ) [Assignment]
                    ) [Statements]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   x
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         p
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              BooleanClassConstFactor(
                               false
                              ) [BooleanClassConstFactor]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
                DoWhileStatement(
                  DoClass(
                  ) [DoClass]
                  StatementStatement(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      PrintStmt(
                        ClassOneClass(
                          NormalExpressionClass(
                            ExprFirstOptionClassWithMinus(
                              TermClass(
                                NumberConst(
                                 0
                                ) [NumberConst]
                                NoTermOptionalListClass(
                                ) [NoTermOptionalListClass]
                              ) [TermClass]
                              NoExprOptionalListClass(
                              ) [NoExprOptionalListClass]
                            ) [ExprFirstOptionClassWithMinus]
                          ) [NormalExpressionClass]
                        ) [ClassOneClass]
                        NoCommaNumberClass(
                        ) [NoCommaNumberClass]
                      ) [PrintStmt]
                    ) [Statements]
                  ) [StatementStatement]
                  LParenClass(
                  ) [LParenClass]
                  ConditionClass(
                    CondTermClass(
                      CondFactClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              DesignatorClass(
                                Designator(
                                  DesigIdent(
                                   p
                                  ) [DesigIdent]
                                  NoOptionalDesignatorClass(
                                  ) [NoOptionalDesignatorClass]
                                ) [Designator]
                              ) [DesignatorClass]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                        NoCondFactOptionalClass(
                        ) [NoCondFactOptionalClass]
                      ) [CondFactClass]
                      NoCondTermOptionalClass(
                      ) [NoCondTermOptionalClass]
                    ) [CondTermClass]
                    NoConditionOptionalClass(
                    ) [NoConditionOptionalClass]
                  ) [ConditionClass]
                  RParenClass(
                  ) [RParenClass]
                ) [DoWhileStatement]
              ) [Statements]
              Assignment(
                DesignatorStatementOptionsClassAssignExpression(
                  Designator(
                    DesigIdent(
                     r
                    ) [DesigIdent]
                    NoOptionalDesignatorClass(
                    ) [NoOptionalDesignatorClass]
                  ) [Designator]
                  AssignOpClass(
                    AssignOperationClass(
                    ) [AssignOperationClass]
                  ) [AssignOpClass]
                  ClassOneClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          BooleanClassConstFactor(
                           true
                          ) [BooleanClassConstFactor]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                  ) [ClassOneClass]
                ) [DesignatorStatementOptionsClassAssignExpression]
              ) [Assignment]
            ) [Statements]
            DoWhileStatement(
              DoClass(
              ) [DoClass]
              StatementStatement(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    PrintStmt(
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              NumberConst(
                               1
                              ) [NumberConst]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                      NoCommaNumberClass(
                      ) [NoCommaNumberClass]
                    ) [PrintStmt]
                  ) [Statements]
                  Assignment(
                    DesignatorStatementOptionsClassAssignExpression(
                      Designator(
                        DesigIdent(
                         r
                        ) [DesigIdent]
                        NoOptionalDesignatorClass(
                        ) [NoOptionalDesignatorClass]
                      ) [Designator]
                      AssignOpClass(
                        AssignOperationClass(
                        ) [AssignOperationClass]
                      ) [AssignOpClass]
                      ClassOneClass(
                        NormalExpressionClass(
                          ExprFirstOptionClassWithMinus(
                            TermClass(
                              BooleanClassConstFactor(
                               false
                              ) [BooleanClassConstFactor]
                              NoTermOptionalListClass(
                              ) [NoTermOptionalListClass]
                            ) [TermClass]
                            NoExprOptionalListClass(
                            ) [NoExprOptionalListClass]
                          ) [ExprFirstOptionClassWithMinus]
                        ) [NormalExpressionClass]
                      ) [ClassOneClass]
                    ) [DesignatorStatementOptionsClassAssignExpression]
                  ) [Assignment]
                ) [Statements]
              ) [StatementStatement]
              LParenClass(
              ) [LParenClass]
              ConditionClass(
                CondTermClass(
                  CondFactClass(
                    NormalExpressionClass(
                      ExprFirstOptionClassWithMinus(
                        TermClass(
                          DesignatorClass(
                            Designator(
                              DesigIdent(
                               r
                              ) [DesigIdent]
                              NoOptionalDesignatorClass(
                              ) [NoOptionalDesignatorClass]
                            ) [Designator]
                          ) [DesignatorClass]
                          NoTermOptionalListClass(
                          ) [NoTermOptionalListClass]
                        ) [TermClass]
                        NoExprOptionalListClass(
                        ) [NoExprOptionalListClass]
                      ) [ExprFirstOptionClassWithMinus]
                    ) [NormalExpressionClass]
                    NoCondFactOptionalClass(
                    ) [NoCondFactOptionalClass]
                  ) [CondFactClass]
                  NoCondTermOptionalClass(
                  ) [NoCondTermOptionalClass]
                ) [CondTermClass]
                NoConditionOptionalClass(
                ) [NoConditionOptionalClass]
              ) [ConditionClass]
              RParenClass(
              ) [RParenClass]
            ) [DoWhileStatement]
          ) [Statements]
          Assignment(
            DesignatorStatementOptionsClassAssignExpression(
              Designator(
                DesigIdent(
                 x
                ) [DesigIdent]
                NoOptionalDesignatorClass(
                ) [NoOptionalDesignatorClass]
              ) [Designator]
              AssignOpClass(
                AssignOperationClass(
                ) [AssignOperationClass]
              ) [AssignOpClass]
              ClassOneClass(
                NormalExpressionClass(
                  ExprFirstOptionClassWithMinus(
                    TermClass(
                      NumberConst(
                       2
                      ) [NumberConst]
                      NoTermOptionalListClass(
                      ) [NoTermOptionalListClass]
                    ) [TermClass]
                    NoExprOptionalListClass(
                    ) [NoExprOptionalListClass]
                  ) [ExprFirstOptionClassWithMinus]
                ) [NormalExpressionClass]
              ) [ClassOneClass]
            ) [DesignatorStatementOptionsClassAssignExpression]
          ) [Assignment]
        ) [Statements]
        PrintStmt(
          ClassOneClass(
            NormalExpressionClass(
              ExprFirstOptionClassWithMinus(
                TermClass(
                  CharConst(
                   a
                  ) [CharConst]
                  NoTermOptionalListClass(
                  ) [NoTermOptionalListClass]
                ) [TermClass]
                NoExprOptionalListClass(
                ) [NoExprOptionalListClass]
              ) [ExprFirstOptionClassWithMinus]
            ) [NormalExpressionClass]
          ) [ClassOneClass]
          NoCommaNumberClass(
          ) [NoCommaNumberClass]
        ) [PrintStmt]
      ) [Statements]
      RBraceClass(
      ) [RBraceClass]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:43:42,697 - ===================================
INFO  13:43:42,705 - PROGRAM NAME DETECTED => MJProgram ON LINE 1
INFO  13:43:42,705 - VARIABLE a IS BEING DEFINED! ON LINE 2
INFO  13:43:42,705 - VARIABLE b IS BEING DEFINED! ON LINE 2
INFO  13:43:42,706 - VARIABLE c IS BEING DEFINED! ON LINE 2
INFO  13:43:42,706 - VARIABLE d IS BEING DEFINED! ON LINE 2
INFO  13:43:42,706 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 2
INFO  13:43:42,706 - CONST VALUE 0 IS BEING USED! ON LINE 4
INFO  13:43:42,707 - CONST VARIABLE term IS BEING DEFINED! ON LINE 4
INFO  13:43:42,707 - CONST VALUE 3 IS BEING USED! ON LINE 5
INFO  13:43:42,707 - CONST VARIABLE y IS BEING DEFINED! ON LINE 5
INFO  13:43:42,708 - FUNCTION k WITH RETURN VALUE OF TYPE int ON LINE 9
INFO  13:43:42,708 - FORMAL PARAMETER a DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  13:43:42,708 - FORMAL PARAMETER b DEFINED AND IT IS OF TYPE int ON LINE 9
INFO  13:43:42,708 - METHOD BODY STARTING!
INFO  13:43:42,709 - CURRENT VARIABLE IN USE IS b AND IT IS OF TYPE int
INFO  13:43:42,709 - WE ARE USING A VARIABLE OF TYPE int ON LINE 9
INFO  13:43:42,709 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  13:43:42,709 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 9
INFO  13:43:42,710 - SUCCESSFUL RETURN! TYPES: int AND int ! ON LINE 9
INFO  13:43:42,710 - METHOD BODY ENDING!
INFO  13:43:42,710 - END OF DEFINING FUNCTION k
INFO  13:43:42,710 - FUNCTION main WITH VOID AS RETURN VALUE!  ON LINE 23
INFO  13:43:42,710 - VARIABLE x IS BEING DEFINED! ON LINE 24
INFO  13:43:42,710 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 24
INFO  13:43:42,711 - VARIABLE p IS BEING DEFINED! ON LINE 26
INFO  13:43:42,711 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 26
INFO  13:43:42,711 - VARIABLE r IS BEING DEFINED! ON LINE 27
INFO  13:43:42,711 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 27
INFO  13:43:42,711 - VARIABLE q IS BEING DEFINED! ON LINE 28
INFO  13:43:42,711 - VARIABLES OF TYPE bool HAVE BEEN DEFINED! ON LINE 28
INFO  13:43:42,711 - VARIABLE dd IS BEING DEFINED! ON LINE 32
INFO  13:43:42,711 - VARIABLES OF TYPE int HAVE BEEN DEFINED! ON LINE 32
INFO  13:43:42,711 - METHOD BODY STARTING!
INFO  13:43:42,711 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  13:43:42,712 - BEGINNING OF AN ASSIGNEMENT! ON LINE 35
INFO  13:43:42,712 - CONST NUMBER 2 ON LINE 35
INFO  13:43:42,712 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  13:43:42,712 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 35
INFO  13:43:42,712 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 35
INFO  13:43:42,712 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  13:43:42,712 - BEGINNING OF AN ASSIGNEMENT! ON LINE 36
INFO  13:43:42,712 - CONST NUMBER 2 ON LINE 36
INFO  13:43:42,712 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  13:43:42,713 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 36
INFO  13:43:42,713 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 36
INFO  13:43:42,713 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  13:43:42,713 - WE ARE USING A VARIABLE OF TYPE int ON LINE 38
INFO  13:43:42,713 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  13:43:42,713 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  13:43:42,713 - CURRENT VARIABLE IN USE IS dd AND IT IS OF TYPE int
INFO  13:43:42,713 - WE ARE USING A VARIABLE OF TYPE int ON LINE 38
INFO  13:43:42,713 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  13:43:42,713 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 38
INFO  13:43:42,714 - USING TWO EXPRESSIONS OF TYPE int ON LINE 38
INFO  13:43:42,714 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  13:43:42,714 - BEGINNING OF AN ASSIGNEMENT! ON LINE 39
INFO  13:43:42,714 - CONST CHAR false ON LINE 39
INFO  13:43:42,714 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  13:43:42,714 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 39
INFO  13:43:42,714 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 39
ERROR 13:43:42,715 - VARIABLE OF NAME elsep IS NOT DEFINED!
INFO  13:43:42,715 - BEGINNING OF AN ASSIGNEMENT! ON LINE 40
INFO  13:43:42,715 - CONST CHAR true ON LINE 40
INFO  13:43:42,715 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
INFO  13:43:42,715 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 40
ERROR 13:43:42,715 - ASSIGNEMENT FAILED! TYPES: void AND boolean ! ON LINE 40
INFO  13:43:42,715 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  13:43:42,715 - BEGINNING OF AN ASSIGNEMENT! ON LINE 42
INFO  13:43:42,715 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  13:43:42,715 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 42
INFO  13:43:42,715 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  13:43:42,716 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  13:43:42,716 - CONST NUMBER 10 ON LINE 42
INFO  13:43:42,716 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  13:43:42,716 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  13:43:42,716 - CONST NUMBER 20 ON LINE 42
INFO  13:43:42,716 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  13:43:42,716 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 42
INFO  13:43:42,716 - SUCCESSFUL TERNARY! TYPES: int AND int ! ON LINE 42
INFO  13:43:42,716 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 42
INFO  13:43:42,716 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  13:43:42,716 - WE ARE USING A VARIABLE OF TYPE int ON LINE 44
INFO  13:43:42,716 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 44
INFO  13:43:42,716 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 44
INFO  13:43:42,717 - PRINT FUNCTION CALL IN USE! ON LINE 44
INFO  13:43:42,717 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  13:43:42,717 - BEGINNING OF AN ASSIGNEMENT! ON LINE 46
INFO  13:43:42,717 - CONST CHAR false ON LINE 46
INFO  13:43:42,717 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  13:43:42,717 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 46
INFO  13:43:42,717 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 46
INFO  13:43:42,717 - CONST NUMBER 0 ON LINE 49
INFO  13:43:42,717 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  13:43:42,717 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 49
INFO  13:43:42,717 - PRINT FUNCTION CALL IN USE! ON LINE 49
INFO  13:43:42,718 - CURRENT VARIABLE IN USE IS p AND IT IS OF TYPE boolean
INFO  13:43:42,718 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 51
INFO  13:43:42,718 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 51
INFO  13:43:42,718 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 51
INFO  13:43:42,718 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 51
INFO  13:43:42,718 - ENDING OF A DO...WHILE LOOP! ON LINE 48
INFO  13:43:42,718 - CURRENT VARIABLE IN USE IS r AND IT IS OF TYPE boolean
INFO  13:43:42,718 - BEGINNING OF AN ASSIGNEMENT! ON LINE 53
INFO  13:43:42,718 - CONST CHAR true ON LINE 53
INFO  13:43:42,718 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  13:43:42,718 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 53
INFO  13:43:42,718 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 53
INFO  13:43:42,718 - CONST NUMBER 1 ON LINE 56
INFO  13:43:42,719 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  13:43:42,719 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 56
INFO  13:43:42,719 - PRINT FUNCTION CALL IN USE! ON LINE 56
INFO  13:43:42,719 - CURRENT VARIABLE IN USE IS r AND IT IS OF TYPE boolean
INFO  13:43:42,719 - BEGINNING OF AN ASSIGNEMENT! ON LINE 57
INFO  13:43:42,719 - CONST CHAR false ON LINE 57
INFO  13:43:42,719 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 57
INFO  13:43:42,719 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 57
INFO  13:43:42,719 - SUCCESSFUL ASSIGNEMENT! TYPES: boolean AND boolean ! ON LINE 57
INFO  13:43:42,719 - CURRENT VARIABLE IN USE IS r AND IT IS OF TYPE boolean
INFO  13:43:42,719 - WE ARE USING A VARIABLE OF TYPE boolean ON LINE 58
INFO  13:43:42,719 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  13:43:42,719 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 58
INFO  13:43:42,720 - USING ONLY ONE BOOLEAN IN TERM! ON LINE 58
INFO  13:43:42,720 - ENDING OF A DO...WHILE LOOP! ON LINE 55
INFO  13:43:42,720 - CURRENT VARIABLE IN USE IS x AND IT IS OF TYPE int
INFO  13:43:42,720 - BEGINNING OF AN ASSIGNEMENT! ON LINE 60
INFO  13:43:42,720 - CONST NUMBER 2 ON LINE 60
INFO  13:43:42,720 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  13:43:42,720 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 60
INFO  13:43:42,720 - SUCCESSFUL ASSIGNEMENT! TYPES: int AND int ! ON LINE 60
INFO  13:43:42,720 - CONST CHAR a ON LINE 140
INFO  13:43:42,720 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 140
INFO  13:43:42,720 - USING ONLY ONE EXPRESSION IN TERM! ON LINE 140
INFO  13:43:42,720 - PRINT FUNCTION CALL IN USE! ON LINE 140
INFO  13:43:42,720 - METHOD BODY ENDING!
INFO  13:43:42,720 - END OF DEFINING FUNCTION main
INFO  13:43:42,720 - PROGRAM ENDED => MJProgram ON LINE 1
INFO  13:43:42,720 -  Deklarisanih promenljivih ima = 9
INFO  13:43:42,721 - ===================================
ERROR 13:43:42,722 - Parsiranje NIJE uspesno zavrseno!
