program MJProgram
	int x, y;
	int bla[],zz,cc[];
	const int aa = 5, bb = 6;
	const char cc = 'c', dd= 'd';
	const bool ee = true, ff = false;
	
	class Klasa {
		int duca1, duca2, duca3;
	}
	
	class KlasaDva extends Klasa {
		int aa;
		{
		int f(){ }
		}
	}
	
	class Klasa3 {
	
	}
	
	class Klasa4 {
		{
		void bla(){ }
		}
	}
{
	
	int f() { }
	
	void f() { }
	
	int f(int a) { }
	
	int f(int b, int c[]) { }
	
	void main() int x, i; char c;
	{
		val = new Table;
		
		val.pos = new int [size];
		val.neg = new int [size];
		
		i = 0;
		
		do {
			val.putp(0, i);
			val.putn(0, i);
			i++;
		} while(i<size);
		
		f(c, x, i);
		read(x);
		
		do{
		
		 	if(x <= 0) break;
		 
		 	if (0 <= x && x < size)
		 	{
				val.putp(val.getp(x)+1);
		 	}
			else if (-size < x && x < 0)
		 	{
				val.putn(val.getn(-x)+1);
			}
			
			read(x);
		 
		 }while(true);
		 
		 switch(bla(a,b,c)) { }
		 
		 switch(a*b*c+d) { }
		 
		 switch(a*b*c+d-5/12%'c') { }
		 
		 switch(a*b*c+d) { 
		 
		 case 1 : {
		 	continue;
		 }
		 
		 case 2 : break;
		 
		 case 3 : return new Type[(a)];
		 
		 case 4 : {
		 	switch(1+2){
		 	
		 	}
		 }
		 }
	}
	
	
}